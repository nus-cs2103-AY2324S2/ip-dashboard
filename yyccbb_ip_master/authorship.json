[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"# Nihao project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"3. After that, locate the `src/main/java/Nihao.java` file, right-click it, and choose `Run Nihao.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyccbb":2,"-":22}},{"path":"src/main/java/App.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"public class App {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"    private static PrintHandler printerInstance \u003d PrintHandler.instance;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"    private static Nihao nihao \u003d Nihao.instance;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"        nihao.run();","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":8}},{"path":"src/main/java/Nihao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"public final class Nihao {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"    public static final Nihao instance \u003d new Nihao();","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"//    private static final String LOGO \u003d","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"//            \" ____        _        \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"//            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"//            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"//            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"//            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"    private static final String LOGO \u003d \"::::    ::: ::::::::::: :::    :::     :::      ::::::::  \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"        \":+:+:   :+:     :+:     :+:    :+:   :+: :+:   :+:    :+: \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"        \":+:+:+  +:+     +:+     +:+    +:+  +:+   +:+  +:+    +:+ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"        \"+#+ +:+ +#+     +#+     +#++:++#++ +#++:++#++: +#+    +:+ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"        \"+#+  +#+#+#     +#+     +#+    +#+ +#+     +#+ +#+    +#+ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"        \"#+#   #+#+#     #+#     #+#    #+# #+#     #+# #+#    #+# \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"        \"###    #### ########### ###    ### ###     ###  ########  \";","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    private final String GREETINGS \u003d \"Hello! I\u0027m Nihao.\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    private final String GOODBYE \u003d \"Hope to see you again soon. Goodbye!\";","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"    private final PrintHandler printer \u003d PrintHandler.instance;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    private Nihao() {}","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"        printer.printWithDivider(LOGO);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"        printer.printWithDivider(GREETINGS);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        printer.printWithDivider(GOODBYE);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":27}},{"path":"src/main/java/PrintHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"public final class PrintHandler {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"    public static final PrintHandler instance \u003d new PrintHandler();","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"    private static final String DIVIDER \u003d \"------------------------------------\";","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"    private PrintHandler() {}","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"    public void printWithDivider(String msg) {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"        System.out.println(msg);","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    public void print(String msg) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"        System.out.println(msg);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"java -classpath ..\\bin Nihao \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyccbb":1,"-":20}}]
