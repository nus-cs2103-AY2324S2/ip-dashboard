[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hjungwoo01":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"checkstyle {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"*/","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"    mainClass.set(\"duke.Launcher\");","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hjungwoo01":24,"-":43}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":" * DialogBox class represents a custom control used to display messages in the Duke application.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":" * It includes an image and a text area to show messages from both the user and Duke.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"     * Constructor for DialogBox. Loads the FXML and sets up the layout.","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    private DialogBox() {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"     * Configures the dialog box with appropriate settings based on whether the dialog is for Duke or the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"     * @param isDuke A boolean flag indicating whether the dialog box is for Duke (true) or the user (false).","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"     *               This affects the background color and alignment of the dialog box.","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"    private void setupDialogBox(boolean isDuke) {","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        dialog.setMaxWidth(Double.MAX_VALUE);","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        HBox.setHgrow(dialog, Priority.ALWAYS);","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        dialog.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"        this.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        this.setSpacing(10);","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"        this.setPadding(new Insets(10));","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"        Color bgColor \u003d isDuke ? Color.LIGHTBLUE : Color.LIGHTGRAY;","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"        BackgroundFill fill \u003d new BackgroundFill(bgColor, new CornerRadii(5.0), Insets.EMPTY);","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"        this.setBackground(new Background(fill));","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"        if (isDuke) {","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"            flip();","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a dialog box for user input with specified text and image.","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"     * @param img The image associated with the dialog box (typically the user\u0027s avatar).","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"     * @return A DialogBox instance configured for displaying user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        DialogBox dialogBox \u003d new DialogBox();","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"        dialogBox.dialog.setText(text);","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"        dialogBox.displayPicture.setImage(img);","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"        dialogBox.setupDisplayPicture();","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"        dialogBox.setupDialogBox(false); // false for user","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        return dialogBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a dialog box for Duke\u0027s response with specified text and image.","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"     * @param img The image associated with the dialog box (typically Duke\u0027s avatar).","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"     * @return A DialogBox instance configured for displaying Duke\u0027s response.","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"        DialogBox dialogBox \u003d new DialogBox();","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        dialogBox.dialog.setText(text);","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"        dialogBox.displayPicture.setImage(img);","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"        dialogBox.setupDisplayPicture();","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"        dialogBox.setupDialogBox(true); // true for chatbot","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"        return dialogBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"     * Sets up the display picture by applying a circular clip to the image view.","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"    private void setupDisplayPicture() {","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"        Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"     * Flips the dialog box to change the orientation of the text and image.","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"     * This method is typically used to differentiate between user messages and Duke\u0027s responses.","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"    private void flip() {","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"hjungwoo01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d this.getChildren();","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"hjungwoo01"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"hjungwoo01":117}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Parser;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":" * Represents the main class of the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":" * This class is responsible for initializing the application, handling user input,","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":" * and generating responses.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"    private Storage storage; // The storage handler for loading and saving tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    private TaskList tasks; // The list of tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    private final Ui ui; // The UI handler for interacting with users","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"     * Constructs a new instance of Duke. Initializes the UI, storage, and attempts to load tasks from the storage file.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public Duke() {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"            this.storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"            this.tasks \u003d storage.loadTasks();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"            // If tasks cannot be loaded, initializes an empty TaskList","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"     * Retrieves the welcome message to be displayed to the user at the start of the application.","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"     * @return The welcome message string.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        return ui.showWelcome();","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"     * Processes the user input and returns the response from Duke.","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"     * This method parses the input, executes the corresponding command, and returns the result.","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"     * If an exception occurs during the process, it returns an error message.","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"     * @return The response from Duke based on the user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"hjungwoo01":56,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * DukeException.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents custom exceptions specific to the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It extends the Exception class and is used to handle application-specific error messages.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":" * Represents custom exceptions specific to the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a new DukeException with the specified error message.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"hjungwoo01":22}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":" * Launcher class serves as an entry point to the Duke application, providing a workaround","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":" * for classpath issues typically encountered when launching a JavaFX application.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"public class Launcher {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"     * Main method to launch the Duke application.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"     * @param args Arguments passed to the application.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"hjungwoo01":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"            Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"            FXMLLoader loader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"            Parent root \u003d loader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"            MainWindow mainWindow \u003d loader.getController();","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"            mainWindow.setDuke(duke);","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"            primaryStage.setTitle(\"TaskManager Pro v1.0\");","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"            primaryStage.setScene(new Scene(root));","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"            primaryStage.show();","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"hjungwoo01":28}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import java.util.Timer;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import java.util.TimerTask;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" * Controller class for the main window of the Duke application.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":" * Manages the interaction between the user and the application\u0027s GUI.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"public class MainWindow {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"     * Initializes the main window components and binds properties for dynamic layout changes.","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"     * Sets the Duke instance for the window and displays the welcome message.","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"     * @param d Instance of Duke to be used.","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        this.duke \u003d d;","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        showWelcomeMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"     * Displays the welcome message in the dialog container.","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage));","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"     * Method to handle user input and generate Duke\u0027s response.","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"     * It also checks for an exit command to close the application.","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        );","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"        if (response.equals(\"Bye. See you again.\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"            waitAndExit(1000);","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"     * Closes the application after a specified delay.","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"     * @param millisDelay The delay in milliseconds before closing the application.","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"    private void waitAndExit(long millisDelay) {","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        userInput.setDisable(true);","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"        sendButton.setDisable(true);","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"            @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"            public void run() {","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"                Platform.runLater(Platform::exit);","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"        }, millisDelay);","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"hjungwoo01":91}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * Ui.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class handles the user interface for the Duke application, including input and output.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It provides methods for reading user commands and displaying messages.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":" * Handles the user interface for the Duke application, including input and output.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a goodbye message to the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"     * @return A string containing the goodbye message.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     * Returns an error message.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"     * @param error The error message to be displayed.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"     * @return A string containing the specified error message.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    public String showError(String error) {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"        return error;","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a message indicating that a task has been deleted.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"     * @param tasks       The TaskList containing tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"     * @param removedTask The Task object that has been removed.","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"     * @return A string detailing the deletion of the task and the current number of tasks remaining.","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    public String showDeletedMessage(TaskList tasks, Task removedTask) {","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        String taskWord \u003d tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\";","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + removedTask","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"            + \"\\nNow you have \" + tasks.size() + taskWord + \" in the list.\";","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a welcome message to the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"     * @return A string containing the welcome message.","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        return \"Hello! I\u0027m Nicky!\" + \"\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a message indicating that a task has been added.","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"     * @param tasks The TaskList containing tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"     * @return A string detailing the addition of the task and the current total number of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    public String showAddedTask(TaskList tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"        String taskWord \u003d tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\";","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1)","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"            + \"\\nNow you have \" + tasks.size() + taskWord + \" in the list.\";","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"     * @param task The Task object that has been marked as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"     * @return A string indicating that the specified task has been marked as done,","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"     *      or that it was already marked as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"    public String showMarkedMessage(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"        if (task.isDone()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"            return \"This task is already marked as done:\\n  \" + task;","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"            task.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"     * @param task The Task object that has been marked as not done.","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"     * @return A string indicating that the specified task has been marked as not done,","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"     *      or that it was already marked as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"    public String showUnmarkedMessage(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"        if (task.isDone()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"            task.markAsNotDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task;","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"            return \"This task is already marked as not done:\\n  \" + task;","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":102}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * AddCommand.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a command to add tasks to the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It handles the addition of Todo, Deadline, and Event tasks based on user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.DateTimeUtil;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":" * Represents a command to add tasks to the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    private final String fullCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     * Constructs a new AddCommand object with the provided full command string.","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"     * @param fullCommand the full command string representing the add operation","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    public AddCommand(String fullCommand) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        assert fullCommand !\u003d null \u0026\u0026 !fullCommand.isEmpty() : \"Full command cannot be null or empty\";","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        String[] commandParts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        if (commandParts.length \u003c 2 || commandParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"The description cannot be empty.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        String taskType \u003d commandParts[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        String description \u003d commandParts[1].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"            return addTodoTask(tasks, ui, storage, description);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"            return addDeadlineTask(tasks, ui, storage, description);","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        case \"event\":","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"            return addEventTask(tasks, ui, storage, description);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        default:","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"Please enter a valid task type.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"        return false;","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"    private String addTodoTask(TaskList tasks, Ui ui, Storage storage,","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"                               String description) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"        String response \u003d ui.showAddedTask(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"        return response;","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    private String addDeadlineTask(TaskList tasks, Ui ui, Storage storage,","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"                                   String description) throws DukeException, IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        String[] deadlineParts \u003d description.split(\" /by \");","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"        if (deadlineParts.length \u003c 2 || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"The deadline time or task name is missing.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"        LocalDateTime deadlineTime \u003d DateTimeUtil.parseDateTime(deadlineParts[1].trim());","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        tasks.add(new Deadline(deadlineParts[0].trim(), deadlineTime));","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"        String response \u003d ui.showAddedTask(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"        return response;","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"    private String addEventTask(TaskList tasks, Ui ui, Storage storage,","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"                                String description) throws DukeException, IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"        String[] eventParts \u003d description.split(\" /from \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"        if (eventParts.length \u003c 2 || eventParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"The event time details or event times are missing.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"        String eventDescription \u003d eventParts[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"        String[] timeParts \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"Incomplete event time details. Both start and end times are required.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"        LocalDateTime startTime \u003d DateTimeUtil.parseDateTime(timeParts[0].trim());","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"        LocalDateTime endTime \u003d DateTimeUtil.parseDateTime(timeParts[1].trim());","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"        tasks.add(new Event(eventDescription, startTime, endTime));","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"        String response \u003d ui.showAddedTask(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"        return response;","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":106}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * Command.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class is the base class for all command-related classes in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It defines the common interface and properties that all command classes must have.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":" * Represents a command in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"     * Executes the specific command and returns a response message as a String.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"     * This method must be implemented by all subclasses to define the behavior of the command.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"     * @param tasks   The TaskList containing the list of tasks to be manipulated or queried.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"     * @param ui      The Ui object for interacting with the user interface.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"     * @param storage The Storage object for reading from or writing to the storage file.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     * @return A String representing the outcome of the command execution.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     * @throws DukeException If an application-specific error occurs during command execution.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"     * @throws IOException   If an I/O error occurs while accessing the storage file.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"     * Determines whether this command is an \"exit\" command that should signal the application to terminate.","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"     * @return True if this command is an exit command; false otherwise.","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":39}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * DeleteCommand.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a command to delete a task from the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It allows the user to remove a task by specifying its index in the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":" * Represents a command to delete a task from the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    private final String fullCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        String response;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"            int index \u003d Integer.parseInt(fullCommand.substring(7).trim()) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"                throw new DukeException(\"Task number \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"            Task removedTask \u003d tasks.removeTask(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"            response \u003d ui.showDeletedMessage(tasks, removedTask);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"Please enter a valid task number to delete.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        return response;","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":48}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * ExitCommand.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a command to exit the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It allows the user to terminate the application gracefully.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" * Represents a command to exit the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        return ui.showGoodbyeMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":26}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * FindCommand.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a command to find tasks in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It searches for tasks that contain a specific keyword in their descriptions.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import java.util.List;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":" * Represents a command to find tasks in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    private final String keyword;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a new FindCommand instance with the specified keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        String[] commandParts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"        this.keyword \u003d commandParts.length \u003e 1 ? commandParts[1].trim() : \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"     * Executes the FindCommand to search for tasks that contain the keyword in their descriptions.","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"     * @param tasks   The TaskList containing the list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"     * @param ui      The Ui object for user interaction.","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"     * @param storage The Storage object for saving and loading tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"     * @throws IOException  If there is an issue saving the tasks to the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        String response;","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"Please provide a keyword to search for.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cTask\u003e filteredTasks \u003d tasks.getTasks().stream()","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"            return \"No tasks found with the keyword: \" + keyword;","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"            String matchedTasks \u003d IntStream.range(0, filteredTasks.size())","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"                    .mapToObj(index -\u003e (index + 1) + \". \" + filteredTasks.get(index).toString())","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"                    .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"            return \"Here are the matching tasks in your list:\\n\" + matchedTasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"     * @return false","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"hjungwoo01":75}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * ListCommand.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a command to list all tasks in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It allows the user to view the current list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" * Represents a command to list all tasks in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        return tasks.listTasks();","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * MarkCommand.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a command to mark a task as done in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It allows the user to mark a task as completed by specifying its index in the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":" * Represents a command to mark a task as done in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    private final String fullCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        String response;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"            int index \u003d Integer.parseInt(fullCommand.substring(5).trim()) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"                throw new DukeException(\"duke.Task number \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"            Task task \u003d tasks.getTasks().get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"            task.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"            response \u003d ui.showMarkedMessage(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"Please enter a valid task number to unmark.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        return response;","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":49}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * UnmarkCommand.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a command to unmark a task as not done in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It allows the user to mark a completed task as not done by specifying its index in the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":" * Represents a command to unmark a task as not done in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    private final String fullCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public UnmarkCommand(String fullCommand) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        String response;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"            int index \u003d Integer.parseInt(fullCommand.substring(7).trim()) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"                throw new DukeException(\"duke.Task number \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"            Task task \u003d tasks.getTasks().get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"            response \u003d ui.showUnmarkedMessage(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"            task.markAsNotDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"Please enter a valid task number to unmark.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        return response;","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":49}},{"path":"src/main/java/duke/task/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * DateTimeUtil.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class provides utility methods for parsing date-time strings in various formats.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It is used for handling date and time related functionality in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":" * Provides utility methods for parsing date-time strings in various formats.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"public class DateTimeUtil {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(DateTimeUtil.class.getName());","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"     * @param dateTimeString The date-time string to parse.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     * @return The LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     * @throws DukeException If the date-time string is in an invalid format.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        DateTimeFormatter isoFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        String[] dateTimeFormats \u003d {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"            \"yyyy-MM-dd HH:mm\", \"dd/MM/yyyy HH:mm\", \"MM/dd/yyyy HH:mm\",","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"            \"yyyy-MM-dd HHmm\", \"dd/MM/yyyy HHmm\", \"MM/dd/yyyy HHmm\",","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"            \"dd-MM-yyyy HH:mm\", \"dd-MM-yyyy HHmm\", \"d-MM-yyyy HH:mm\", \"d-MM-yyyy HHmm\",","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"            \"dd-M-yyyy HH:mm\", \"dd-M-yyyy HHmm\", \"d-M-yyyy HH:mm\", \"d-M-yyyy HHmm\",","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"            \"d/M/yyyy HH:mm\", \"d/M/yyyy HHmm\", \"dd/M/yyyy HH:mm\", \"dd/M/yyyy HHmm\",","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"            \"m/d/yyyy HH:mm\", \"m/d/yyyy HHmm\", \"mm/d/yyyy HH:mm\", \"mm/d/yyyy HHmm\"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        };","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"            return LocalDateTime.parse(dateTimeString, isoFormatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"            LOGGER.log(Level.FINE, \"DateTime string does not match ISO_LOCAL_DATE_TIME format\", e);","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        for (String format : dateTimeFormats) {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"                return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"                LOGGER.log(Level.FINEST, \"Trying different date-time format\", e);","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        throw new DukeException(\"Invalid date-time format. \"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"                + \"Please use a valid format such as yyyy-MM-dd HH:mm or dd/MM/yyyy HH:mm.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":58}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * Deadline.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a deadline task in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It extends the Task class and includes a specific deadline date and time.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" * Represents a deadline task in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a new Deadline task with the given description and deadline date and time.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"     * @param by          The deadline date and time.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"     * @throws DukeException If there is an issue with the task creation.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    public Deadline(String description, LocalDateTime by) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a string representation of the Deadline task, including its type, description, and deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"     * @return The formatted string representation of the Deadline task.","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\")) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        return this.by;","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjungwoo01":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * Event.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents an event task in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It extends the Task class and includes specific start and end date and time.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a new Event task with the given description, start date and time, and end date and time.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"     * @param from        The start date and time of the event.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"     * @param to          The end date and time of the event.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a string representation of the Event task, including its type, description, start time, and end time.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"     * @return The formatted string representation of the Event task.","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjungwoo01":42}},{"path":"src/main/java/duke/task/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * Parser.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class provides utility methods to parse user input commands and create corresponding Command objects.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It is used for interpreting user commands in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.Command;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":" * Provides utility methods to parse user input commands and create corresponding Command objects.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"     * Parses the user\u0027s full command and returns the corresponding Command object.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"     * @param fullCommand The full user command to parse.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     * @return The Command object corresponding to the parsed user command.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     * @throws DukeException If the command is unrecognized or has invalid format.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        assert fullCommand !\u003d null \u0026\u0026 !fullCommand.trim().isEmpty() : \"Full command cannot be null or empty\";","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"        String commandWord \u003d parts[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        case \"list\":","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"            return new MarkCommand(fullCommand);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"            return new UnmarkCommand(fullCommand);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        case \"event\":","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"            return new AddCommand(fullCommand);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"            return new DeleteCommand(fullCommand);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        case \"find\":","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"            return new FindCommand(fullCommand);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        default:","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"Unrecognized command.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":56}},{"path":"src/main/java/duke/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * Storage.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class handles reading and writing tasks to a storage file in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It is responsible for loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":" * Handles reading and writing tasks to a storage file in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    private final String filePath;","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a new Storage instance with the specified file path.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     * @param filePath The path to the storage file where tasks are stored.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"FilePath cannot be null or empty\";","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"     * Loads tasks from the storage file and returns them as a TaskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"     * @return The TaskList containing tasks loaded from the storage file.","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"     * @throws IOException If there is an issue reading the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"    public TaskList loadTasks() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        File file \u003d getFile();","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        assert file.exists() : \"Storage file must exist after getFile() operation\";","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"            String line;","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"                Task task;","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"                case \"T\":","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"                    task \u003d new Todo(parts[2]);","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"                case \"D\":","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"                    LocalDateTime deadlineTime \u003d DateTimeUtil.parseDateTime(parts[3]);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"                    task \u003d new Deadline(parts[2], deadlineTime);","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"                case \"E\":","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"                    LocalDateTime startTime \u003d DateTimeUtil.parseDateTime(parts[3]);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"                    LocalDateTime endTime \u003d DateTimeUtil.parseDateTime(parts[4]);","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"                    task \u003d new Event(parts[2], startTime, endTime);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"                default:","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"                    continue;","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"                if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"                    task.markAsDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"                    task.markAsNotDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"                tasks.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"            throw new IOException(\"Error reading from file: \" + filePath, e);","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"            throw new RuntimeException(\"Error parsing date-time: \" + e.getMessage(), e);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"        assert tasks !\u003d null : \"TaskList should not be null after loading tasks\";","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"        return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"     * Retrieves the File object for the storage file, creating directories and the file if necessary.","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"     * @return The File object representing the storage file.","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"     * @throws IOException If there is an issue creating directories or the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"    private File getFile() throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        if (!parentDir.exists()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"            boolean dirsCreated \u003d parentDir.mkdirs();","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"            if (!dirsCreated) {","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"                throw new IOException(\"Unable to create directories: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"            boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"            if (!fileCreated) {","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"                throw new IOException(\"Unable to create new file: \" + file.getAbsolutePath());","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"        assert file.exists() : \"File must exist after creation attempt\";","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"        return file;","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"     * Saves the tasks from the TaskList to the storage file.","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"hjungwoo01"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"     * @throws IOException If there is an issue writing to the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"hjungwoo01"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"hjungwoo01"},"content":"        assert tasks !\u003d null : \"TaskList to save cannot be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"hjungwoo01"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"hjungwoo01"},"content":"        assert file.exists() : \"Storage file must exist before saving tasks\";","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"hjungwoo01"},"content":"        try (PrintWriter pw \u003d new PrintWriter(filePath)) {","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"hjungwoo01"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"hjungwoo01"},"content":"                String line \u003d taskToFileString(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"hjungwoo01"},"content":"                pw.println(line);","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"hjungwoo01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"hjungwoo01"},"content":"            throw new IOException(\"Error writing to file: \" + filePath, e);","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"hjungwoo01"},"content":"     * Converts a Task object to a string format suitable for saving in the storage file.","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"hjungwoo01"},"content":"     * @param task The Task object to be converted to a string.","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"hjungwoo01"},"content":"     * @return The string representation of the Task for storage.","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"hjungwoo01"},"content":"    private String taskToFileString(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"hjungwoo01"},"content":"        String type \u003d \"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"hjungwoo01"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"hjungwoo01"},"content":"            type \u003d \"T\";","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"hjungwoo01"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"hjungwoo01"},"content":"            type \u003d \"D\";","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"hjungwoo01"},"content":"            type \u003d \"E\";","lastModifiedDate":"2024-02-06"},{"lineNumber":145,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"hjungwoo01"},"content":"        String status \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"hjungwoo01"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"hjungwoo01"},"content":"        String details \u003d type + \" | \" + status + \" | \" + description;","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"hjungwoo01"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"hjungwoo01"},"content":"            details +\u003d \" | \" + ((Deadline) task).by.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"hjungwoo01"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-01-26"},{"lineNumber":154,"author":{"gitId":"hjungwoo01"},"content":"            details +\u003d \" | \" + ((Event) task).from + \" | \" + ((Event) task).to;","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"hjungwoo01"},"content":"        return details;","lastModifiedDate":"2024-01-26"},{"lineNumber":157,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"hjungwoo01":158}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * Task.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a task in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It includes a description and a boolean flag to indicate whether the task is done or not.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a new Task with the specified description and sets it as not done.","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     * Marks the task as done by setting the isDone flag to true.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"     * Marks the task as not done by setting the isDone flag to false.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a status icon (\"X\" for done, \" \" for not done) to represent the task\u0027s completion status.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"     * @return The status icon representing the task\u0027s completion status.","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a string representation of the task, including its completion status and description.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"     * @return True if the task is marked as done, otherwise false.","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"        return this.description;","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjungwoo01":78}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * TaskList.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a list of tasks in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It provides methods for managing tasks such as adding, removing, and listing tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" * Represents a list of tasks in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a new TaskList instance with an empty list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     * Removes a task at the specified index from the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"     * @return The removed Task object.","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    public Task removeTask(int index) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"            throw new DukeException(\"duke.task.Task number out of range.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the list of tasks in the TaskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    public int size() {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"     * Lists the tasks in the TaskList and prints them to the provided PrintWriter.","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"    public String listTasks() {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"            return \"Your task list is empty.\";","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"            sortDeadlines();","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"            String taskWord \u003d tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"            StringBuilder message \u003d new StringBuilder(\"Here are the \" + taskWord + \" in your list:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"                message.append(\"\\n\").append(i + 1).append(\". \").append(tasks.get(i));","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"            return message.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"     * Retrieves the string representation of a task at the specified index.","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"    public String get(int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"     * Retrieves a task from the TaskList at the specified index.","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"     * @return The Task object at the specified index.","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"     * Sorts the deadlines in the task list chronologically.","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"    public void sortDeadlines() {","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"        tasks.sort((t1, t2) -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"            if (t1 instanceof Deadline \u0026\u0026 t2 instanceof Deadline) {","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"                Deadline d1 \u003d (Deadline) t1;","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"hjungwoo01"},"content":"                Deadline d2 \u003d (Deadline) t2;","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"                return d1.getBy().compareTo(d2.getBy());","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"hjungwoo01"},"content":"            return (t1 instanceof Deadline) ? -1 : (t2 instanceof Deadline) ? 1 : 0;","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"hjungwoo01"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"hjungwoo01":120}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * Todo.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class represents a todo task in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * It extends the Task class and does not have specific date and time.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":" * Represents a todo task in the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a new Todo task with the specified description.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"     * Returns a string representation of the Todo task, including its type.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"     * @return The formatted string representation of the Todo task.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjungwoo01":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"hjungwoo01":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"hjungwoo01":19}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * AddCommandTest.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class contains JUnit tests for the AddCommand class in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"package duke.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"class AddCommandTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    void setUp() {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"        storage \u003d new Storage(\"data/duke.txt\") {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"            @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"            public void saveTasks(TaskList tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        };","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"    void addTodo_emptyDescription_throwsDukeException() {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        AddCommand command \u003d new AddCommand(\"todo \");","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e command.execute(tasks, ui, storage));","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d \"The description of a todo cannot be empty.\";","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"    void addDeadline_validDateTime_addsDeadline() throws DukeException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        AddCommand command \u003d new AddCommand(\"deadline return book /by 2022-12-12T12:00\");","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"        String result \u003d command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        Assertions.assertTrue(result.contains(\"Got it. I\u0027ve added this task\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        assertInstanceOf(Deadline.class, tasks.getTask(0));","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"    void addDeadline_invalidDateTime_throwsDukeException() {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        AddCommand command \u003d new AddCommand(\"deadline return book /by 2022-12-12\");","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e command.execute(tasks, ui, storage));","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d \"Invalid date-time format. \"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"                + \"Please use a valid format such as yyyy-MM-dd HH:mm or dd/MM/yyyy HH:mm.\";","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"hjungwoo01":65}},{"path":"src/test/java/duke/task/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":" * ParserTest.java","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":" * This class contains JUnit tests for the Parser class in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"package duke.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"class ParserTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    void parse_validTodoCommand_returnsAddCommand() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"        Command command \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"        assertInstanceOf(AddCommand.class, command);","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    void parse_validDeadlineCommand_returnsAddCommand() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"        Command command \u003d Parser.parse(\"deadline return book /by 2022-12-12T12:00\");","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        assertInstanceOf(AddCommand.class, command);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"hjungwoo01":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"todo return book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjungwoo01":11}}]
