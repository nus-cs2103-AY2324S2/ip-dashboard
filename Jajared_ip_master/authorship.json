[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"  protected String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"  public static Deadline createFromInput(String input) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"    try {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"      String[] parts \u003d input.split(\"/by \");","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"      String description \u003d parts[0].split(\"deadline \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"      String by \u003d parts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"      return new Deadline(description, by);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"Invalid deadline format. Please use \u0027deadline description /by date\u0027.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"  public Deadline(String description, String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"  private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();// Array of tasks","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"    String input \u003d \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"    String botName \u003d \"GeePeeTee\";","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"    // Welcome Message","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Hello! I\u0027m \" + botName + \"\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"      try {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"        input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"\\n--------------------------------------------------\");","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"          scanner.close();","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"          System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"        processInput(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"      } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"        e.printErrorMessage();","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"      System.out.println(\"--------------------------------------------------\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"   * Process input","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"  private static void processInput(String input) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"      printList(taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"    } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"      if (input.trim().equals(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"      int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"      if (index \u003e getTaskCount()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"      if (index \u003c\u003d 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"      if (taskList.get(index - 1) \u003d\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The task at index \" + index + \" does not exist.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"      taskList.get(index - 1).markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"    } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"      if (input.trim().equals(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"      int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"      if (index \u003e getTaskCount()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"      if (index \u003c\u003d 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"      if (taskList.get(index - 1) \u003d\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The task at index \" + index + \" does not exist.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"      taskList.get(index - 1).unmarkAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"    } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"      if (input.trim().equals(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"      int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"      if (index \u003e getTaskCount()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"      if (index \u003c\u003d 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"      if (taskList.get(index - 1) \u003d\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"The task at index \" + index + \" does not exist.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"      removeTask(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"    } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"      Event newEvent \u003d Event.createFromInput(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"      addTask(newEvent);","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"    } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"      Deadline newDeadline \u003d Deadline.createFromInput(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"      addTask(newDeadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"    } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"      ToDo newToDo \u003d ToDo.createFromInput(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"      addTask(newToDo);","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"   * Prints the list of tasks","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"  private static void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"      System.out.println((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"   * Returns the number of tasks in the list","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"  private static int getTaskCount() {","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"    return taskList.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"   * Return number of task message","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"  private static String getTaskCountMessage() {","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"    if (getTaskCount() \u003d\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"      return \"Now you have \" + getTaskCount() + \" task in the list.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"Jajared"},"content":"      return \"Now you have \" + getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"Jajared"},"content":"   * Adds a task to the list","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"Jajared"},"content":"  private static void addTask(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"Jajared"},"content":"    taskList.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"Jajared"},"content":"    System.out.println(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"Jajared"},"content":"    System.out.println(getTaskCountMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"Jajared"},"content":"   * Removes a task from the list","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"Jajared"},"content":"  private static void removeTask(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"Jajared"},"content":"    System.out.println(taskList.get(index - 1));","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"Jajared"},"content":"    taskList.remove(index - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"Jajared"},"content":"    System.out.println(getTaskCountMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Jajared":140,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"  public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"    super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"  public void printErrorMessage() {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"    System.out.println(getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"  protected String at;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"  protected String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"  public static Event createFromInput(String input) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"    try {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"      String[] parts \u003d input.split(\"/from | /to \");","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"      String description \u003d parts[0].split(\"event \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"      String at \u003d parts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"      String by \u003d parts[2];","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"      return new Event(description, at, by);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"Invalid event format. Please use \u0027event description /from start /to end\u0027.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"  public Event(String description, String at, String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    this.at \u003d at;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    return \"[E]\" + super.toString() + \" (from: \" + at + \" to: \" + by + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"  protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"  protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"  public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"    this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"    return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"  public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    System.out.println(this);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"  public void unmarkAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    System.out.println(this);","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":31}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"  public static ToDo createFromInput(String input) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"    try {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"      String description \u003d input.split(\"todo \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"      return new ToDo(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"Invalid todo format. Please use \u0027todo description\u0027.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"  public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":7}}]
