[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limrik":1,"-":41}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"import commands.Command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"import exception.UncleBobException;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import task.*;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import parser.Parser;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import java.io.*;","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"            this.tasks \u003d storage.loadFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"    public void run() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"        boolean isExiting \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"        while (!isExiting) {","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"                String inputs \u003d ui.getUserCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"                Command c \u003d Parser.parse(inputs);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"                isExiting \u003d Command.isExit(c);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"            } catch (UncleBobException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"        ui.showExitMessage();","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"limrik":41,"-":3}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import exception.UncleBobException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":" * Represents the commands that Uncle Bob can execute.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"abstract public class Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    protected TaskList tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    protected Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    protected Ui ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"    public Command() {};","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"     * Executes command.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"     * To be overwritten by child classes.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"     * @param tasks   The TaskList representing the collection of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"     * @param storage The Storage object handling storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"     * @param ui      The Ui object responsible for user interface interactions.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"     * @throws UncleBobException If user input is not in the correct format.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"    abstract public void execute(TaskList tasks, Storage storage, Ui ui) throws UncleBobException;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    public static boolean isExit(Command c) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        return c instanceof ExitCommand; // instanceof returns false if it is null","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":32}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import exception.DeadlineFormatException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":" * Represents the command used to add a deadline task to the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"Got it. Uncle added this deadline:\\n\\t\\t %s \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"            \"\\n\\t Now you have %s task(s) in the list.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"    private final String message;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"     * Creates a new DeadlineCommand object with the provided message.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"     * @param message Input message containing description and deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    public DeadlineCommand(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"     * Executes the DeadlineCommand, adding a deadline task to the task list based on the provided input message.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"     * The input message is expected to contain a description and a deadline, separated by \"/by\".","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"     * The description represents the task\u0027s details, and the deadline is the date by which the task must be completed.","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"     * If the input does not follow the correct format or if the deadline date is invalid, a DeadlineFormatException is thrown.","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"     * @param tasks   The TaskList representing the collection of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"     * @param storage The Storage object handling storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"     * @param ui      The Ui object responsible for user interface interactions.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"     * @throws DeadlineFormatException Thrown when the input does not follow the correct deadline command format","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"     *                                or if the provided deadline date is invalid.","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws DeadlineFormatException {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        String[] args \u003d message.split(\"/by\");","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"        if (args.length \u003d\u003d 1 || args.length \u003e 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"            throw new DeadlineFormatException();","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"            String desc \u003d args[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"            String by \u003d args[1].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"                Task deadline \u003d new Deadline(desc, LocalDate.parse(by));","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"                tasks.addTasks(deadline);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"                    storage.appendToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"                    ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"                ui.showToUser(String.format(SUCCESS_MESSAGE, deadline, tasks.numTasks()));","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"                throw new DeadlineFormatException();","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":68}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":" * Represents the command used to delete a task from the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"Uncle deleted this item:\\n\\t\\t %s\"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"            + \"\\n\\t Now you have %s task(s) in the list.\";","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    private final String message;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"     * Creates a new DeleteCommand object with the provided message.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"     * @param message Input message containing index to delete.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"    public DeleteCommand(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"     * Executes the DeleteCommand, deleting a task from the task list based on the input index.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"     * If the input index is out of range of the task list, an IndexOutOfBoundsException is thrown.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"     * @param tasks   The TaskList representing the collection of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"     * @param storage The Storage object handling storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"     * @param ui      The Ui object responsible for user interface interactions.","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"            int index \u003d Integer.parseInt(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"            Task removed \u003d tasks.get(index - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"            ui.showToUser(String.format(SUCCESS_MESSAGE, removed, tasks.numTasks()));","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":44}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import exception.EventFormatException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import task.Event;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":" * Represents the command used to add an event to the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"Got it. Uncle added this event:\\n\\t\\t %s\"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"            + \"\\n\\t Now you have %s task(s) in the list.\";","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"    private final String message;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"     * Creates a new EventCommand object with the provided message.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"     * @param message Input message containing description as well as the start and end date.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    public EventCommand(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"     * Executes the EventCommand, adding an event task to the task list based on the provided input message.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"     * The input message is expected to contain a description and the start and end date, separated by \"/from\" and \"/to\".","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"     * The description represents the task\u0027s details, and the start date is the date the task begins and end date is the date the task ends.","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"     * If the input does not follow the correct format or if the start and/or end dates are invalid, an EventFormatException is thrown.","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"     * @param tasks   The TaskList representing the collection of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"     * @param storage The Storage object handling storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"     * @param ui      The Ui object responsible for user interface interactions.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"     * @throws EventFormatException Thrown when the input does not follow the correct deadline command format","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"     *                                or if the provided deadline start and/or end date is invalid.","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws EventFormatException {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        String[] args \u003d message.split(\"/from\");","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"        if (args.length \u003d\u003d 1 || args.length \u003e 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"            throw new EventFormatException();","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"            String desc \u003d args[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"            String[] duration \u003d args[1].split(\"/to\");","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"            if (duration.length \u003d\u003d 1 || duration.length \u003e 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"                throw new EventFormatException();","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"                String start \u003d duration[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"                String end \u003d duration[1].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"                    Task event \u003d new Event(desc, LocalDate.parse(start), LocalDate.parse(end));","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"                    tasks.addTasks(event);","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"                    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"                        storage.appendToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"                        ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"                    ui.showToUser(String.format(SUCCESS_MESSAGE, event, tasks.numTasks()));","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"                    throw new EventFormatException();","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"limrik"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":76}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":" * Represents the command used to exit the application.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {}","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":14}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import exception.FindFormatException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"    private static final String NO_TASK_FOUND_MESSAGE \u003d \"Sorry Uncle cannot find any matching tasks!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    private static final String TASK_FOUND_MESSAGE \u003d \"Uncle found %s tasks!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    private final String message;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    public FindCommand(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws FindFormatException {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"        if (message.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"            throw new FindFormatException();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"        TaskList matchedTasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"            if (task.getDescription().contains(message)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"                matchedTasks.addTasks(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        if (matchedTasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"            ui.showToUser(NO_TASK_FOUND_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"            ui.showList(String.format(TASK_FOUND_MESSAGE, tasks.numTasks()), matchedTasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"limrik":36}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":" *  Represents the command used to display the list of tasks to the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":" *  The command checks if the task list is empty and provides appropriate feedback to the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"Congrats, you have no more tasks! Uncle is proud of you!\";","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    private static final String LIST_MESSAGE \u003d \"You have %s tasks in your list!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"     * Executes the ListCommand, listing out all the tasks in the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"     * @param tasks   The TaskList representing the collection of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"     * @param storage The Storage object handling storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"     * @param ui      The Ui object responsible for user interface interactions.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"            ui.showToUser(SUCCESS_MESSAGE);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"            ui.showList(String.format(LIST_MESSAGE, tasks.numTasks()),tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":32}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":" * Represents the command used to mark tasks in the task list as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"Nice! Uncle marked this task as done:\\n\\t\\t %s\";","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"    private final String message;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"     * Creates a new MarkCommand object with the provided message.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"     * @param message Input message containing index to mark.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"    public MarkCommand(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"     * Executes the MarkCommand, marking a task from the task list as done based on the input index.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"     * If the input index is out of range of the task list, an IndexOutOfBoundsException is thrown.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"     * @param tasks   The TaskList representing the collection of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"     * @param storage The Storage object handling storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"     * @param ui      The Ui object responsible for user interface interactions.","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"            int index \u003d Integer.parseInt(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"            tasks.get(index - 1).mark();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"            ui.showToUser(String.format(SUCCESS_MESSAGE, tasks.get(index - 1)));","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"            storage.appendToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":49}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import exception.EventFormatException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import exception.TodoFormatException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import task.Todo;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":" * Represents the command used to add a todo to the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"Got it. Uncle added this todo:\\n\\t\\t %s\"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"            + \"\\n\\t Now you have %s task(s) in the list.\";","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"    private final String message;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"     * Creates a new TodoCommand object with the provided message.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"     * @param message Input message containing description.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    public TodoCommand(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"     * Executes the TodoCommand, adding a todo task to the task list based on the provided input message.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"     * The input message is expected to contain a description.","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"     * @param tasks   The TaskList representing the collection of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"     * @param storage The Storage object handling storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"     * @param ui      The Ui object responsible for user interface interactions.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"     * @throws TodoFormatException Thrown when the input does not have a message.","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws TodoFormatException {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"        if (message.isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"            throw new TodoFormatException();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        Task todo \u003d new Todo(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"        tasks.addTasks(todo);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"            storage.appendToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"        ui.showToUser(String.format(SUCCESS_MESSAGE, todo, tasks.numTasks()));","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"    };","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":56}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":" * Represents the command used to unmark tasks in the task list as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"Nice! Uncle marked this task as done:\\n\\t\\t %s\";","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"    private final String message;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"     * Creates a new UnmarkCommand object with the provided message.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"     * @param message Input message containing index to unmark.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"    public UnmarkCommand(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"     * Executes the UnmarkCommand, un-marking a task from the task list based on the input index.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"     * If the input index is out of range of the task list, an IndexOutOfBoundsException is thrown.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"     * @param tasks   The TaskList representing the collection of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"     * @param storage The Storage object handling storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"     * @param ui      The Ui object responsible for user interface interactions.","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"            int index \u003d Integer.parseInt(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"            tasks.get(index - 1).unmark();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"            ui.showToUser(String.format(SUCCESS_MESSAGE, tasks.get(index - 1)));","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"            storage.appendToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":50}},{"path":"src/main/java/exception/DeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package exception;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"public class DeadlineFormatException extends UncleBobException{","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"Correct Usage: deadline \u003cmessage\u003e /by \u003cday/time\u003e\";","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"    public DeadlineFormatException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":10}},{"path":"src/main/java/exception/EventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package exception;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"public class EventFormatException extends UncleBobException {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"Correct Usage: event \u003cmessage\u003e /from \u003cday/time\u003e /to \u003cday/time\u003e\";","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"    public EventFormatException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":9}},{"path":"src/main/java/exception/FindFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"public class FindFormatException extends UncleBobException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"Correct Usage: find \u003cmessage\u003e\";","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"    public FindFormatException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"limrik":10}},{"path":"src/main/java/exception/TodoFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package exception;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"public class TodoFormatException extends UncleBobException {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"Uncle also need to know the message!\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"            \"\\n\\tCorrect Usage: todo \u003cmessage\u003e\";","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"    public TodoFormatException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":10}},{"path":"src/main/java/exception/UncleBobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package exception;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"public class UncleBobException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"    public UncleBobException(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"        super(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package parser;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import commands.*;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":" * The Parser class is responsible for parsing user input and creating corresponding Command objects.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":" * It recognizes the command keyword and any accompanying message in the input and constructs the","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":" * appropriate command object to execute the desired action.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"public abstract class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"     * The parser takes in the user input and splits it into command and message.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"     * It uses a switch statement to determine the specific command type to create.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"     * @param userInput User input string.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"     * @return Returns the relevant Command based on the user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        String[] inputs \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"        String command \u003d inputs[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"        String message \u003d String.join(\" \", Arrays.copyOfRange(inputs, 1, inputs.length));","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"        switch (command) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"            return new MarkCommand(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"            return new UnmarkCommand(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"            return new TodoCommand(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"            return new DeadlineCommand(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"            return new EventCommand(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"            return new DeleteCommand(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"            return new FindCommand(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"        default:","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":48}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import task.*;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":" *  The Storage class manages the reading and writing of tasks to a file.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    private final String path;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"     * Creates a new Storage object with the specified filepath.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"     * @param filePath Relative file path to store data.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"     * Encodes and appends a list of tasks to the file, each represented as a line in the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"     * @param tasks The TaskList containing tasks to be appended to the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"     * @throws IOException The TaskList containing tasks to be appended to the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"    public void appendToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"        FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"            String textToAppend \u003d \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"                textToAppend \u003d task.getSymbol() + \"/\" + task.getStatus() + \"/\"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"                        + task.getDescription() + \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"                textToAppend \u003d task.getSymbol() + \"/\" + task.getStatus() +","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"                        \"/\" + task.getDescription() + \"/\" + task.getBy() + \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"                textToAppend \u003d task.getSymbol() + \"/\" + task.getStatus() +","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"                        \"/\" + task.getDescription() + \"/\" + task.getStart() + \"/\" + task.getEnd() + \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"     * Decodes the file and populates the task list with the stored tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"     * @return Task list stored on local hard drive.","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"     * @throws FileNotFoundException If file does not exist on the local repository.","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"    public TaskList loadFile() throws FileNotFoundException {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"        if (!f.isFile()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"                f.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"                System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"limrik"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"limrik"},"content":"            String[] inputs \u003d s.nextLine().split(\"/\");","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"limrik"},"content":"            Task task;","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"limrik"},"content":"            if (\"[T]\".equals(inputs[0])) {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"limrik"},"content":"                task \u003d new Todo(inputs[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"limrik"},"content":"            } else if (\"[D]\".equals(inputs[0])) {","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"                task \u003d new Deadline(inputs[2], LocalDate.parse(inputs[3]));","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"limrik"},"content":"            } else if (\"[E]\".equals(inputs[0])) {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"limrik"},"content":"                task \u003d new Event(inputs[2], LocalDate.parse(inputs[3]), LocalDate.parse(inputs[4]));","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"limrik"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"limrik"},"content":"                task \u003d new Task(inputs[0], inputs[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"limrik"},"content":"            if (inputs[1].equals(\"1\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"limrik"},"content":"                task.mark();","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"limrik"},"content":"            taskList.addTasks(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"limrik"},"content":"        return taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":90}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"        super(\"[D]\", description, by);","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"        DateTimeFormatter dateformatter","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"                \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL);","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"        return \"[D]\" + super.toString() + \" (By: \" + dateformatter.format(this.by) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"limrik":19}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"    private final String symbol \u003d \"[E]\";","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"        super(\"[E]\", description, start, end);","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"        DateTimeFormatter dateformatter","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"                \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL);","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        return this.symbol + super.toString() + \" (From: \" + dateformatter.format(this.start)","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"                + \" To: \" + dateformatter.format(this.end) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"limrik":21}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"        protected String symbol;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"        protected String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"        protected boolean isDone;","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"        protected LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"        protected LocalDate start;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"        protected LocalDate end;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"        public Task(String symbol, String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"            this.symbol \u003d symbol;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"        public Task(String symbol, String description, LocalDate by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"            this.symbol \u003d symbol;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"        public Task(String symbol, String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"            this.symbol \u003d symbol;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"            this.start \u003d start;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"            this.end \u003d end;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"        public void mark() {","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"        public void unmark() {","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"        public String getSymbol() {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"            return this.symbol;","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        public String getStatus() {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"            return isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"        public String getDescription() {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"            return this.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"        public LocalDate getBy() { return this.by; }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"        public LocalDate getStart() { return this.start; }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"        public LocalDate getEnd() { return this.end; }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"        public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"limrik":68}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"    public TaskList() {}","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    public void addTasks(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    public int numTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"        return tasks.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    public Task remove(int i) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        return tasks.remove(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"        return tasks.iterator();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":37}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"        super(\"[T]\", description);","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"        return this.symbol + super.toString();","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"limrik":13}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":" * The Ui class is responsible for managing user interface interactions, including","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":" * displaying messages, getting user input, and presenting the task list to the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    private static final String LINE \u003d \"――――――――――――――――――――――――――――――――――――――――――――――――――\";","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"    private static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Uncle Bob \\n\\t What can uncle do for you?\";","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    private static final String MESSAGE_BYE \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"    private final Scanner in;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"    private final PrintStream out;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"     * Default constructor for Ui, using System.in for input and System.out for output.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"    public Ui() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"        this(System.in, System.out);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"     * Constructor for Ui that allows customization of input and output streams.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"     * @param in  The input stream, typically representing user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"     * @param out The print stream, typically representing output.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        this.out \u003d out;","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"     * Displays a list of tasks in the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"     * @param tasks The TaskList representing the collection of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"    public void showList (String message, TaskList tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"        out.println(\"\\t\" + LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"        out.println(\"\\t\" + message);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        for (int i \u003d 0; i \u003c tasks.numTasks(); i++){","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"            out.println(\"\\t \" + (i+1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        out.println(\"\\t\" + LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"     * Displays error messages.","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"     * @param message Error messages encountered.","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"    public void showErrorMessage(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"        showToUser(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"     * Seek user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"     * @return Reads in the next line of user input as a String.","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"    public String getUserCommand() {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"        out.print(\"Enter command: \");","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"        return in.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"limrik"},"content":"     * Displays default greeting message.","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"limrik"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"limrik"},"content":"        showToUser(MESSAGE_WELCOME);","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"limrik"},"content":"     * Displays default exit message.","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"limrik"},"content":"    public void showExitMessage() {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"limrik"},"content":"        showToUser(MESSAGE_BYE);","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"limrik"},"content":"     * Display message to user with lines and tabs to show that it is a program output.","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"limrik"},"content":"     * @param message Message to be displayed to user.","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"limrik"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"limrik"},"content":"        out.println(\"\\t\" + LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"limrik"},"content":"        for (String m : message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"limrik"},"content":"            out.print(\"\\t \" + m + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"limrik"},"content":"        out.println(\"\\t\" + LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"limrik":95}},{"path":"src/test/java/storage/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"    private boolean simulateIOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"    public boolean appendToFileCalled;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"    private TaskList taskListToLoad;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    public StorageStub(TaskList taskListToLoad) {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"        super(\"stubFilePath\");","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"        this.taskListToLoad \u003d taskListToLoad;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    public StorageStub(TaskList taskListToLoad, boolean simulateIOException) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        super(\"stubFilePath\");","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"        this.taskListToLoad \u003d taskListToLoad;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"        this.simulateIOException \u003d simulateIOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    public void appendToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"        appendToFileCalled \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"        if (simulateIOException) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"            throw new IOException(\"Simulated IOException\");","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        // For simplicity, do nothing in the stub implementation","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    public TaskList loadFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"        return taskListToLoad;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"    public boolean wasAppendToFileCalled() {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"        return appendToFileCalled;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"limrik":40}},{"path":"src/test/java/task/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import exception.DeadlineFormatException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import storage.StorageStub;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import ui.UiStub;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    void execute_validMessage_success() throws DeadlineFormatException {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"        String deadlineMessage \u003d \"Complete project /by 2022-12-31\";","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(deadlineMessage);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"        StorageStub storageStub \u003d new StorageStub(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        UiStub uiStub \u003d new UiStub();","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"        assertDoesNotThrow(() -\u003e deadlineCommand.execute(taskList, storageStub, uiStub));","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"        assertEquals(1, taskList.numTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        assertTrue(storageStub.appendToFileCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"        assertTrue(uiStub.showToUserCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"    void execute_missingByField_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"        String missingByFieldMessage \u003d \"Complete project\";","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(missingByFieldMessage);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"        StorageStub storageStub \u003d new StorageStub(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        UiStub uiStub \u003d new UiStub();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"            deadlineCommand.execute(taskList, storageStub, uiStub);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"            fail(\"Expected DeadlineFormatException, but it was not thrown.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        } catch (DeadlineFormatException exception) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"            assertEquals(\"Correct Usage: deadline \u003cmessage\u003e /by \u003cday/time\u003e\", exception.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"            assertFalse(storageStub.appendToFileCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"            assertFalse(uiStub.showToUserCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"    void execute_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"        String invalidDateFormatMessage \u003d \"Complete project /by invalid-date\";","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(invalidDateFormatMessage);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        StorageStub storageStub \u003d new StorageStub(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        UiStub uiStub \u003d new UiStub();","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"            deadlineCommand.execute(taskList, storageStub, uiStub);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"            fail(\"Expected DeadlineFormatException, but it was not thrown.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"        } catch (DeadlineFormatException exception) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"            assertEquals(\"Correct Usage: deadline \u003cmessage\u003e /by \u003cday/time\u003e\", exception.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"            assertFalse(storageStub.appendToFileCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"            assertFalse(uiStub.showToUserCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"limrik":62}},{"path":"src/test/java/task/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"import commands.TodoCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import exception.TodoFormatException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import storage.StorageStub;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import ui.UiStub;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"public class TodoCommandTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    void execute_validMessage_success () throws TodoFormatException {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"        String todoMessage \u003d \"Buy groceries\";","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"        TodoCommand todoCommand \u003d new TodoCommand(todoMessage);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"        StorageStub storageStub \u003d new StorageStub(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        UiStub uiStub \u003d new UiStub();","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"        assertDoesNotThrow(() -\u003e todoCommand.execute(taskList, storageStub, uiStub));","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"        assertEquals(1, taskList.numTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        assertTrue(storageStub.appendToFileCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"        assertTrue(uiStub.showToUserCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"    void execute_emptyMessage_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"        String emptyTodoMessage \u003d \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        TodoCommand todoCommand \u003d new TodoCommand(emptyTodoMessage);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"        StorageStub storageStub \u003d new StorageStub(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        UiStub uiStub \u003d new UiStub();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"            todoCommand.execute(taskList, storageStub, uiStub);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"            fail(\"Expected TodoFormatException, but it was not thrown.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        } catch (TodoFormatException exception) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"            assertEquals(\"Uncle also need to know the message!\\n\\tCorrect Usage: todo \u003cmessage\u003e\", exception.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"            assertFalse(storageStub.appendToFileCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"            assertFalse(uiStub.showToUserCalled);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"limrik":43}},{"path":"src/test/java/ui/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"    public boolean showToUserCalled;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"    private boolean showErrorMessageCalled;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"    public void showToUser(String... messages) {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"        showToUserCalled \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"        // For simplicity, do nothing in the stub implementation","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    public void showErrorMessage(String errorMessage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"        showErrorMessageCalled \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"        // For simplicity, do nothing in the stub implementation","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"limrik":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"todo borrow book","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"deadline return book /by 2023-01-22","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"event project meeting /from 2023-01-22 /to 2023-01-23","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"bye","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"limrik":5}}]
