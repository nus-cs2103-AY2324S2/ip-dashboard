[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"menatahari":2,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"import duke.exception.EmptyTaskNameException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"import duke.exception.NoTaskTypeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":" * Entry point for the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"public class Duke {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"    private static Ui ui \u003d new Ui(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"    private static Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"     * Initializes Duke.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"menatahari"},"content":"     * @param args  Command line arguments â€“ not used.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"menatahari"},"content":"     * @throws IOException If error occurred during file operations.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"menatahari"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"menatahari"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"menatahari"},"content":"            //loads tasks from file to task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"menatahari"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"menatahari"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"menatahari"},"content":"            //creates directory if the given directory path doesn\u0027t exist.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"menatahari"},"content":"            Files.createDirectories(Paths.get(storage.getDirectoryPath()));","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"menatahari"},"content":"            ui.printMessage(\"New human detected!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"menatahari"},"content":"        ui.printGreetings();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"menatahari"},"content":"        String command \u003d ui.getCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"menatahari"},"content":"        while(!command.equals(\"bye\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"menatahari"},"content":"            Parser parser \u003d new Parser(ui.getCommandDescription(), command);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"menatahari"},"content":"            String task \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"menatahari"},"content":"            switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"menatahari"},"content":"            case \"todo\" :","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"menatahari"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"menatahari"},"content":"                    parser.checkEmptyTask();","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"menatahari"},"content":"                    task \u003d taskList.addTask(new ToDo(parser.getTaskName(), false));","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"menatahari"},"content":"                    ui.printAddTask(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"menatahari"},"content":"                } catch (EmptyTaskNameException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"menatahari"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"menatahari"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"menatahari"},"content":"            case \"deadline\" :","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"menatahari"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"menatahari"},"content":"                    parser.checkEmptyTask();","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"menatahari"},"content":"                    if (parser.getDue().split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"menatahari"},"content":"                        task \u003d taskList.addTask(","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"menatahari"},"content":"                                new Deadline(parser.getTaskName(), false, parser.parseDueTime()));","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"menatahari"},"content":"                        ui.printAddTask(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"menatahari"},"content":"                    } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"menatahari"},"content":"                        task \u003d taskList.addTask(new Deadline(","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"menatahari"},"content":"                                parser.getTaskName().trim(), false, parser.parseDueDate()));","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"menatahari"},"content":"                        ui.printAddTask(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"menatahari"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"menatahari"},"content":"                } catch (EmptyTaskNameException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"menatahari"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"menatahari"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"menatahari"},"content":"                    System.out.println(\"Please specify the task\u0027s deadline using the format \"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"menatahari"},"content":"                            + \"\u0027yyyy-mm-dd hh:mm\u0027 or \u0027yyyy-mm-dd\u0027\");","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"menatahari"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"menatahari"},"content":"            case \"event\" :","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"menatahari"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"menatahari"},"content":"                    parser.checkEmptyTask();","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"menatahari"},"content":"                    task \u003d taskList.addTask(","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"menatahari"},"content":"                            new Event(","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"menatahari"},"content":"                                    parser.getTaskName(),","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"menatahari"},"content":"                                    false,","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"menatahari"},"content":"                                    parser.getEventStart(),","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"menatahari"},"content":"                                    parser.getEventEnd()));","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"menatahari"},"content":"                    ui.printAddTask(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"menatahari"},"content":"                } catch (EmptyTaskNameException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"menatahari"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"menatahari"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"menatahari"},"content":"            case \"list\" :","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"menatahari"},"content":"                ui.printList(taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"menatahari"},"content":"            case \"mark\" :","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"menatahari"},"content":"                ui.printMark(taskList.markTask(parser.parseIndex()));","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"menatahari"},"content":"            case \"unmark\" :","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"menatahari"},"content":"                ui.printUnmark(taskList.unmarkTask(parser.parseIndex()));","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"menatahari"},"content":"            case \"delete\" :","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"menatahari"},"content":"                ui.printDelete(taskList.deleteTask(parser.parseIndex()), taskList.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"menatahari"},"content":"            case \"find\" :","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"menatahari"},"content":"                ui.printFind(taskList.find(parser.getUserInput()));","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"menatahari"},"content":"            default :","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"menatahari"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"menatahari"},"content":"                    throw new NoTaskTypeException();","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"menatahari"},"content":"                } catch (NoTaskTypeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"menatahari"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"menatahari"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"menatahari"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"menatahari"},"content":"            command \u003d ui.getCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"menatahari"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"menatahari"},"content":"        ui.printGoodbye();","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"menatahari":126}},{"path":"src/main/java/duke/exception/EmptyTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":" * Signals an error caused by not specifying task name when creating a new task.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"public class EmptyTaskNameException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"    public EmptyTaskNameException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"        super(\"Sorry! Please describe the task that you want me to add.\\nButo is not a mind reader!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"menatahari":10}},{"path":"src/main/java/duke/exception/NoTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":" * Signals an error caused by unsupported starting keyword in user command.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"public class NoTaskTypeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"    public NoTaskTypeException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"        super(\"Sorry! I don\u0027t understand your command!\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"                \"To add a new task, please use the keyword \u0027todo\u0027, \u0027event\u0027, or \u0027deadline\u0027 before describing the task\");","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"menatahari":11}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"import duke.exception.EmptyTaskNameException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":" * Parses user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"    private String userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"    private String command;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"     * Constructs a Parser object.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"     * @param userInput User input text.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"     * @param command Command keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"    public Parser(String userInput, String command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"     * Retrieves raw user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"     * @return User input text.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"        return this.userInput.trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"menatahari"},"content":"     * Checks if the task name is empty.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"menatahari"},"content":"     * @throws EmptyTaskNameException If task name is empty.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"menatahari"},"content":"    public void checkEmptyTask() throws EmptyTaskNameException {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"menatahari"},"content":"        if (this.getTaskName().isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"menatahari"},"content":"            throw new EmptyTaskNameException();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"menatahari"},"content":"     * Returns task name from the given user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"menatahari"},"content":"     * @return Task name.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"menatahari"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"menatahari"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"menatahari"},"content":"        switch (this.command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"menatahari"},"content":"        case \"todo\" :","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"menatahari"},"content":"            taskName \u003d this.userInput.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"menatahari"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"menatahari"},"content":"        case \"deadline\" :","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"menatahari"},"content":"            taskName \u003d this.userInput.split(\" /by \")[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"menatahari"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"menatahari"},"content":"        case \"event\" :","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"menatahari"},"content":"            taskName \u003d this.userInput.split(\" /from \")[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"menatahari"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"menatahari"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"menatahari"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"menatahari"},"content":"        return taskName;","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"menatahari"},"content":"     * Returns task\u0027s due date as string.","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"menatahari"},"content":"     * Only valid for tasks of type deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"menatahari"},"content":"     * @return Due date in string format.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"menatahari"},"content":"    public String getDue() {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"menatahari"},"content":"        return userInput.split(\" /by \")[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"menatahari"},"content":"     * Returns task\u0027s due date and time as a LocalDateTime object.","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"menatahari"},"content":"     * Only valid for tasks of type deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"menatahari"},"content":"     * @return Due date as LocalDateTime object.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"menatahari"},"content":"    public LocalDateTime parseDueTime() {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"menatahari"},"content":"        return LocalDateTime.parse(getDue(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd kk:mm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"menatahari"},"content":"     * Returns task\u0027s due date as a LocalDate object.","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"menatahari"},"content":"     * Only valid for tasks of type deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"menatahari"},"content":"     * @return Due date as LocalDate object.","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"menatahari"},"content":"    public LocalDate parseDueDate() {","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"menatahari"},"content":"        return LocalDate.parse(getDue(), DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"menatahari"},"content":"     * Returns a string of event\u0027s start time.","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"menatahari"},"content":"     * Only valid for tasks of type event.","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"menatahari"},"content":"     * @return Start of event.","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"menatahari"},"content":"    public String getEventStart() {","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"menatahari"},"content":"        return userInput.split(\" /from \")[1].split(\" /to \")[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"menatahari"},"content":"     * Returns a string of event\u0027s end time.","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"menatahari"},"content":"     * Only valid for tasks of type event.","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"menatahari"},"content":"     * @return End of event.","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"menatahari"},"content":"    public String getEventEnd() {","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"menatahari"},"content":"        return userInput.split(\" /to \")[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"menatahari"},"content":"     * Parses user input as integer.","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"menatahari"},"content":"     * Only valid for commands \u0027delete\u0027, \u0027unmark\u0027, \u0027mark\u0027.","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"menatahari"},"content":"     * @return User input as integer.","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"menatahari"},"content":"    public int parseIndex() {","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"menatahari"},"content":"        return Integer.parseInt(userInput.trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"menatahari":129}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":" * Represents the file used to store the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":" * Handles loading and writing tasks data to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"    private String filePath \u003d \"./src/main/\";","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"    private String directoryPath \u003d \"./src/main/\";","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"     * Constructs Storage object.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"     * @param filePath File path to store and read data.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"        this.directoryPath +\u003d filePath.substring(0, filePath.lastIndexOf(\"/\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"        this.filePath +\u003d filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"menatahari"},"content":"     * Returns the directory of the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"menatahari"},"content":"     * Used if the directory of the file is not initialized.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"menatahari"},"content":"     * @return Directory path.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"menatahari"},"content":"    public String getDirectoryPath() {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"menatahari"},"content":"        return this.directoryPath;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"menatahari"},"content":"     * Loads the tasks from the specified filepath into the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"menatahari"},"content":"     * @param tasks TaskList to store the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"menatahari"},"content":"     * @throws IOException If error occur when reading the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"menatahari"},"content":"    public void loadFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"menatahari"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"menatahari"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"menatahari"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"menatahari"},"content":"            String[] taskDescriptions \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"menatahari"},"content":"            String taskName \u003d taskDescriptions[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"menatahari"},"content":"            boolean done \u003d Boolean.parseBoolean(taskDescriptions[2]);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"menatahari"},"content":"            switch (taskDescriptions[0]) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"menatahari"},"content":"            case \"todo\" :","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"menatahari"},"content":"                tasks.addTask(new ToDo(taskName, done));","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"menatahari"},"content":"            case \"deadline\" :","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"menatahari"},"content":"                if (taskDescriptions[3].split(\"T\").length \u003e 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"menatahari"},"content":"                    LocalDateTime time \u003d LocalDateTime.parse(taskDescriptions[3]);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"menatahari"},"content":"                    tasks.addTask(new Deadline(taskName, done, time));","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"menatahari"},"content":"                } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"menatahari"},"content":"                    LocalDate time \u003d LocalDate.parse(taskDescriptions[3]);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"menatahari"},"content":"                    tasks.addTask(new Deadline(taskName, done, time));","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"menatahari"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"menatahari"},"content":"            case \"event\" :","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"menatahari"},"content":"                tasks.addTask(new Event(taskName, done, taskDescriptions[3], taskDescriptions[4]));","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"menatahari"},"content":"            default:","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"menatahari"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"menatahari"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"menatahari"},"content":"     * Store the tasks in the task list into the specified file.","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"menatahari"},"content":"     * @param tasks List of tasks to be stored.","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"menatahari"},"content":"     * @throws IOException If error occurred when writing to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"menatahari"},"content":"    public void writeFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"menatahari"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"menatahari"},"content":"        FileWriter writer \u003d new FileWriter(f);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"menatahari"},"content":"        writer.write(tasks.storeTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"menatahari"},"content":"        writer.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"menatahari":92}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":" * Task with a due date and time.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"    private LocalDateTime dueTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"     * Constructs a deadline object.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"     * @param isDone Completion of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"     * @param dueTime LocalDateTime representing due time of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"    public Deadline(String taskName, boolean isDone, LocalDateTime dueTime) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"        super(taskName, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":"     * Constructor for deadline object.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"     * @param isDone Completion of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"     * @param dueDate LocalDate representing due date of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"    public Deadline(String taskName, boolean isDone, LocalDate dueDate) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"        super(taskName, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"menatahari"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"menatahari"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"menatahari"},"content":"    public String storeData() {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"menatahari"},"content":"        if (this.dueDate \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"menatahari"},"content":"            return \"deadline|\" + super.storeData() + \"|\" + this.dueTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"menatahari"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"menatahari"},"content":"            return \"deadline|\" + super.storeData() + \"|\" + this.dueDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"menatahari"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"menatahari"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"menatahari"},"content":"        if (this.dueDate \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"menatahari"},"content":"            String timeFormat \u003d this.dueTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy KK.mm a\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"menatahari"},"content":"            return \"[D]\" + super.toString()","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"menatahari"},"content":"                    + String.format(\" (by: %s)\", timeFormat);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"menatahari"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"menatahari"},"content":"            String timeFormat \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"menatahari"},"content":"            return \"[D]\" + super.toString()","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"menatahari"},"content":"                    + String.format(\" (by: %s)\", timeFormat);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"menatahari":59}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":" * Task with a starting time and ending time.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"    private String start;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"    private String end;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"     * Constructs an event object.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"     * @param taskName Name of event.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"     * @param isDone Completion of event.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"     * @param start Start of event.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"     * @param end End of event.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"    public Event(String taskName, boolean isDone, String start, String end) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"        super(taskName, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"    public String storeData() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"        return \"event|\" +super.storeData() + \"|\" + this.start + \"|\" + this.end;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"                String.format(\" (from: %s to: %s)\", start, end);","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"menatahari":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":" * Represents a task the user wants to be reminded of.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"    private String taskName;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"     * Constructs a task object.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"     * @param isDone Completion of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"     * Retrieves task name.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"     * @return Task name.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":"        return taskName;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"menatahari"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"menatahari"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"menatahari"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"menatahari"},"content":"     * Returns a string representation of the task with \u0027|\u0027 as a splitter between each attribute.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"menatahari"},"content":"     * String format for data storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"menatahari"},"content":"     * @return String representation of task for data storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"menatahari"},"content":"    public String storeData() {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"menatahari"},"content":"        return this.taskName + \"|\" + this.isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"menatahari"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"menatahari"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"menatahari"},"content":"        return this.isDone","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"menatahari"},"content":"            ? \"[X] \" + this.taskName","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"menatahari"},"content":"            : \"[ ] \" + this.taskName;","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"menatahari":60}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":" * A list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"public class TaskList {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"     * Constructor for task list","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"    public TaskList() { }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"     * Adds task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"     * Returns the string representation of the newly added task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"     * @param task New user task.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"     * @return String representation of the newly added task.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":"        return task.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"     * Deletes task of the specified index from the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"     * Returns the string representation of the newly added task.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"menatahari"},"content":"     * @param index Index of the task to delete, starting from 1.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"menatahari"},"content":"     * @return String representation of the deleted task.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"menatahari"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"menatahari"},"content":"        return tasks.remove(index - 1).toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"menatahari"},"content":"     * Marks task of the specified index in the task list as completed.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"menatahari"},"content":"     * Returns the string representation of the newly added task.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"menatahari"},"content":"     * @param index Index of the task to mark - starting from 1.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"menatahari"},"content":"     * @return String representation of the marked task.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"menatahari"},"content":"    public String markTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"menatahari"},"content":"        tasks.get(index - 1).setDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"menatahari"},"content":"        return tasks.get(index - 1).toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"menatahari"},"content":"     * Marks task of the specified index in the task list as not completed.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"menatahari"},"content":"     * Returns the string representation of the newly added task.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"menatahari"},"content":"     * @param index Index of the task to unmark - starting from 1.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"menatahari"},"content":"     * @return String representation of the unmarked task.","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"menatahari"},"content":"    public String unmarkTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"menatahari"},"content":"        tasks.get(index - 1).setNotDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"menatahari"},"content":"        return tasks.get(index - 1).toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"menatahari"},"content":"     * Returns the amount of tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"menatahari"},"content":"     * @return Size of task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"menatahari"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"menatahari"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"menatahari"},"content":"     * Find tasks having names matching the given keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"menatahari"},"content":"     * Returns a string representation of the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"menatahari"},"content":"     * @param keyword Keyword to search in task name.","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"menatahari"},"content":"     * @return A string representation of tasks containing the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"menatahari"},"content":"    public String find(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"menatahari"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"menatahari"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"menatahari"},"content":"            List\u003cString\u003e words \u003d Arrays.asList(t.getTaskName().split(\" \"));","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"menatahari"},"content":"            if (words.contains(keyword)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"menatahari"},"content":"                result.addTask(t);","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"menatahari"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"menatahari"},"content":"        return result.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"menatahari"},"content":"     * Returns a string representation of the task list to be stored in storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"menatahari"},"content":"     * @return String representation of task list to be stored in storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"menatahari"},"content":"    public String storeTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"menatahari"},"content":"        StringBuilder savedTask \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"menatahari"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"menatahari"},"content":"            savedTask.append(tasks.get(i).storeData()).append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"menatahari"},"content":"        return savedTask.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"menatahari"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"menatahari"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"menatahari"},"content":"        StringBuilder tasksStr \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"menatahari"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"menatahari"},"content":"            tasksStr.append(\"     \").append(i).append(\".\")","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"menatahari"},"content":"                    .append(tasks.get(i - 1).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"menatahari"},"content":"        return tasksStr.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"menatahari":115}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":" * Tasks to be done without any time reminder.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"     * Constructs a to-do object.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"     * @param isDone Completion of task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"        super(taskName, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"    public String storeData() {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"        return \"todo|\" + super.storeData();","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"menatahari":26}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":" * Handles UI of the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"    Scanner in;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"    String input;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"    private static final String LINE \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"    private static final String TAB \u003d \"  \";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"     * Constructs a UI object.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"     * @param in InputStream to read input from.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"     * Fetches the first keyword of user input as command.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"     * @return Command.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"    public String getCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"        return in.next();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"menatahari"},"content":"     * Fetches the detail and description of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"menatahari"},"content":"     * @return Command description.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"menatahari"},"content":"    public String getCommandDescription() {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"menatahari"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"menatahari"},"content":"     * Prints the horizontal line divider.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"menatahari"},"content":"    public void printLine() {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"menatahari"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"menatahari"},"content":"     * Prints the input message.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"menatahari"},"content":"     * @param message Message to print.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"menatahari"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"menatahari"},"content":"        System.out.printf(\"     %s\\n\", message);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"menatahari"},"content":"     * Prints the message for adding a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"menatahari"},"content":"     * @param newTask String representation of added task.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"menatahari"},"content":"    public void printAddTask(String newTask) {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"menatahari"},"content":"        printMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"menatahari"},"content":"        printMessage(TAB + newTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"menatahari"},"content":"     * Prints the message for marking a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"menatahari"},"content":"     * @param task String representation of marked task.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"menatahari"},"content":"    public void printMark(String task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"menatahari"},"content":"        printMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"menatahari"},"content":"        printMessage(TAB + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"menatahari"},"content":"     * Prints the message for unmarking a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"menatahari"},"content":"     * @param task String representation of unmarked task.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"menatahari"},"content":"    public void printUnmark(String task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"menatahari"},"content":"        printMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"menatahari"},"content":"        printMessage(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"menatahari"},"content":"     * Prints the message for deleting a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"menatahari"},"content":"     * @param task String representation of deleted task.","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"menatahari"},"content":"    public void printDelete(String task, int size) {","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"menatahari"},"content":"        printMessage(\"Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"menatahari"},"content":"        printMessage(TAB + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"menatahari"},"content":"        printMessage(\"Now you have \" + size + \" tasks in the list!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"menatahari"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"menatahari"},"content":"     * @param tasks String representation of the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"menatahari"},"content":"    public void printList(TaskList tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"menatahari"},"content":"        printMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"menatahari"},"content":"        System.out.print(tasks.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"menatahari"},"content":"     * Prints message for finding tasks matching a keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"menatahari"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"menatahari"},"content":"     * @param tasks String representation of the tasks matching the given keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"menatahari"},"content":"    public void printFind(String tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"menatahari"},"content":"        printMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"menatahari"},"content":"        System.out.print(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"menatahari"},"content":"     * Prints greeting message.","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"menatahari"},"content":"    public void printGreetings() {","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"menatahari"},"content":"        printMessage(\"Hello, I\u0027m Buto!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"menatahari"},"content":"        printMessage(\"What can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"menatahari"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"menatahari"},"content":"     * Prints goodbye message.","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"menatahari"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"menatahari"},"content":"    public void printGoodbye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"menatahari"},"content":"        in.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"menatahari"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"menatahari"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"menatahari":153}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"    public void parseDueTime_dateTimeString_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"        assertEquals(LocalDateTime.parse(\"2022-12-03T18:00:00\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"                new Parser(\"task /by 2022-12-03 18:00\", \"deadline\").parseDueTime());","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"        assertEquals(LocalDateTime.parse(\"2023-10-03T05:00:00\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"                new Parser(\"other task /by 2023-10-03 05:00\", \"deadline\").parseDueTime());","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"    public void parseDueTime_wrongFormatDateTimeString_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"            new Parser(\"task /by 2022-12-0318:00\", \"deadline\").parseDueTime();","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"            assertEquals(\"Text \u00272022-12-0318:00\u0027 could not be parsed at index 10\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"            new Parser(\"other task /by 2023/10/03 0500\", \"deadline\").parseDueTime();","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"            assertEquals(\"Text \u00272023/10/03 0500\u0027 could not be parsed at index 4\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"menatahari"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"menatahari"},"content":"    public void parseDueTime_emptyDueTime_fail() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"menatahari"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class,","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"menatahari"},"content":"                () -\u003e new Parser(\"task /by \", \"deadline\").parseDueTime());","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"menatahari":40}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"menatahari"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"menatahari"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"menatahari"},"content":"    public void addTask_toDo_successStringReturned() {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"menatahari"},"content":"        assertEquals(\"[T][ ] task\",","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"menatahari"},"content":"                new TaskList().addTask(new ToDo(\"task\", false)));","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"menatahari"},"content":"        assertEquals(\"[T][X] task\",","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"menatahari"},"content":"                new TaskList().addTask(new ToDo(\"task\", true)));","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"menatahari"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"menatahari"},"content":"    public void addTask_deadline_successStringReturned() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"menatahari"},"content":"        assertEquals(\"[D][ ] task (by: Oct 5 2024)\",","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"menatahari"},"content":"                new TaskList().addTask(","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"menatahari"},"content":"                        new Deadline(","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"menatahari"},"content":"                                \"task\",","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"menatahari"},"content":"                                false,","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"menatahari"},"content":"                                LocalDate.parse(\"2024-10-05\"))));","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"menatahari"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"menatahari"},"content":"    public void addTask_event_successStringReturned() {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"menatahari"},"content":"        assertEquals(\"[E][ ] task (from: now to: tomorrow)\",","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"menatahari"},"content":"                new TaskList().addTask(","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"menatahari"},"content":"                        new Event(\"task\", false, \"now\", \"tomorrow\")));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"menatahari"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"menatahari"},"content":"    public void deleteTask_indexInBound_successStringReturned() {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"menatahari"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"menatahari"},"content":"        t.addTask(new Event(\"task\", false, \"now\", \"tomorrow\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"menatahari"},"content":"        t.addTask(new ToDo(\"task\", false));","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"menatahari"},"content":"        assertEquals(\"[T][ ] task\", t.deleteTask(2));","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"menatahari"},"content":"        assertEquals(\"[E][ ] task (from: now to: tomorrow)\", t.deleteTask(1));","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"menatahari"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"menatahari"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"menatahari"},"content":"    public void deleteTask_indexOutOfBound_fail() {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"menatahari"},"content":"        assertThrows(IndexOutOfBoundsException.class,","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"menatahari"},"content":"                () -\u003e new TaskList().deleteTask(2));","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"menatahari"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"menatahari"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"menatahari":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"menatahari"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"menatahari"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"menatahari"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"menatahari"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"menatahari"},"content":"laundry","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"menatahari"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"menatahari"},"content":"unmark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"menatahari"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"menatahari"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"menatahari"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"menatahari":10}}]
