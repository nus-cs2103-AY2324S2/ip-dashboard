[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"    archiveBaseName \u003d \"tobias\"","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jawad280":17,"-":40}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"include \u0027src:main:resources\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"findProject(\u0027:src:main:resources\u0027)?.name \u003d \u0027resources\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jawad280":3}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import javafx.geometry.NodeOrientation;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    private Text dialog;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    public DialogBox(String text, Image img, String color) {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"        this.setStyle(\"-fx-background-color: \" + color + \"; -fx-background-radius: 10; -fx-border-radius: 10;\");","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        double textWidth \u003d dialog.getBoundsInParent().getWidth();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        if (textWidth \u003e 325.0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"            dialog.setWrappingWidth(325.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"    private void flip() {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"        this.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        dialog.setNodeOrientation(NodeOrientation.LEFT_TO_RIGHT);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        dialog.setWrappingWidth(330.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"        return new DialogBox(text, img, \"#E4FBFF\");","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"    public static DialogBox getTobiasDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"        var db \u003d new DialogBox(text, img, \"#FFA329\");","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"        db.flip();","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"        return db;","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jawad280":63}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"public class Launcher {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jawad280":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    private Tobias tobias \u003d new Tobias(\"data/Tobias.txt\");","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTobias(tobias);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"            stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jawad280":26}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"import exception.TobiasException;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.control.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    private MenuItem about;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"    private Tobias tobias;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/michaelUser.jpeg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    private final Image tobiasImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tobiasBot.jpeg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    public void setTobias(Tobias tobias) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        this.tobias \u003d tobias;","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Tobias\u0027s reply and then appends them to","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"        dialogContainer.heightProperty().addListener((observable -\u003e scrollPane.setVvalue(1.0)));","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"            response \u003d tobias.getResponse(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"        } catch (TobiasException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"            response \u003d e.printMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"                DialogBox.getTobiasDialog(response, tobiasImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"            pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"            pause.play();","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"    private void handleAbout() {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"        Alert aboutPopup \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"        aboutPopup.setTitle(\"About\");","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"        aboutPopup.setHeaderText(\"Tobias Bot\");","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"        aboutPopup.setContentText(\"A powerful text-based chat-bot to keep track of your life !!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"        aboutPopup.showAndWait();","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"    private void handleHelp() {","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"        Alert aboutPopup \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"        aboutPopup.setTitle(\"Commands\");","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"        aboutPopup.setHeaderText(\"Tobias Bot\");","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"        String info \u003d \"You can ask me to do the following quests for you, mate:\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"                \"hello: I will aptly reply!\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"                \"list: I will print the list of tasks you have at the moment, sire...\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"                \"todo: I will create a todo:\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"                \"\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"                \"todo conquer the world\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"Jawad280"},"content":"                \"deadline: I will create a deadline with, well... a deadline:\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"                \"\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"Jawad280"},"content":"                \"deadline Issue a worldwide threat /by 15-02-2024 1600\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"Jawad280"},"content":"                \"event: I will create an event with \u0027from\u0027 and \u0027to\u0027:\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"                \"\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"Jawad280"},"content":"                \"event World Domination /from 11-02-2024 1000 /to 22-02-2030 2359\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"Jawad280"},"content":"                \"mark: Suppose you finish a task, I can mark it if you give me the task index:\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"                \"\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"                \"mark 1\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"Jawad280"},"content":"                \"unmark: Suppose you un-finished a task, I can unmark it if you give me the task index:\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"Jawad280"},"content":"                \"\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"Jawad280"},"content":"                \"unmark 1\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"Jawad280"},"content":"                \"delete: If you want to ELIMINATE a task, give me the task index and watch it burn:\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"Jawad280"},"content":"                \"\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"Jawad280"},"content":"                \"delete 1\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"Jawad280"},"content":"                \"find: Give me the task index and I will find it:\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"Jawad280"},"content":"                \"\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"Jawad280"},"content":"                \"find ham\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"Jawad280"},"content":"                \"tag: You can add some unique tags to some tasks (you can use this command repeatedly for a task):\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"                \"\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"                \"tag 1 urgent\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"Jawad280"},"content":"                \"\\n\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"Jawad280"},"content":"                \"untag: You can remove a tag of a task by providing the taskIndex followed by tagIndex:\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"Jawad280"},"content":"                \"\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"Jawad280"},"content":"                \"untag 1 2\";","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"Jawad280"},"content":"        aboutPopup.setContentText(info);","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"Jawad280"},"content":"        aboutPopup.showAndWait();","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"Jawad280"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"Jawad280"},"content":"        showWelcomeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"Jawad280"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"Jawad280"},"content":"        String result \u003d Ui.printDivider()","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"Jawad280"},"content":"                + \"   Hello there ! I\u0027m Tobias Funke !!\"","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"Jawad280"},"content":"                + \"   What can I do for you today ?\"","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"Jawad280"},"content":"                + Ui.printDivider();","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"Jawad280"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"Jawad280"},"content":"                DialogBox.getTobiasDialog(result, tobiasImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"Jawad280"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jawad280":141}},{"path":"src/main/java/Tobias.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"import command.Command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"import exception.TobiasException;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import parser.Parser;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class Tobias {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * Constructor for the bot Tobias.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"     * @param filePath The relative string file path of the saved data.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    public Tobias(String filePath) {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        storage.createLocalStorage();","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"            tasks \u003d storage.localToCurrent();","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    public String getResponse(String input) throws TobiasException{","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"            Command c \u003d Parser.parseCommands(input.trim(), tasks);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"            response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"        } catch (TobiasException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"            response \u003d e.printMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        return response;","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jawad280":43}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":9}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    protected String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Deadline Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"     * @param deadline LocalDateTime object of deadline date/time of Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    public DeadlineCommand(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Deadline Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"     * @param deadline LocalDateTime object of deadline date/time of Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"     * @param isDone Boolean value if Deadline is done.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"    public DeadlineCommand(String description, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"     * Creates a Deadline \u0026 adds to the current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        Task task \u003d new Deadline(description, isDone, deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"        tasks.addToList(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"        return ui.addedTaskPrinter(task, tasks.taskNum());","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":66}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Delete Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * @param taskIndex index of the task to be deleted.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"     * Deletes the task from the current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        Task curr \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        tasks.removeFromList(taskIndex);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        String result \u003d Ui.printDivider()","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"                + \"Noted, I\u0027ve removed this task: \"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"                + curr.taskPrinter()","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"                + Ui.printDivider();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":52}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.Event;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    protected String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Event Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"     * @param from LocalDateTime object of from of Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"     * @param to LocalDateTime object of to of Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"    public EventCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Event Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"     * @param from LocalDateTime object of from of Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"     * @param to LocalDateTime object of to of Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"     * @param isDone Boolean value if Event is done.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"    public EventCommand(String description, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"     * Creates a new Event and adds it to the current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"        Task task \u003d new Event(description, isDone, from, to);","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        tasks.addToList(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"        return ui.addedTaskPrinter(task, tasks.taskNum());","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":71}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"     * Saves the current TaskList and closes program.","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"        storage.storeToLocal(tasks);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        return ui.goodbyePrinter();","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        return true;","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":31}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import exception.TobiasException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    private String keyWord;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Find Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * @param keyWord The keyword that is being searched for.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    public FindCommand(String keyWord) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     * Finds the tasks with the keyword and prints them in the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"            result \u003d tasks.printListFind(keyWord);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"        } catch (TobiasException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"            result \u003d e.printMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"     * @return boolean value of true if this command is an exit command.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jawad280":51}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import exception.TobiasException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"     * Prints all the tasks in the current TaskList in the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"            result \u003d tasks.printList();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        } catch (TobiasException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"            e.printMessage();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":38}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Mark Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * @param taskIndex The index of the task to be marked.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"     * Marks the task at taskIndex of tasks as done.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        Task curr \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        curr.markAsDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        String result \u003d Ui.printDivider()","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"                + \"Nice! I\u0027ve marked this task as done: \"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"                + curr.taskPrinter(taskIndex)","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"                + Ui.printDivider();","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":53}},{"path":"src/main/java/command/ReplyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class ReplyCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    private String customMessage;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Reply Command.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * @param customMessage message to be returned.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    public ReplyCommand(String customMessage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"        this.customMessage \u003d customMessage;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"     * Returns the custom message as a String.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        return customMessage;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jawad280":41}},{"path":"src/main/java/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    private String tag;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Tag Command.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * @param taskIndex index of the task to be tagged.","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * @param tag String tag that needs to be tagged.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    public TagCommand(int taskIndex, String tag) {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * Adds a tag to the task from the current TaskList.","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        Task curr \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"        curr.addTag(tag);","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"        tasks.replaceTask(taskIndex, curr);","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        String result \u003d Ui.printDivider()","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"                + \"Noted, I\u0027ve tagged this task: \"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"                + curr.taskPrinter()","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"                + Ui.printDivider();","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Jawad280":58}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import task.ToDo;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Todo Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of Todo.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Todo Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of Todo.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"     * @param isDone Boolean value if Event is done.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    public TodoCommand(String description, boolean isDone) {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"     * Creates a new Todo and adds it to the current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        Task task \u003d new ToDo(description, isDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"        tasks.addToList(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"        return ui.addedTaskPrinter(task, tasks.taskNum());","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":57}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Un-mark Command.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * @param taskIndex The index of the task to be unmarked.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"     * Un-marks the task at taskIndex of tasks as done.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        Task curr \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        curr.markAsUndone();","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        String result \u003d Ui.printDivider()","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"                + \"OK, I\u0027ve marked this task as not done : \"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"                + curr.taskPrinter(taskIndex)","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"                + Ui.printDivider();","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":54}},{"path":"src/main/java/command/UntagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    private int tagIndex;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * Constructor for Un-tag Command.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * @param taskIndex The index of the task to be unmarked.","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    public UntagCommand(int taskIndex, int tagIndex) {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        this.tagIndex \u003d tagIndex;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * Un-tags the tag at tagIndex of the task at taskIndex.","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"     * @param storage Current Storage.","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        Task curr \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        curr.untag(tagIndex);","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"        String result \u003d Ui.printDivider()","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"                + \"OK, I\u0027ve untagged the task : \"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"                + curr.taskPrinter(taskIndex)","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"                + Ui.printDivider();","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"     * Informs if this command is an Exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value of true if this command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Jawad280":56}},{"path":"src/main/java/exception/TobiasException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package exception;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"public class TobiasException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"     * Constructor for TobiasException.","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"     * @param message Message that will be printed for the instance of TobiasException.","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    public TobiasException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * Prints the message of the instance of TobiasException in the console with dividers.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    public String printMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"        String divider \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        String result \u003d divider","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"                + getMessage()","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"                + divider;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jawad280":27}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package parser;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import command.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import exception.TobiasException;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"public class Parser {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * Takes in a string representation of date/time and returns it as a LocalDateTime object.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * @param dateTime String of the required date/time information.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"     * @return a LocalDateTime object with the provided date/time information.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"     * @throws TobiasException if the dateTime string does not follow format of dd-MM-yyyy HHmm.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    public static LocalDateTime dateFromString(String dateTime) throws TobiasException {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"            return LocalDateTime.parse(dateTime.trim(), DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"            throw new TobiasException(\"Kindly enter the date or time in this format : dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"     * Takes in a command as a String and a TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"     * Interprets that command and returns the relevant Command object.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"     * @param command Type of command given as a String","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"     * @param tasks TaskList","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"     * @throws TobiasException for each possible type of commands and/or if command is not valid.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"     * @return The relevant type of Command object.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"    public static Command parseCommands(String command, TaskList tasks) throws TobiasException {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        if (command.equals(\"hello\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"            return new ReplyCommand(\"Howdy there partner !\");","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        } else if(command.equals(\"list\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a description !\");","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"            String blank \u003d command.substring(4,5);","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after todo!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"            String description \u003d command.substring(5);","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"            return new TodoCommand(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"            if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a description !\");","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"            String blank \u003d command.substring(8,9);","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after deadline!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"            int byIndex \u003d command.indexOf(\"/by\");","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please use \u0027/by\u0027 to specify the deadline!!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"            String description \u003d command.substring(9, byIndex);","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"            int deadlineIndex \u003d byIndex+4;","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"            if (deadlineIndex \u003e command.length()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a date \u0026 time in this format : dd-MM-yyyy HHmm !\");","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"            String deadline \u003d command.substring(byIndex + 4);","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"            LocalDateTime dd \u003d dateFromString(deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"            if (deadline.isEmpty() || deadline.isBlank()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a date \u0026 time in this format : dd-MM-yyyy HHmm !\");","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"Jawad280"},"content":"            return new DeadlineCommand(description, dd);","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"Jawad280"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"Jawad280"},"content":"            if (command.equals(\"event\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a description !\");","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"Jawad280"},"content":"            String blank \u003d command.substring(5,6);","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after event!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"Jawad280"},"content":"            int fromIndex \u003d command.indexOf(\"/from\");","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"Jawad280"},"content":"            int toIndex \u003d command.indexOf(\"/to\");","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"Jawad280"},"content":"            if (fromIndex \u003d\u003d -1 \u0026\u0026 toIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a /from and /to date/day/time!!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"Jawad280"},"content":"            if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a /from date/day/time!!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"            if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a /to date/day/time!!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":114,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"Jawad280"},"content":"            if (fromIndex \u003e toIndex \u0026\u0026 toIndex \u003e 0) {","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, you have to enter /from before /to !!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"Jawad280"},"content":"            String from \u003d command.substring(fromIndex + 6, toIndex);","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"Jawad280"},"content":"            if (from.isEmpty() || from.isBlank()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a /from date/day/time!!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"Jawad280"},"content":"            if ((toIndex + 4) \u003e command.length()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a /to date/day/time!!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"Jawad280"},"content":"            String to \u003d command.substring(toIndex + 4);","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"Jawad280"},"content":"            if (to.isEmpty() || to.isBlank()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Hey, please enter a /to date/day/time!!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":134,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":135,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":136,"author":{"gitId":"Jawad280"},"content":"            String description \u003d command.substring(6, fromIndex);","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"Jawad280"},"content":"            LocalDateTime f \u003d dateFromString(from);","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"Jawad280"},"content":"            LocalDateTime t \u003d dateFromString(to);","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"Jawad280"},"content":"            return new EventCommand(description, f, t);","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"Jawad280"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"Jawad280"},"content":"            int size \u003d tasks.taskNum();","lastModifiedDate":"2024-01-26"},{"lineNumber":144,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":145,"author":{"gitId":"Jawad280"},"content":"            if (size \u003d\u003d 0) {","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Your list is empty at the moment, add some todos/events/deadlines to MARK them!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"Jawad280"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"No index provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":152,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":153,"author":{"gitId":"Jawad280"},"content":"            String blank \u003d command.substring(4,5);","lastModifiedDate":"2024-01-26"},{"lineNumber":154,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after mark!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":157,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"Jawad280"},"content":"            int index \u003d Integer.parseInt(command.substring(5)) - 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":160,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":161,"author":{"gitId":"Jawad280"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c size) {","lastModifiedDate":"2024-01-26"},{"lineNumber":162,"author":{"gitId":"Jawad280"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":164,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Invalid number provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":165,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":166,"author":{"gitId":"Jawad280"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"Jawad280"},"content":"            int size \u003d tasks.taskNum();","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"Jawad280"},"content":"            if (size \u003d\u003d 0) {","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Your list is empty at the moment, add some todos/events/deadlines to UNMARK them!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":171,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":172,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":173,"author":{"gitId":"Jawad280"},"content":"            if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"No index provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":175,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":176,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":177,"author":{"gitId":"Jawad280"},"content":"            String blank \u003d command.substring(6,7);","lastModifiedDate":"2024-01-26"},{"lineNumber":178,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":179,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after unmark!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":181,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":182,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":183,"author":{"gitId":"Jawad280"},"content":"            int index \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":184,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"Jawad280"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c size) {","lastModifiedDate":"2024-01-26"},{"lineNumber":186,"author":{"gitId":"Jawad280"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":187,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":188,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Invalid number provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"Jawad280"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":191,"author":{"gitId":"Jawad280"},"content":"            int size \u003d tasks.taskNum();","lastModifiedDate":"2024-01-26"},{"lineNumber":192,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":193,"author":{"gitId":"Jawad280"},"content":"            if (size \u003d\u003d 0) {","lastModifiedDate":"2024-01-26"},{"lineNumber":194,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Your list is empty at the moment, add some todos/events/deadlines to DELETE them!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":195,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":196,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":197,"author":{"gitId":"Jawad280"},"content":"            if (command.equals(\"delete\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"No index provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":199,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":200,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":201,"author":{"gitId":"Jawad280"},"content":"            String blank \u003d command.substring(6,7);","lastModifiedDate":"2024-01-26"},{"lineNumber":202,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":203,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":204,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after delete!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":205,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":206,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":207,"author":{"gitId":"Jawad280"},"content":"            int index \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":208,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":209,"author":{"gitId":"Jawad280"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c size) {","lastModifiedDate":"2024-01-26"},{"lineNumber":210,"author":{"gitId":"Jawad280"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":211,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":212,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Invalid number provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":213,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":214,"author":{"gitId":"Jawad280"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":215,"author":{"gitId":"Jawad280"},"content":"            if (command.equals(\"find\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":216,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Please enter what you are finding for after \u0027find\u0027 !!!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":217,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":218,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":219,"author":{"gitId":"Jawad280"},"content":"            String blank \u003d command.substring(4,5);","lastModifiedDate":"2024-01-30"},{"lineNumber":220,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":221,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":222,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly enter what you are finding a space after find !!!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":223,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":224,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":225,"author":{"gitId":"Jawad280"},"content":"            String keyWord \u003d command.substring(5);","lastModifiedDate":"2024-01-30"},{"lineNumber":226,"author":{"gitId":"Jawad280"},"content":"            return new FindCommand(keyWord);","lastModifiedDate":"2024-02-05"},{"lineNumber":227,"author":{"gitId":"Jawad280"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":228,"author":{"gitId":"Jawad280"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":229,"author":{"gitId":"Jawad280"},"content":"        } else if (command.startsWith(\"tag\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":230,"author":{"gitId":"Jawad280"},"content":"            int size \u003d tasks.taskNum();","lastModifiedDate":"2024-02-11"},{"lineNumber":231,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":232,"author":{"gitId":"Jawad280"},"content":"            if (size \u003d\u003d 0) {","lastModifiedDate":"2024-02-11"},{"lineNumber":233,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Your list is empty at the moment, add some todos/events/deadlines to TAG them!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":234,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":235,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":236,"author":{"gitId":"Jawad280"},"content":"            if (command.equals(\"tag\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":237,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"No index provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":238,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":239,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":240,"author":{"gitId":"Jawad280"},"content":"            if (command.length() \u003d\u003d 5) {","lastModifiedDate":"2024-02-11"},{"lineNumber":241,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"No tag provided! Please give a valid tag !!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":242,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":243,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":244,"author":{"gitId":"Jawad280"},"content":"            String blank \u003d command.substring(3,4);","lastModifiedDate":"2024-02-11"},{"lineNumber":245,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":246,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":247,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after tag!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":248,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":249,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":250,"author":{"gitId":"Jawad280"},"content":"            String blankAgain \u003d command.substring(5,6);","lastModifiedDate":"2024-02-11"},{"lineNumber":251,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":252,"author":{"gitId":"Jawad280"},"content":"            if (!blankAgain.isBlank()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":253,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after the task index!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":254,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":255,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":256,"author":{"gitId":"Jawad280"},"content":"            int index \u003d Integer.parseInt(command.substring(4, 5)) - 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":257,"author":{"gitId":"Jawad280"},"content":"            String taskTag \u003d command.substring(6);","lastModifiedDate":"2024-02-11"},{"lineNumber":258,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":259,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":260,"author":{"gitId":"Jawad280"},"content":"            if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2024-02-11"},{"lineNumber":261,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Invalid number provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":262,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":263,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":264,"author":{"gitId":"Jawad280"},"content":"            return new TagCommand(index, taskTag);","lastModifiedDate":"2024-02-11"},{"lineNumber":265,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":266,"author":{"gitId":"Jawad280"},"content":"        } else if (command.startsWith(\"untag\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":267,"author":{"gitId":"Jawad280"},"content":"            int size \u003d tasks.taskNum();","lastModifiedDate":"2024-02-11"},{"lineNumber":268,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":269,"author":{"gitId":"Jawad280"},"content":"            if (size \u003d\u003d 0) {","lastModifiedDate":"2024-02-11"},{"lineNumber":270,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Your list is empty at the moment, add some todos/events/deadlines to UNTAG them!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":271,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":272,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":273,"author":{"gitId":"Jawad280"},"content":"            if (command.equals(\"untag\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":274,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"No index provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":275,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":276,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":277,"author":{"gitId":"Jawad280"},"content":"            if (command.length() \u003d\u003d 7) {","lastModifiedDate":"2024-02-11"},{"lineNumber":278,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type the tag index you want to untag!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":279,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":280,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":281,"author":{"gitId":"Jawad280"},"content":"            String blank \u003d command.substring(5,6);","lastModifiedDate":"2024-02-11"},{"lineNumber":282,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":283,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":284,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after untag!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":285,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":286,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":287,"author":{"gitId":"Jawad280"},"content":"            int index \u003d Integer.parseInt(command.substring(6,7)) - 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":288,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":289,"author":{"gitId":"Jawad280"},"content":"            blank \u003d command.substring(7,8);","lastModifiedDate":"2024-02-11"},{"lineNumber":290,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":291,"author":{"gitId":"Jawad280"},"content":"            if (!blank.isBlank()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":292,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Kindly type your task a space after task index!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":293,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":294,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":295,"author":{"gitId":"Jawad280"},"content":"            int tagIndex \u003d Integer.parseInt(command.substring(8)) - 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":296,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":297,"author":{"gitId":"Jawad280"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c size) {","lastModifiedDate":"2024-02-11"},{"lineNumber":298,"author":{"gitId":"Jawad280"},"content":"                return new UntagCommand(index, tagIndex);","lastModifiedDate":"2024-02-11"},{"lineNumber":299,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":300,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Invalid number provided! Please give a valid index from 1 to \" + size +\" !!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":301,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":302,"author":{"gitId":"Jawad280"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":303,"author":{"gitId":"Jawad280"},"content":"            throw new TobiasException(\"I don\u0027t understand the words that are coming out of your mouth!!\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":304,"author":{"gitId":"Jawad280"},"content":"                    + \"Check the help menu to see what I am capable of...\");","lastModifiedDate":"2024-02-12"},{"lineNumber":305,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":306,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":307,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":307}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import exception.TobiasException;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import parser.Parser;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import java.io.File;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"public class Storage {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    private String filePath;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"     * Constructor for a Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"     * @param filePath The relative string file path of the saved data.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"     * Checks if there is a local saved txt file at the filePath.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"     * If there exists no such .txt file, it will create a new save file at the filePath.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    public void createLocalStorage() {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"                System.out.println(\"I have made a new save file for ya : \" + file.getAbsolutePath());","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"                System.out.println(\"You seem to have an existing save file, YAY : \" + file.getAbsolutePath());","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"     * Reads data of commands from the local save file and adds them to the given TaskList.","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"     * @param data String of commands.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"     * @param tasks TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"     * @throws TobiasException If the given data contains corrupted commands.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"    public static void localToList(String data, TaskList tasks) throws TobiasException {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        if (data.startsWith(\"T\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"            boolean isDone \u003d Integer.parseInt(data.substring(8,9)) \u003d\u003d 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"            int desc \u003d data.indexOf(\"|desc\");","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"            int tag \u003d data.indexOf(\"|tag\");","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"            if (tag \u003d\u003d -1) {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"                String description \u003d data.substring(desc+5);","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"                Task newTask \u003d new ToDo(description, isDone);","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"                tasks.addToList(newTask);","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"                String description \u003d data.substring(desc+5, tag);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"                String tagString \u003d data.substring(tag+4);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"                String[]tags \u003d tagString.split(\"_\");","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"                Task newTask \u003d new ToDo(description, isDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"                for (String t : tags){","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"                    newTask.addTag(t);","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"                tasks.addToList(newTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"        } else if (data.startsWith(\"D\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"Jawad280"},"content":"            boolean isDone \u003d Integer.parseInt(data.substring(8,9)) \u003d\u003d 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"            int desc \u003d data.indexOf(\"|desc\");","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"Jawad280"},"content":"            int by \u003d data.indexOf(\"|by\");","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"Jawad280"},"content":"            int tag \u003d data.indexOf(\"|tag\");","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"            if (tag \u003d\u003d -1) {","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"Jawad280"},"content":"                String description \u003d data.substring(desc+5, by);","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"Jawad280"},"content":"                String byDate \u003d data.substring(by+3);","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"Jawad280"},"content":"                LocalDateTime dd \u003d Parser.dateFromString(byDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"                Task newTask \u003d new Deadline(description, isDone, dd);","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"                tasks.addToList(newTask);","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"Jawad280"},"content":"                String description \u003d data.substring(desc+5, by);","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"Jawad280"},"content":"                String byDate \u003d data.substring(by+3, tag);","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"Jawad280"},"content":"                String tagString \u003d data.substring(tag+4);","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"Jawad280"},"content":"                LocalDateTime dd \u003d Parser.dateFromString(byDate);","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"Jawad280"},"content":"                String[]tags \u003d tagString.split(\"_\");","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"Jawad280"},"content":"                Task newTask \u003d new Deadline(description, isDone, dd);","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"Jawad280"},"content":"                for (String t : tags){","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"Jawad280"},"content":"                    newTask.addTag(t);","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"Jawad280"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"Jawad280"},"content":"                tasks.addToList(newTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"Jawad280"},"content":"        } else if (data.startsWith(\"E\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"Jawad280"},"content":"            boolean isDone \u003d Integer.parseInt(data.substring(8,9)) \u003d\u003d 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"Jawad280"},"content":"            int desc \u003d data.indexOf(\"|desc\");","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"Jawad280"},"content":"            int from \u003d data.indexOf(\"|from\");","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"Jawad280"},"content":"            int to \u003d data.indexOf(\"|to\");","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"Jawad280"},"content":"            int tag \u003d data.indexOf(\"|tag\");","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"Jawad280"},"content":"            if (tag \u003d\u003d -1) {","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"Jawad280"},"content":"                String description \u003d data.substring(desc+5, from);","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"Jawad280"},"content":"                String fromDate \u003d data.substring(from+5, to);","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"Jawad280"},"content":"                String toDate \u003d data.substring(to+3);","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"Jawad280"},"content":"                LocalDateTime f \u003d Parser.dateFromString(fromDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"Jawad280"},"content":"                LocalDateTime t \u003d Parser.dateFromString(toDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"Jawad280"},"content":"                Task newTask \u003d new Event(description, isDone, f, t);","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"Jawad280"},"content":"                tasks.addToList(newTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":134,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"Jawad280"},"content":"                String description \u003d data.substring(desc+5, from);","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"Jawad280"},"content":"                String fromDate \u003d data.substring(from+5, to);","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"Jawad280"},"content":"                String toDate \u003d data.substring(to+3, tag);","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"Jawad280"},"content":"                String tagString \u003d data.substring(tag+4);","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"Jawad280"},"content":"                String[]tags \u003d tagString.split(\"_\");","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"Jawad280"},"content":"                LocalDateTime f \u003d Parser.dateFromString(fromDate);","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"Jawad280"},"content":"                LocalDateTime t \u003d Parser.dateFromString(toDate);","lastModifiedDate":"2024-02-11"},{"lineNumber":144,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":145,"author":{"gitId":"Jawad280"},"content":"                Task newTask \u003d new Event(description, isDone, f, t);","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"Jawad280"},"content":"                for (String tt : tags){","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"Jawad280"},"content":"                    newTask.addTag(tt);","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"Jawad280"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"Jawad280"},"content":"                tasks.addToList(newTask);","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"Jawad280"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"Jawad280"},"content":"            throw new TobiasException(\"OH NO, someone has ruined your save file :(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":160,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"Jawad280"},"content":"     * Reads the local saved .txt file at the filePath.","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"Jawad280"},"content":"     * Calls localToList to interpret and add the commands that have been saved in the local .txt file.","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"Jawad280"},"content":"    public TaskList localToCurrent() {","lastModifiedDate":"2024-01-26"},{"lineNumber":165,"author":{"gitId":"Jawad280"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-26"},{"lineNumber":166,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":167,"author":{"gitId":"Jawad280"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"Jawad280"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"Jawad280"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":171,"author":{"gitId":"Jawad280"},"content":"                localToList(s.nextLine(), tasks);","lastModifiedDate":"2024-01-26"},{"lineNumber":172,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":173,"author":{"gitId":"Jawad280"},"content":"            s.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"Jawad280"},"content":"        } catch (TobiasException tE) {","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"Jawad280"},"content":"            tE.printMessage();","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"Jawad280"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":177,"author":{"gitId":"Jawad280"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":179,"author":{"gitId":"Jawad280"},"content":"        return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":181,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":182,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"Jawad280"},"content":"     * Takes in a TaskList of tasks and stores it to the local save .txt file.","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"Jawad280"},"content":"     * @param tasks TaskList containing the tasks that need to be saved.","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"Jawad280"},"content":"    public void storeToLocal(TaskList tasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":188,"author":{"gitId":"Jawad280"},"content":"        String result \u003d tasks.saveMechanism();","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":191,"author":{"gitId":"Jawad280"},"content":"            FileWriter fw \u003d new FileWriter(\"data/tobias.txt\");","lastModifiedDate":"2024-01-26"},{"lineNumber":192,"author":{"gitId":"Jawad280"},"content":"            fw.write(result);","lastModifiedDate":"2024-01-26"},{"lineNumber":193,"author":{"gitId":"Jawad280"},"content":"            fw.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":194,"author":{"gitId":"Jawad280"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":195,"author":{"gitId":"Jawad280"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":196,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":197,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":198}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"     * Constructor for a Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"     * @param deadline DateTime object to represent deadline DateTime.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"     * Constructor for a Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"     * @param isDone Boolean value to state if the task is done or not.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     * @param deadline DateTime object to represent deadline DateTime.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"     * Prints the task in the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"    public String taskPrinter() {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"        DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy hhmm a\");","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"    \" + \".[D]\" + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + \"BY: \" + deadline.format(output)","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + this.printTags();","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        if (this.tags.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"            result \u003d \"    \" + \".[D]\" + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"                    + \"        \" + \"BY: \" + deadline.format(output);","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"     * Prints the task and its corresponding index in the list of tasks in the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"    public String taskPrinter(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"        DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy hhmm a\");","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"    \" + (index+1) + \".[D]\" + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + \"BY: \" + deadline.format(output)","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + this.printTags();","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"        if (this.tags.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"            result \u003d \"    \" + (index+1) + \".[D]\" + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"                    + \"        \" + \"BY: \" + deadline.format(output);","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"     * Prints the task in the format of the saved txt file.","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"    public String storagePrinter() {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"        DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"        String tagString \u003d \"|tag\";","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"        if (this.tags.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"            return \"D\" + \"|isdone\" + (isDone ? 1 : 0) + \"|desc\" + description + \"|by\" + deadline.format(output);","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"        for (String t : this.tags) {","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"Jawad280"},"content":"            tagString +\u003d \"_\" + t;","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"        return \"D\" + \"|isdone\" + (isDone ? 1 : 0) + \"|desc\" + description + \"|by\" + deadline.format(output) + tagString;","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"     * Checks if a Deadline is equal to the current instance of Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Jawad280"},"content":"     * @param obj The object that is to be checked for equality with current Deadline object.","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Jawad280"},"content":"     * @return True if the obj is equal else return False.","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Jawad280"},"content":"        if (!super.equals(obj)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Jawad280"},"content":"            return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Jawad280"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Jawad280"},"content":"            Deadline d \u003d (Deadline) obj;","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"Jawad280"},"content":"            return deadline.equals(d.deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jawad280":110}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"     * Constructor for an Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * @param from DateTime object to represent from DateTime.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * @param to DateTime object to represent to DateTime.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * Constructor for an Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * @param isDone Boolean value to state if the task is done or not.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"     * @param from DateTime object to represent from DateTime.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"     * @param to DateTime object to represent to DateTime.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"     * Prints the task in the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    public String taskPrinter() {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"        DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy hhmm a\");","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"    \" + \".[E]\" + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + \"FROM: \" + from.format(output)","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + \"TO: \" + to.format(output)","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + this.printTags();","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        if (this.tags.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"            result \u003d \"    \" + \".[E]\" + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"                    + \"        \" + \"FROM: \" + from.format(output)","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"                    + \"        \" + \"TO: \" + to.format(output);","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"     * Prints the task and its corresponding index in the list of tasks in the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"    public String taskPrinter(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"        DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy hhmm a\");","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"    \" + (index+1) + \".[E]\" + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + \"FROM: \" + from.format(output)","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + \"TO: \" + to.format(output)","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + this.printTags();","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"        if (this.tags.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"            result \u003d \"    \" + (index+1) + \".[E]\" + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"                    + \"        \" + \"FROM: \" + from.format(output)","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"                    + \"        \" + \"TO: \" + to.format(output);","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Jawad280"},"content":"     * Prints the task in the format of the saved txt file.","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Jawad280"},"content":"    public String storagePrinter() {","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Jawad280"},"content":"        DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"        String tagString \u003d \"|tag\";","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"Jawad280"},"content":"        if (this.tags.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"Jawad280"},"content":"            return \"E\" + \"|isdone\" + (isDone ? 1 : 0) + \"|desc\" + description + \"|from\" + from.format(output) + \"|to\" + to.format(output);","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"        for (String t : this.tags) {","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"Jawad280"},"content":"            tagString +\u003d \"_\" + t;","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"Jawad280"},"content":"        return \"E\" + \"|isdone\" + (isDone ? 1 : 0) + \"|desc\" + description + \"|from\" + from.format(output) + \"|to\" + to.format(output) + tagString;","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"Jawad280"},"content":"     * Checks if an Event is equal to the current instance of Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"Jawad280"},"content":"     * @param obj The object that is to be checked for equality with current Event object.","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Jawad280"},"content":"     * @return True if the obj is equal else return False.","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Jawad280"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"        if (!super.equals(obj)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"            return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Jawad280"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Jawad280"},"content":"            Event event \u003d (Event) obj;","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Jawad280"},"content":"            return from.equals(event.from) \u0026\u0026 to.equals(event.to);","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"Jawad280"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jawad280":123}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"    protected ArrayList\u003cString\u003e tags;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"     * Constructor for a Task.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"     * Constructor for a Task.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"     * @param isDone Boolean value to state if the task is done or not.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"     * Gets the status icon of a task.","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"     * @return A checked string if the task is done else returns an empty [].","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"        return isDone ? \"[✔]\" : \"[ ]\";","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    abstract public String taskPrinter();","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"    abstract public String taskPrinter(int index);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"     * Sets the isDone value of task to be true.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"     * Sets the isDone value of task to be false.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"    abstract public String storagePrinter();","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"     * Checks if the keyword exists in the description.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"     * @param keyword The keyword that needs to be searched in the description.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"     * @return Boolean value if such a keyword exists in the description.","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"        String lowercaseDescription \u003d description.toLowerCase();","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"        String lowercaseKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"        return lowercaseDescription.contains(lowercaseKeyword);","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"     * Checks if a Task is equal to the current instance of Task.","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"     * @param obj The object that is to be checked for equality with current Task object.","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"     * @return True if the obj is equal else return False.","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Jawad280"},"content":"            return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Jawad280"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Jawad280"},"content":"            return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Jawad280"},"content":"        Task task \u003d (Task) obj;","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Jawad280"},"content":"        return isDone \u003d\u003d task.isDone \u0026\u0026 description.equals(task.description);","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"Jawad280"},"content":"     * Adds a tag to the current instance of the Task","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"Jawad280"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"Jawad280"},"content":"        if (!tag.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"Jawad280"},"content":"            this.tags.add(tag);","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"Jawad280"},"content":"    public String printTags() {","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"( \";","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"Jawad280"},"content":"        for (String t : this.tags) {","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"Jawad280"},"content":"            result +\u003d \"#\" + t + \", \";","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"        result +\u003d \" )\";","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"Jawad280"},"content":"    public void untag(int tagIndex) {","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"Jawad280"},"content":"        if (tagIndex \u003c this.tags.size()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"Jawad280"},"content":"            this.tags.remove(tagIndex);","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jawad280":123}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package task;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import exception.TobiasException;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"public class TaskList {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"     * Adds task to the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"     * @param task Task to be added to the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"     * Gets the task at index from the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"     * @param index index of Task to be retrieved from TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"     * Removes the task at index from the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"     * @param index index of Task to be removed from TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    public void removeFromList(int index) {","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"     * Formats all the tasks in the TaskList to a save .txt format.","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"     * @return String format of all the tasks in the list in a save .txt friendly format.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"    public String saveMechanism() {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"            result +\u003d task.storagePrinter() + System.lineSeparator();","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"     * Number of tasks in the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"     * @return number of tasks in the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"    public int taskNum() {","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"     * Prints all tasks in the TaskList in console.","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"     * @throws TobiasException if the TaskList is empty.","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"    public String printList() throws TobiasException {","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"        StringBuilder result \u003d new StringBuilder(Ui.printDivider()","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"                + \"Your list is empty at the moment !\"","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Your list is empty at the moment !\");","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"                result \u003d new StringBuilder(Ui.printDivider()","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"Jawad280"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"Jawad280"},"content":"                        + \"Here are the tasks in your list: \"","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"Jawad280"},"content":"                );","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"Jawad280"},"content":"                    int index \u003d tasks.indexOf(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"Jawad280"},"content":"                    result.append(System.lineSeparator()).append(task.taskPrinter(index));","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"Jawad280"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"        } catch (TobiasException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"            e.printMessage();","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"Jawad280"},"content":"        result.append(System.lineSeparator()).append(Ui.printDivider());","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"Jawad280"},"content":"        return result.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Jawad280"},"content":"     * Prints the tasks in the TaskList that have the keyword in console.","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Jawad280"},"content":"     * @param keyword The keyword that needs to be in the task to be printed.","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Jawad280"},"content":"     * @throws TobiasException if there are no tasks with the given keyword.","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"    public String printListFind(String keyword) throws TobiasException {","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"Jawad280"},"content":"        StringBuilder result;","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"Jawad280"},"content":"        List\u003cTask\u003e foundResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Jawad280"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Jawad280"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Jawad280"},"content":"                foundResults.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"Jawad280"},"content":"            if (foundResults.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Jawad280"},"content":"                throw new TobiasException(\"Could not find any results containing keyword : \" + keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"Jawad280"},"content":"                result \u003d new StringBuilder(Ui.printDivider()","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"Jawad280"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"Jawad280"},"content":"                        + \"Here are the matching tasks in your list: \"","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"Jawad280"},"content":"                );","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"Jawad280"},"content":"                for (Task task : foundResults) {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"Jawad280"},"content":"                    int index \u003d tasks.indexOf(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"Jawad280"},"content":"                    result.append(System.lineSeparator()).append(task.taskPrinter(index));","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"Jawad280"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"Jawad280"},"content":"        } catch (TobiasException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"Jawad280"},"content":"            result \u003d new StringBuilder(Ui.printDivider()","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"Jawad280"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"Jawad280"},"content":"                    + e.printMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"Jawad280"},"content":"        result.append(System.lineSeparator()).append(Ui.printDivider());","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"Jawad280"},"content":"        return result.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"Jawad280"},"content":"    public void replaceTask(int index, Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"Jawad280"},"content":"        tasks.set(index, task);","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":151}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"     * Constructor for a ToDo.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * Constructor for a ToDo.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * @param isDone Boolean value to state if the task is done or not.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"     * Prints the task in the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    public String taskPrinter() {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"    \" + \"[T][ ]\" + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + this.printTags();","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        if (this.tags.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"            result \u003d \"    \" + \"[T][ ]\" + \" \" + description;","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"     * Prints the task and its corresponding index in the list of tasks in the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"    public String taskPrinter(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        String result \u003d \"    \" + (index+1) + \".[T]\" + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"                + \"        \" + this.printTags();","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        if (this.tags.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"            result \u003d \"    \" + (index+1) + \".[T]\" + getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"     * Prints the task in the format of the saved txt file.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"    public String storagePrinter() {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"        if (this.tags.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"            return \"T\" + \"|isdone\" + (isDone ? 1 : 0) + \"|desc\" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"        String tagString \u003d \"|tag\";","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"        for (String t : this.tags) {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"            tagString +\u003d \"_\" + t;","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"        return \"T\" + \"|isdone\" + (isDone ? 1 : 0) + \"|desc\" + description + tagString ;","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jawad280":70}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"public class Ui {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"    private static final String DIVIDER \u003d \"---------------------------------------------------\";","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"    private static final String BOTNAME \u003d \"TOBIAS\";","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"     * Prints the welcome message of Tobias in console.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    public String helloPrinter() {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"        String result \u003d DIVIDER","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"                + \"   Hello there! I\u0027m \" + BOTNAME","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"                + \"   How can I be of service my lord ?\"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"                + DIVIDER;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"     * Prints the farewell message of Tobias.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    public String goodbyePrinter() {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        assert DIVIDER !\u003d null \u0026\u0026 BOTNAME !\u003d null: \"Either divider missing or bot name is missing\";","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        String result \u003d DIVIDER","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"                + \"I say this with a heavy heart but Goodbye my lover :(\"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"                + \"Hope to see you soon!\"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"                + DIVIDER;","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"     * Prints the task given and the total number of tasks in the list.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"     * @param task Task that is provided.","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"     * @param size Total number of tasks in the list now.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"    public String addedTaskPrinter(Task task, int size) {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"        assert task !\u003d null \u0026\u0026 size \u003e\u003d 0: \"Either task is null or size is possibly negative\";","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        String result \u003d DIVIDER","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"                + \"Got it. I\u0027ve added this task: \"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"                + task.taskPrinter()","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"                + \"Now you have \" + size + \" tasks in the list!\"","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"                + DIVIDER;","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"     * Prints a divider.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"    public static String printDivider() {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"        assert DIVIDER !\u003d null;","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"        return DIVIDER;","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"     * Takes in the input given by user and returns it as a String","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"     * @return String command of user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"     * */","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Jawad280":81}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"\u003cfx:root alignment\u003d\"CENTER\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"      \u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"450.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"            \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\" AnchorPane.topAnchor\u003d\"10.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"               \u003cclip\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"                  \u003cCircle centerX\u003d\"50.0\" centerY\u003d\"50.0\" radius\u003d\"50\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"               \u003c/clip\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"            \u003cText fx:id\u003d\"dialog\" lineSpacing\u003d\"5.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"120.0\" AnchorPane.topAnchor\u003d\"10.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"               \u003cfont\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"                  \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"               \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"   \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"   \u003ceffect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"      \u003cDropShadow /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"   \u003c/effect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jawad280":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"\u003cAnchorPane maxHeight\u003d\"750.0\" maxWidth\u003d\"500.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"750.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #19405E;\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"4.0\" layoutY\u003d\"6.0\" prefHeight\u003d\"750.0\" prefWidth\u003d\"500.0\" scaleShape\u003d\"false\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"50.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"25.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_RIGHT\" fillWidth\u003d\"false\" maxHeight\u003d\"700.0\" maxWidth\u003d\"500.0\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" spacing\u003d\"15.0\" style\u003d\"-fx-background-color: #35669E;\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"      \u003cMenuBar AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        \u003cmenus\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"            \u003citems\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"            \u003c/items\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"            \u003citems\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"              \u003cMenuItem fx:id\u003d\"about\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleAbout\" text\u003d\"About\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"              \u003cMenuItem fx:id\u003d\"help\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"            \u003c/items\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        \u003c/menus\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"      \u003c/MenuBar\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"      \u003cAnchorPane prefHeight\u003d\"750.0\" prefWidth\u003d\"500.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"700.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"              \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"517.0\" promptText\u003d\"Enter your commands here...\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"80.0\" AnchorPane.topAnchor\u003d\"10.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"                      \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"              \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"61.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\" AnchorPane.topAnchor\u003d\"10.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"               \u003cfont\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"                  \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"               \u003c/font\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jawad280":58}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"import exception.TobiasException;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    public void no_from_and_to_for_events() {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"            Parser.parseCommands(\"event marathon\", testList);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"            Exception m \u003d new TobiasException(\"   Hey, please enter a /from and /to date/day/time!!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"            assertEquals(m.getMessage(), e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    public void invalid_date_syntax() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"            Parser.parseCommands(\"deadline subission /from 11-january-2023 5am\", testList);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"            Exception m \u003d new TobiasException(\"     Hey, please enter a date \u0026 time in this format : dd-MM-yyyy HHmm !\");","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"            assertEquals(m.getMessage(), e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jawad280":32}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"package storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import exception.TobiasException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    public void corrupted_saved_file() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"        // Instead of D for deadline, the file is corrupted and adds a G instead","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"        String testStoredCommand \u003d \"G|isdone1|descmarathon |from15-03-2024 1000|to15-03-2024 1600\";","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"            TaskList testList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"            Storage.localToList(testStoredCommand, testList);","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"        } catch (TobiasException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"            assert(e.getMessage().equals(\"   Saved file is corrupted!\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    public void correct_stored_data_is_loaded() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"        // Should store an event command that is :","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"        // isDone: true,","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        // description : marathon,","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        // from \u0026 to : 15/03/2024 10 am to 15/03/2024 4pm","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"        String testStoredCommand \u003d \"E|isdone1|descmarathon |from15-03-2024 1000|to15-03-2024 1600\";","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"            TaskList testList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(\"15-03-2024 1000\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(\"15-03-2024 1600\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"            Task expected \u003d new Event(\"marathon \", true, from, to);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"            Storage.localToList(testStoredCommand, testList);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"            assert(expected.equals(testList.getTask(0)));","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        } catch (TobiasException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"            e.printMessage();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jawad280":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"todo Run","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"deadline Submission /by Friday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"event Openhouse /from 25 Jan /to 28 Jan","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jawad280":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"java -classpath ../bin Tobias \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jawad280":1,"-":37}}]
