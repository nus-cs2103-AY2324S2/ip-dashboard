[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"    mainClass.set(\"bond.main.Launcher\")","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"checkstyle {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"    archiveBaseName \u003d \"Bond\"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"    archiveFileName \u003d \"Bond.jar\"","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bennyLCK":22,"-":42}},{"path":"src/main/java/bond/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * The AddCommand class is used to classify an add command in the Bond task.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"    private final String taskName;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the AddCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     * @param commandType The type of command.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     * @param taskName    The name of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    public AddCommand(String commandType, String taskName) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"        super(commandType);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"        return this.taskName;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"     * Executes the add task command.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The responses to user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage object.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"     * @return The response message representing a successful execution of command.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"    public String addAndStore(TaskList tasks, Ui ui, Storage storage, Task task)","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"            throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"        String response \u003d ui.taskAdded(task, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"        storage.storeTask(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"        return response;","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"bennyLCK":50}},{"path":"src/main/java/bond/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.DeadlineTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * The AddDeadlineCommand class is used to encapsulate an add deadline task","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * command, which is executed upon invoking the execute() method.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    private String deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the AddDeadlineCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"     * @param taskName The name of the deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"     * @param deadline The end datetime of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"    public AddDeadlineCommand(String taskName, String deadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"        super(\"deadline\", taskName);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"     * Executes the add deadline task command.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage object.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BondException {","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        Task newTask \u003d new DeadlineTask(super.getTaskName(), this.deadline);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"        return super.addAndStore(tasks, ui, storage, newTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"bennyLCK":46}},{"path":"src/main/java/bond/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.EventTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * The AddEventCommand class is used to encapsulate an add event task","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * command, which is executed upon invoking the execute() method.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    private String start;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    private String end;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the AddEventCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"     * @param taskName The name of the event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"     * @param start    The start datetime of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"     * @param end      The end datetime of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"    public AddEventCommand(String taskName, String start, String end) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"        super(\"event\", taskName);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"     * Executes the add event task command.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage object.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BondException {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"        Task newTask \u003d new EventTask(super.getTaskName(), this.start, this.end);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"        return super.addAndStore(tasks, ui, storage, newTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"bennyLCK":49}},{"path":"src/main/java/bond/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TodoTask;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * The AddToDoCommand class is used to encapsulate an add todo task","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * command, which is executed upon invoking the execute() method.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the AddToDoCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     * @param taskName The name of the todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    public AddTodoCommand(String taskName) {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"        super(\"todo\", taskName);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"     * Executes the add todo task command.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage object.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BondException {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"        Task newTask \u003d new TodoTask(super.getTaskName());","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"        return super.addAndStore(tasks, ui, storage, newTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"bennyLCK":42}},{"path":"src/main/java/bond/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * The AddToDoCommand class is used to encapsulate an add todo task","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * command, which is executed upon invoking the execute() method.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    public static final ArrayList\u003cString\u003e COMMANDS \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"        {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"            add(\"todo\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"            add(\"deadline\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"            add(\"event\");","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"            add(\"list\");","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"            add(\"mark\");","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"            add(\"unmark\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"            add(\"bye\");","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"            add(\"delete\");","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"            add(\"find\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"    };","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"    private final String commandType;","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"     * @param commandType The type of command.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"    public Command(String commandType) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"     * Actual behaviour of the command is implemented in the subclasses.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"     * Any changes to the task list will be reflected in the storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws BondException;","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"        return this.commandType;","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"bennyLCK":59}},{"path":"src/main/java/bond/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * The DeleteCommand class is used to encapsulate a delete task","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * command, which is executed upon invoking the execute() method.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    private final int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the DeleteCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"        super(\"delete\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     * Executes the delete task command.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BondException {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"        if (tasks.noTasks()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"delete\", \"EMPTY_LIST\");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        } else if (this.index \u003e\u003d tasks.numberOfTasks()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"delete\", \"INVALID_INDEX\");","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"        Task removedTask \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"        String response \u003d ui.taskDeleted(removedTask, tasks);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"        storage.overwritePreviousSave(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"        return response;","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"bennyLCK":52}},{"path":"src/main/java/bond/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":" * The ExitCommand class is used to encapsulate an exit command, which is","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":" * executed upon invoking the execute() method.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the ExitCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"        super(\"bye\");","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"     * Executes the exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"     * Displays the goodbye message and closes scanner for user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"bennyLCK":35}},{"path":"src/main/java/bond/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":" * The FindCommand class is used to encapsulate a find task command, which is","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * executed upon invoking the execute() method.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the FindCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     * @param keyword The key word used to search for name of task.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"        super(\"find\");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"     * Executes the find task command.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BondException {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"        TaskList foundTasks \u003d tasks.findTasks(this.keyword);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"        return ui.showFoundTasks(foundTasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"bennyLCK":43}},{"path":"src/main/java/bond/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":" * The InvalidCommand class is used to encapsulate any invalid command, which is","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * executed upon invoking the execute() method.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * Upon executing the invalid command, the user interface will display an error message.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the InvalidCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"    public InvalidCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"        super(\"invalid\");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"     * Executes the invalid command.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"     * Displays an error message.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BondException {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"        BondException.raiseException(\"\", \"INVALID_COMMAND\");","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"        return \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"bennyLCK":39}},{"path":"src/main/java/bond/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":" * The ListCommand class is used to encapsulate a list command, which is","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * executed upon invoking the execute() method.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @version 0.1","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the ListCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"        super(\"list\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"     * Executes the list command.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BondException {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"        return tasks.noTasks() ? ui.showTaskListEmpty() : ui.showList(tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"bennyLCK":38}},{"path":"src/main/java/bond/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * The MarkCommand class is used to encapsulate a mark task command, which is","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * executed upon invoking the execute() method.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    private final int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the MarkCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     * @param index The index of the task to be marked as complete.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"        super(\"mark\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     * Executes the mark task command.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BondException {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"        if (this.index \u003e\u003d tasks.numberOfTasks()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"delete\", \"INVALID_INDEX\");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"        Task markedTask \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"        markedTask.markAsComplete();","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"        String response \u003d ui.taskMarked(markedTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"        storage.overwritePreviousSave(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"        return response;","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"bennyLCK":52}},{"path":"src/main/java/bond/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * The UnmarkCommand class is used to encapsulate an unmark task","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * command, which is executed upon invoking the execute() method.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    private final int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the UnmarkCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     * @param index The index of the task to be marked as incomplete.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"        super(\"unmark\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     * Executes the unmark task command.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BondException {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"        if (this.index \u003e\u003d tasks.numberOfTasks()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"delete\", \"INVALID_INDEX\");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"        Task markedTask \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"        markedTask.markAsIncomplete();","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"        String response \u003d ui.taskUnmarked(markedTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"        storage.overwritePreviousSave(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"        return response;","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"bennyLCK":52}},{"path":"src/main/java/bond/main/Bond.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import bond.command.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":" * The Bond entity class for the Bond task management program.","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * @version 0.1","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"public class Bond {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"    protected Ui ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the Bond class.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"    public Bond() throws BondException {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"        this.storage \u003d new Storage(System.getProperty(\"user.home\") + \"/data/Bond.txt\");","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"            this.taskList \u003d new TaskList(this.storage.load());","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"            this.taskList \u003d new TaskList(null);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"load\", \"LOAD_FAILURE\");","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"     * Generates a response to user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"            return c.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"bennyLCK":46}},{"path":"src/main/java/bond/main/BondException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":" * The BondException class is used to handle exceptions in the Bond task","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":" * management program.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"public class BondException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"    private enum ExceptionType {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"        EMPTY_DESCRIPTION, INVALID_COMMAND_TYPE, MISSING_INDEX, EXTRA_DETAILS,","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"                INVALID_INDEX, EMPTY_LIST, STORE_FAILURE, LOAD_FAILURE, INVALID_DATE_FORMAT,","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"                        INVALID_TIME_FORMAT, INVALID_DATETIME_FORMAT, INVALID_KEYWORD","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the BondException class.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     * @param message The message to be displayed when the exception is raised.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"    private BondException(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"        super(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"     * Raises an exception based on the task name and the exception type.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"     * @param taskName      The name of the task that the exception is raised for.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     * @param exceptionType The reason why the exception that is raised.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"    public static void raiseException(String taskName, String exceptionType) throws BondException {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"        if (exceptionType.equals(ExceptionType.INVALID_COMMAND_TYPE.toString())) {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"WHAT do you MEAN???????????\";","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.EMPTY_DESCRIPTION.toString())) {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"Are you for REAL??? No info for a \" + taskName;","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.MISSING_INDEX.toString())) {","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"WHY did you not give me an INDEX to \" + taskName + \" a task!!!\";","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.EXTRA_DETAILS.toString())) {","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"I see, you are SO EXTRA and saying \" + taskName + \" needs MORE!!!\";","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.INVALID_INDEX.toString())) {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"WHY did you not give me a PROPER INDEX to \" + taskName + \" a task!!!\";","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.EMPTY_LIST.toString())) {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"ADD something to the list first, BEFORE you \" + taskName + \" something!!!\";","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.STORE_FAILURE.toString())) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"            message \u003d String.format(\"I COULD NOT %s your tasks!!!\", taskName.toUpperCase());","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.LOAD_FAILURE.toString())) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"            message \u003d String.format(\"I COULD NOT %s your tasks!!!\", taskName.toUpperCase());","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.INVALID_DATE_FORMAT.toString())) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"Give the DATE(s) in the CORRECT FORMAT!!!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.INVALID_TIME_FORMAT.toString())) {","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"Give the TIME in the CORRECT FORMAT!!!\";","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.INVALID_DATETIME_FORMAT.toString())) {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"Give the DATETIME in the CORRECT FORMAT!!!\";","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"        } else if (exceptionType.equals(ExceptionType.INVALID_KEYWORD.toString())) {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"            message \u003d \"Give me a PROPER KEYWORD to search for!!!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"bennyLCK"},"content":"        throw new BondException(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"bennyLCK":67}},{"path":"src/main/java/bond/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":" * Represents a custom control using FXML.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"    private void flip() {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"    public static DialogBox getBondDialog(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"bennyLCK":63}},{"path":"src/main/java/bond/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"public class Launcher {","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"bennyLCK":14}},{"path":"src/main/java/bond/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" * A GUI for Bond using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    private Bond bond;","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"            stage.setTitle(\"Bond\");","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"            {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"                try {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"                    bond \u003d new Bond();","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"                } catch (BondException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"                    assert bond !\u003d null : \"Bond object should be instantiated with an empty TaskList.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"                    fxmlLoader.\u003cMainWindow\u003egetController().tellUser(e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"                }","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBond(bond);","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"            stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"     * Allows the application to terminate after a \u0027bye\u0027 command is processed.","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"    protected static void exitApplication() {","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"        ScheduledExecutorService scheduler \u003d Executors.newScheduledThreadPool(1);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"        // Delay for 2 second","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"        int delayInSeconds \u003d 2;","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"        // Task to be executed after the delay","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"        Runnable delayedTask \u003d () -\u003e System.exit(0);","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bennyLCK"},"content":"        // Schedule the task with the desired delay","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bennyLCK"},"content":"        scheduler.schedule(delayedTask, delayInSeconds, TimeUnit.SECONDS);","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"bennyLCK"},"content":"        assert false : \"Application should have exited.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"bennyLCK":70}},{"path":"src/main/java/bond/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"    private Bond bond;","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Anya.jpeg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    private Image bondImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bond.jpeg\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"     * Sets up the window initially when program opens up.","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"    public void setBond(Bond d) {","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"        bond \u003d d;","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        welcomeUser();","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"    protected void tellUser(String message) {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"                DialogBox.getBondDialog(message, bondImage)","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"        );","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"    protected void welcomeUser() {","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"        tellUser(bond.ui.showWelcome());","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Bond\u0027s reply and then appends them to","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"        String response \u003d bond.getResponse(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"bennyLCK"},"content":"        assert response !\u003d null : \"Response should not be null.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"bennyLCK"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"bennyLCK"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"bennyLCK"},"content":"                DialogBox.getBondDialog(response, bondImage)","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bennyLCK"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"bennyLCK"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"bennyLCK"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"bennyLCK"},"content":"            Main.exitApplication();","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"bennyLCK"},"content":"            assert false : \"Application should have exited.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"bennyLCK":80}},{"path":"src/main/java/bond/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.command.AddDeadlineCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.command.AddEventCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"import bond.command.AddTodoCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"import bond.command.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"import bond.command.DeleteCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"import bond.command.ExitCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"import bond.command.FindCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"import bond.command.InvalidCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"import bond.command.ListCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"import bond.command.MarkCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"import bond.command.UnmarkCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":" * The Parser class is used to parse user input and create the appropriate","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":" * Command object.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"public abstract class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    private static final HashMap\u003cString, String\u003e MONTH_FORMATS \u003d new HashMap\u003c\u003e() {","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"        {","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"            put(\"Jan\", \"01\");","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"            put(\"Feb\", \"02\");","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"            put(\"Mar\", \"03\");","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"            put(\"Apr\", \"04\");","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"            put(\"May\", \"05\");","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"            put(\"Jun\", \"06\");","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"            put(\"Jul\", \"07\");","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"            put(\"Aug\", \"08\");","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"            put(\"Sep\", \"09\");","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"            put(\"Oct\", \"10\");","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"            put(\"Nov\", \"11\");","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"            put(\"Dec\", \"12\");","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"    };","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"     * Changes the date format from \"MMM dd yyyy\" to \"yyyy-MM-dd\".","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"     * @param month The month in the date.","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"     * @param day   The day in the date.","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"     * @param year  The year in the date.","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"     * @return The date in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"    public static String changeDateFormat(String month, String day, String year) {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"        String newMonth \u003d \"\";","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"        String newDay;","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"        if (MONTH_FORMATS.containsKey(month)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"            newMonth \u003d MONTH_FORMATS.get(month);","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"        if (day.length() \u003d\u003d 1) {","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"bennyLCK"},"content":"            newDay \u003d \"0\" + day;","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"bennyLCK"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"bennyLCK"},"content":"            newDay \u003d day;","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"bennyLCK"},"content":"        return year + \"-\" + newMonth + \"-\" + newDay;","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"bennyLCK"},"content":"     * Checks if the user input is a valid command.","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"bennyLCK"},"content":"     * @param input The user input to be checked.","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"bennyLCK"},"content":"     * @return True if the user input is a valid command, false otherwise.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"bennyLCK"},"content":"    public static boolean isValidCommand(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"bennyLCK"},"content":"        return Command.COMMANDS.contains(input.toLowerCase());","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"bennyLCK"},"content":"     * Checks if the input is a number.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"bennyLCK"},"content":"     * @param input The input to be checked.","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"bennyLCK"},"content":"     * @return True if the input is a number, false otherwise.","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"bennyLCK"},"content":"    public static boolean isNumber(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"bennyLCK"},"content":"        char[] digits \u003d input.toCharArray();","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"bennyLCK"},"content":"        boolean isNumber \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"bennyLCK"},"content":"        for (char c : digits) {","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"bennyLCK"},"content":"            if (!Character.isDigit(c)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"bennyLCK"},"content":"                isNumber \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"bennyLCK"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"bennyLCK"},"content":"        return isNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"bennyLCK"},"content":"     * Checks if the String representation of time is in HHmm format.","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"bennyLCK"},"content":"     * @param time The timing to be checked.","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"bennyLCK"},"content":"     * @return True if the time is in HHmm format, false otherwise.","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"bennyLCK"},"content":"    private static boolean isInTwentyFourHourFormat(String time) {","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"bennyLCK"},"content":"        return Parser.isNumber(time) \u0026\u0026 time.length() \u003d\u003d 4;","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"bennyLCK"},"content":"     * Checks if a number is within a specified range.","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"bennyLCK"},"content":"     * @param number     The number to be checked.","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"bennyLCK"},"content":"     * @param lowerBound The lower bound of the range.","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"bennyLCK"},"content":"     * @param upperBound The upper bound of the range.","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"bennyLCK"},"content":"     * @return True if the number is within the range, false otherwise.","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"bennyLCK"},"content":"    private static boolean inBounds(int number, int lowerBound, int upperBound) {","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"bennyLCK"},"content":"        return number \u003e\u003d lowerBound \u0026\u0026 number \u003c\u003d upperBound;","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"bennyLCK"},"content":"     * Checks if the String representation of time is in Am/Pm format.","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"bennyLCK"},"content":"     * @param time The timing to be checked.","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"bennyLCK"},"content":"     * @return True if the time is in Am/Pm format, false otherwise.","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"bennyLCK"},"content":"    private static boolean isAmPmFormat(String time) {","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"bennyLCK"},"content":"        return time.toLowerCase().endsWith(\"am\") || time.toLowerCase().endsWith(\"pm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"bennyLCK"},"content":"     * Checks if the String representation of timing is in a valid format.","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"bennyLCK"},"content":"     * @param timing The timing to be checked.","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"bennyLCK"},"content":"     * @return True if the timing is in a valid format, false otherwise.","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"bennyLCK"},"content":"    public static boolean isValidTiming(String timing) {","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"bennyLCK"},"content":"        int minHourForTwentyFourHourFormat \u003d 0;","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"bennyLCK"},"content":"        int maxHourForTwentyFourHourFormat \u003d 23;","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"bennyLCK"},"content":"        int minHourForAmPmFormat \u003d 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"bennyLCK"},"content":"        int maxHourForAmPmFormat \u003d 12;","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"bennyLCK"},"content":"        int minMinute \u003d 0;","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"bennyLCK"},"content":"        int maxMinute \u003d 59;","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"bennyLCK"},"content":"        if (timing.length() \u003c 3) {","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"bennyLCK"},"content":"            return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"bennyLCK"},"content":"        if (Parser.isInTwentyFourHourFormat(timing)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"bennyLCK"},"content":"            int hours \u003d Integer.parseInt(timing.substring(0, 2));","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"bennyLCK"},"content":"            int minutes \u003d Integer.parseInt(timing.substring(2));","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"bennyLCK"},"content":"            boolean validHour \u003d Parser.inBounds(hours,","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"bennyLCK"},"content":"                    minHourForTwentyFourHourFormat, maxHourForTwentyFourHourFormat);","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"bennyLCK"},"content":"            boolean validMinute \u003d Parser.inBounds(minutes, minMinute, maxMinute);","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"bennyLCK"},"content":"            return validHour \u0026\u0026 validMinute;","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"bennyLCK"},"content":"        } else if (Parser.isAmPmFormat(timing)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"bennyLCK"},"content":"            String time \u003d timing.toLowerCase().replace(\"am\", \"\");","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"bennyLCK"},"content":"            time \u003d time.toLowerCase().replace(\"pm\", \"\");","lastModifiedDate":"2024-02-18"},{"lineNumber":179,"author":{"gitId":"bennyLCK"},"content":"            String[] hoursAndMinutes \u003d time.split(\"\\\\.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":180,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"bennyLCK"},"content":"            int hours \u003d -1;","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"bennyLCK"},"content":"            if (Parser.isNumber(hoursAndMinutes[0])) {","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"bennyLCK"},"content":"                hours \u003d Integer.parseInt(hoursAndMinutes[0]);","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"bennyLCK"},"content":"            if (hours !\u003d -1 \u0026\u0026 hoursAndMinutes.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"bennyLCK"},"content":"                return Parser.inBounds(hours, minHourForAmPmFormat, maxHourForAmPmFormat);","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"bennyLCK"},"content":"            boolean minutesIsInt \u003d hoursAndMinutes.length \u003d\u003d 2 \u0026\u0026 Parser.isNumber(hoursAndMinutes[1]);","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":193,"author":{"gitId":"bennyLCK"},"content":"            if (hours !\u003d -1 \u0026\u0026 minutesIsInt) {","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"bennyLCK"},"content":"                int minutes \u003d Integer.parseInt(hoursAndMinutes[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":195,"author":{"gitId":"bennyLCK"},"content":"                boolean validHour \u003d Parser.inBounds(hours, minHourForAmPmFormat, maxHourForAmPmFormat);","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"bennyLCK"},"content":"                boolean validMinute \u003d Parser.inBounds(minutes, minMinute, maxMinute);","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"bennyLCK"},"content":"                return validHour \u0026\u0026 validMinute;","lastModifiedDate":"2024-02-18"},{"lineNumber":198,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":199,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":200,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":201,"author":{"gitId":"bennyLCK"},"content":"        return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":202,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":203,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":204,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":206,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":207,"author":{"gitId":"bennyLCK"},"content":"     * Changes the timing format from \"HHmm\" to \"HH.mm(am/pm)\" if needed.","lastModifiedDate":"2024-02-18"},{"lineNumber":208,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":209,"author":{"gitId":"bennyLCK"},"content":"     * @param time The timing to be changed.","lastModifiedDate":"2024-02-18"},{"lineNumber":210,"author":{"gitId":"bennyLCK"},"content":"     * @return The timing in the format \"HH.mm(am/pm)\" if needed.","lastModifiedDate":"2024-02-18"},{"lineNumber":211,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":212,"author":{"gitId":"bennyLCK"},"content":"    public static String changeTimeFormat(String time) {","lastModifiedDate":"2024-02-18"},{"lineNumber":213,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":214,"author":{"gitId":"bennyLCK"},"content":"        String newTime;","lastModifiedDate":"2024-02-18"},{"lineNumber":215,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":216,"author":{"gitId":"bennyLCK"},"content":"        if (Parser.isNumber(time)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":217,"author":{"gitId":"bennyLCK"},"content":"            int hours \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2024-02-18"},{"lineNumber":218,"author":{"gitId":"bennyLCK"},"content":"            int minutes \u003d Integer.parseInt(time.substring(2));","lastModifiedDate":"2024-02-18"},{"lineNumber":219,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":220,"author":{"gitId":"bennyLCK"},"content":"            if (hours \u003d\u003d 0) {","lastModifiedDate":"2024-02-18"},{"lineNumber":221,"author":{"gitId":"bennyLCK"},"content":"                newTime \u003d \"12\" + (minutes \u003e 0 ? \".\" + minutes : \"\") + \"am\";","lastModifiedDate":"2024-02-18"},{"lineNumber":222,"author":{"gitId":"bennyLCK"},"content":"            } else if (hours \u003c 12) {","lastModifiedDate":"2024-02-18"},{"lineNumber":223,"author":{"gitId":"bennyLCK"},"content":"                newTime \u003d hours + (minutes \u003e 0 ? \".\" + minutes : \"\") + \"am\";","lastModifiedDate":"2024-02-18"},{"lineNumber":224,"author":{"gitId":"bennyLCK"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"bennyLCK"},"content":"                newTime \u003d (hours - 12) + (minutes \u003e 0 ? \".\" + minutes : \"\") + \"pm\";","lastModifiedDate":"2024-02-18"},{"lineNumber":226,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":227,"author":{"gitId":"bennyLCK"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":228,"author":{"gitId":"bennyLCK"},"content":"            newTime \u003d time;","lastModifiedDate":"2024-02-18"},{"lineNumber":229,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"bennyLCK"},"content":"        return newTime;","lastModifiedDate":"2024-02-18"},{"lineNumber":232,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":233,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":234,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":235,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":236,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":237,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input for a todo command and creates the appropriate","lastModifiedDate":"2024-02-19"},{"lineNumber":238,"author":{"gitId":"bennyLCK"},"content":"     * Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":239,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":240,"author":{"gitId":"bennyLCK"},"content":"     * @param components The components of the user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":241,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":242,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-04"},{"lineNumber":243,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-04"},{"lineNumber":244,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":245,"author":{"gitId":"bennyLCK"},"content":"    private static AddTodoCommand parseTodo(String[] components) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":246,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":247,"author":{"gitId":"bennyLCK"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":248,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":249,"author":{"gitId":"bennyLCK"},"content":"        // No valid task name specified for a todo task","lastModifiedDate":"2024-02-03"},{"lineNumber":250,"author":{"gitId":"bennyLCK"},"content":"        if (components.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":251,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"todo\", \"EMPTY_DESCRIPTION\");","lastModifiedDate":"2024-02-03"},{"lineNumber":252,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":253,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":254,"author":{"gitId":"bennyLCK"},"content":"        for (int i \u003d 1; i \u003c components.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":255,"author":{"gitId":"bennyLCK"},"content":"            taskName +\u003d components[i] + \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":256,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":257,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":258,"author":{"gitId":"bennyLCK"},"content":"        assert !taskName.isEmpty() : \"Task name should not be empty\";","lastModifiedDate":"2024-02-19"},{"lineNumber":259,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":260,"author":{"gitId":"bennyLCK"},"content":"        taskName \u003d taskName.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":261,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":262,"author":{"gitId":"bennyLCK"},"content":"        return new AddTodoCommand(taskName);","lastModifiedDate":"2024-02-19"},{"lineNumber":263,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":264,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":265,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":266,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":267,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":268,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input for a deadline command and creates the appropriate","lastModifiedDate":"2024-02-19"},{"lineNumber":269,"author":{"gitId":"bennyLCK"},"content":"     * Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":270,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":271,"author":{"gitId":"bennyLCK"},"content":"     * @param components The components of the user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":272,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":273,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-19"},{"lineNumber":274,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":275,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":276,"author":{"gitId":"bennyLCK"},"content":"    private static AddDeadlineCommand parseDeadline(String[] components) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":277,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":278,"author":{"gitId":"bennyLCK"},"content":"        if (components.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":279,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"deadline\", \"EMPTY_DESCRIPTION\");","lastModifiedDate":"2024-02-03"},{"lineNumber":280,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":281,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":282,"author":{"gitId":"bennyLCK"},"content":"        String taskName;","lastModifiedDate":"2024-02-19"},{"lineNumber":283,"author":{"gitId":"bennyLCK"},"content":"        String deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":284,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":285,"author":{"gitId":"bennyLCK"},"content":"        taskName \u003d Arrays.stream(components).skip(1).takeWhile(s -\u003e !s.equals(\"/by\"))","lastModifiedDate":"2024-02-19"},{"lineNumber":286,"author":{"gitId":"bennyLCK"},"content":"                .reduce((s1, s2) -\u003e s1 + \" \" + s2).get();","lastModifiedDate":"2024-02-19"},{"lineNumber":287,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":288,"author":{"gitId":"bennyLCK"},"content":"        deadline \u003d Arrays.stream(components).dropWhile(s -\u003e !s.equals(\"/by\"))","lastModifiedDate":"2024-02-19"},{"lineNumber":289,"author":{"gitId":"bennyLCK"},"content":"                .skip(1).reduce((s1, s2) -\u003e s1 + \" \" + s2).get();","lastModifiedDate":"2024-02-19"},{"lineNumber":290,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":291,"author":{"gitId":"bennyLCK"},"content":"        assert !taskName.isEmpty() : \"Task name should not be empty\";","lastModifiedDate":"2024-02-19"},{"lineNumber":292,"author":{"gitId":"bennyLCK"},"content":"        assert !deadline.isEmpty() : \"Deadline should not be empty\";","lastModifiedDate":"2024-02-19"},{"lineNumber":293,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":294,"author":{"gitId":"bennyLCK"},"content":"        return new AddDeadlineCommand(taskName, deadline);","lastModifiedDate":"2024-02-19"},{"lineNumber":295,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":296,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":297,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":298,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":299,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":300,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input for an event command and creates the appropriate","lastModifiedDate":"2024-02-19"},{"lineNumber":301,"author":{"gitId":"bennyLCK"},"content":"     * Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":302,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":303,"author":{"gitId":"bennyLCK"},"content":"     * @param components The components of the user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":304,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":305,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-19"},{"lineNumber":306,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":307,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":308,"author":{"gitId":"bennyLCK"},"content":"    private static AddEventCommand parseEvent(String[] components) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":309,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":310,"author":{"gitId":"bennyLCK"},"content":"        if (components.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":311,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"event\", \"EMPTY_DESCRIPTION\");","lastModifiedDate":"2024-02-03"},{"lineNumber":312,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":313,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":314,"author":{"gitId":"bennyLCK"},"content":"        String taskName;","lastModifiedDate":"2024-02-19"},{"lineNumber":315,"author":{"gitId":"bennyLCK"},"content":"        String start;","lastModifiedDate":"2024-02-19"},{"lineNumber":316,"author":{"gitId":"bennyLCK"},"content":"        String end;","lastModifiedDate":"2024-02-19"},{"lineNumber":317,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":318,"author":{"gitId":"bennyLCK"},"content":"        taskName \u003d Arrays.stream(components).skip(1).takeWhile(s -\u003e !s.equals(\"/from\"))","lastModifiedDate":"2024-02-19"},{"lineNumber":319,"author":{"gitId":"bennyLCK"},"content":"                .reduce((s1, s2) -\u003e s1 + \" \" + s2).get();","lastModifiedDate":"2024-02-19"},{"lineNumber":320,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":321,"author":{"gitId":"bennyLCK"},"content":"        start \u003d Arrays.stream(components).dropWhile(s -\u003e !s.equals(\"/from\")).skip(1)","lastModifiedDate":"2024-02-19"},{"lineNumber":322,"author":{"gitId":"bennyLCK"},"content":"                .takeWhile(s -\u003e !s.equals(\"/to\")).reduce((s1, s2) -\u003e s1 + \" \" + s2).get();","lastModifiedDate":"2024-02-19"},{"lineNumber":323,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":324,"author":{"gitId":"bennyLCK"},"content":"        end \u003d Arrays.stream(components).dropWhile(s -\u003e !s.equals(\"/to\"))","lastModifiedDate":"2024-02-19"},{"lineNumber":325,"author":{"gitId":"bennyLCK"},"content":"                .skip(1).reduce((s1, s2) -\u003e s1 + \" \" + s2).get();","lastModifiedDate":"2024-02-19"},{"lineNumber":326,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":327,"author":{"gitId":"bennyLCK"},"content":"        assert !taskName.isEmpty() : \"Task name should not be empty\";","lastModifiedDate":"2024-02-19"},{"lineNumber":328,"author":{"gitId":"bennyLCK"},"content":"        assert !start.isEmpty() : \"Start date should not be empty\";","lastModifiedDate":"2024-02-19"},{"lineNumber":329,"author":{"gitId":"bennyLCK"},"content":"        assert !end.isEmpty() : \"End date should not be empty\";","lastModifiedDate":"2024-02-19"},{"lineNumber":330,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":331,"author":{"gitId":"bennyLCK"},"content":"        return new AddEventCommand(taskName, start, end);","lastModifiedDate":"2024-02-19"},{"lineNumber":332,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":333,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":334,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":335,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":336,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":337,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input for a list command and creates the appropriate","lastModifiedDate":"2024-02-19"},{"lineNumber":338,"author":{"gitId":"bennyLCK"},"content":"     * Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":339,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":340,"author":{"gitId":"bennyLCK"},"content":"     * @param components The components of the user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":341,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":342,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-19"},{"lineNumber":343,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":344,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":345,"author":{"gitId":"bennyLCK"},"content":"    private static ListCommand parseList(String[] components) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":346,"author":{"gitId":"bennyLCK"},"content":"        if (components.length !\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":347,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"list\", \"EXTRA_DETAILS\");","lastModifiedDate":"2024-02-03"},{"lineNumber":348,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":349,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":350,"author":{"gitId":"bennyLCK"},"content":"        return new ListCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":351,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":352,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":353,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":354,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":355,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":356,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input for a mark command and creates the appropriate","lastModifiedDate":"2024-02-19"},{"lineNumber":357,"author":{"gitId":"bennyLCK"},"content":"     * Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":358,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":359,"author":{"gitId":"bennyLCK"},"content":"     * @param components The components of the user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":360,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":361,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-19"},{"lineNumber":362,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":363,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":364,"author":{"gitId":"bennyLCK"},"content":"    private static MarkCommand parseMark(String[] components) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":365,"author":{"gitId":"bennyLCK"},"content":"        if (components.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":366,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"mark\", \"MISSING_INDEX\");","lastModifiedDate":"2024-02-03"},{"lineNumber":367,"author":{"gitId":"bennyLCK"},"content":"        } else if (!Parser.isNumber(components[1])) {","lastModifiedDate":"2024-02-03"},{"lineNumber":368,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"mark\", \"INVALID_INDEX\");","lastModifiedDate":"2024-02-03"},{"lineNumber":369,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":370,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":371,"author":{"gitId":"bennyLCK"},"content":"        int index \u003d Integer.parseInt(components[1]) - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":372,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":373,"author":{"gitId":"bennyLCK"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":374,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":375,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":376,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":377,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":378,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":379,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input for an unmark command and creates the appropriate","lastModifiedDate":"2024-02-19"},{"lineNumber":380,"author":{"gitId":"bennyLCK"},"content":"     * Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":381,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":382,"author":{"gitId":"bennyLCK"},"content":"     * @param components The components of the user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":383,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":384,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-19"},{"lineNumber":385,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":386,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":387,"author":{"gitId":"bennyLCK"},"content":"    private static UnmarkCommand parseUnmark(String[] components) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":388,"author":{"gitId":"bennyLCK"},"content":"        if (components.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":389,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"unmark\", \"MISSING_INDEX\");","lastModifiedDate":"2024-02-03"},{"lineNumber":390,"author":{"gitId":"bennyLCK"},"content":"        } else if (!Parser.isNumber(components[1])) {","lastModifiedDate":"2024-02-03"},{"lineNumber":391,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"unmark\", \"INVALID_INDEX\");","lastModifiedDate":"2024-02-03"},{"lineNumber":392,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":393,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":394,"author":{"gitId":"bennyLCK"},"content":"        int index \u003d Integer.parseInt(components[1]) - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":395,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":396,"author":{"gitId":"bennyLCK"},"content":"        return new UnmarkCommand(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":397,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":398,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":399,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":400,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":401,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":402,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input for an exit command and creates the appropriate","lastModifiedDate":"2024-02-19"},{"lineNumber":403,"author":{"gitId":"bennyLCK"},"content":"     * Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":404,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":405,"author":{"gitId":"bennyLCK"},"content":"     * @param components The components of the user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":406,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":407,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-19"},{"lineNumber":408,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":409,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":410,"author":{"gitId":"bennyLCK"},"content":"    private static ExitCommand parseExit(String[] components) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":411,"author":{"gitId":"bennyLCK"},"content":"        if (components.length !\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":412,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"bye\", \"EXTRA_DETAILS\");","lastModifiedDate":"2024-02-03"},{"lineNumber":413,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":414,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":415,"author":{"gitId":"bennyLCK"},"content":"        return new ExitCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":416,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":417,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":418,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":419,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":420,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":421,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input for a delete command and creates the appropriate","lastModifiedDate":"2024-02-19"},{"lineNumber":422,"author":{"gitId":"bennyLCK"},"content":"     * Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":423,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":424,"author":{"gitId":"bennyLCK"},"content":"     * @param components The components of the user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":425,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":426,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-19"},{"lineNumber":427,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":428,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":429,"author":{"gitId":"bennyLCK"},"content":"    private static DeleteCommand parseDelete(String[] components) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":430,"author":{"gitId":"bennyLCK"},"content":"        if (components.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":431,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"delete\", \"MISSING_INDEX\");","lastModifiedDate":"2024-02-03"},{"lineNumber":432,"author":{"gitId":"bennyLCK"},"content":"        } else if (!Parser.isNumber(components[1])) {","lastModifiedDate":"2024-02-03"},{"lineNumber":433,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"delete\", \"INVALID_INDEX\");","lastModifiedDate":"2024-02-03"},{"lineNumber":434,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":435,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":436,"author":{"gitId":"bennyLCK"},"content":"        int index \u003d Integer.parseInt(components[1]) - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":437,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":438,"author":{"gitId":"bennyLCK"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":439,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":440,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":441,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":442,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":443,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":444,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input for a find command and creates the appropriate","lastModifiedDate":"2024-02-19"},{"lineNumber":445,"author":{"gitId":"bennyLCK"},"content":"     * Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":446,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":447,"author":{"gitId":"bennyLCK"},"content":"     * @param components The components of the user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":448,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":449,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-19"},{"lineNumber":450,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":451,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":452,"author":{"gitId":"bennyLCK"},"content":"    private static FindCommand parseFind(String[] components) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":453,"author":{"gitId":"bennyLCK"},"content":"        if (components.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":454,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"find\", \"EMPTY_DESCRIPTION\");","lastModifiedDate":"2024-02-04"},{"lineNumber":455,"author":{"gitId":"bennyLCK"},"content":"        } else if (components.length \u003e 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":456,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"find\", \"EXTRA_DETAILS\");","lastModifiedDate":"2024-02-04"},{"lineNumber":457,"author":{"gitId":"bennyLCK"},"content":"        } else if (Parser.isNumber(components[1])) {","lastModifiedDate":"2024-02-04"},{"lineNumber":458,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"find\", \"INVALID_KEYWORD\");","lastModifiedDate":"2024-02-04"},{"lineNumber":459,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":460,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":461,"author":{"gitId":"bennyLCK"},"content":"        String keyword \u003d components[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":462,"author":{"gitId":"bennyLCK"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2024-02-04"},{"lineNumber":463,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":464,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":465,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":466,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":467,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":468,"author":{"gitId":"bennyLCK"},"content":"     * Parses the user input and creates the appropriate Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":469,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":470,"author":{"gitId":"bennyLCK"},"content":"     * @param userCommand The user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":471,"author":{"gitId":"bennyLCK"},"content":"     * @return The Command object that is created based on the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":472,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException The exception that is raised if the user input is","lastModifiedDate":"2024-02-19"},{"lineNumber":473,"author":{"gitId":"bennyLCK"},"content":"     *                       invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":474,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":475,"author":{"gitId":"bennyLCK"},"content":"    public static Command parse(String userCommand) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":476,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":477,"author":{"gitId":"bennyLCK"},"content":"        String[] components \u003d userCommand.split(\" \");","lastModifiedDate":"2024-02-19"},{"lineNumber":478,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":479,"author":{"gitId":"bennyLCK"},"content":"        // Invalid Command syntax","lastModifiedDate":"2024-02-19"},{"lineNumber":480,"author":{"gitId":"bennyLCK"},"content":"        if (components.length \u003d\u003d 0 || !Parser.isValidCommand(components[0])) {","lastModifiedDate":"2024-02-19"},{"lineNumber":481,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"\", \"INVALID_COMMAND_TYPE\");","lastModifiedDate":"2024-02-19"},{"lineNumber":482,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":483,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":484,"author":{"gitId":"bennyLCK"},"content":"        assert components.length \u003e 0 : \"Command should not be empty\";","lastModifiedDate":"2024-02-19"},{"lineNumber":485,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":486,"author":{"gitId":"bennyLCK"},"content":"        String commandType \u003d components[0].toLowerCase();","lastModifiedDate":"2024-02-19"},{"lineNumber":487,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":488,"author":{"gitId":"bennyLCK"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-19"},{"lineNumber":489,"author":{"gitId":"bennyLCK"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-19"},{"lineNumber":490,"author":{"gitId":"bennyLCK"},"content":"            return parseTodo(components);","lastModifiedDate":"2024-02-19"},{"lineNumber":491,"author":{"gitId":"bennyLCK"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-19"},{"lineNumber":492,"author":{"gitId":"bennyLCK"},"content":"            return parseDeadline(components);","lastModifiedDate":"2024-02-19"},{"lineNumber":493,"author":{"gitId":"bennyLCK"},"content":"        case \"event\":","lastModifiedDate":"2024-02-19"},{"lineNumber":494,"author":{"gitId":"bennyLCK"},"content":"            return parseEvent(components);","lastModifiedDate":"2024-02-19"},{"lineNumber":495,"author":{"gitId":"bennyLCK"},"content":"        case \"list\":","lastModifiedDate":"2024-02-19"},{"lineNumber":496,"author":{"gitId":"bennyLCK"},"content":"            return parseList(components);","lastModifiedDate":"2024-02-19"},{"lineNumber":497,"author":{"gitId":"bennyLCK"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-19"},{"lineNumber":498,"author":{"gitId":"bennyLCK"},"content":"            return parseMark(components);","lastModifiedDate":"2024-02-19"},{"lineNumber":499,"author":{"gitId":"bennyLCK"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-19"},{"lineNumber":500,"author":{"gitId":"bennyLCK"},"content":"            return parseUnmark(components);","lastModifiedDate":"2024-02-19"},{"lineNumber":501,"author":{"gitId":"bennyLCK"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-19"},{"lineNumber":502,"author":{"gitId":"bennyLCK"},"content":"            return parseExit(components);","lastModifiedDate":"2024-02-19"},{"lineNumber":503,"author":{"gitId":"bennyLCK"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-19"},{"lineNumber":504,"author":{"gitId":"bennyLCK"},"content":"            return parseDelete(components);","lastModifiedDate":"2024-02-19"},{"lineNumber":505,"author":{"gitId":"bennyLCK"},"content":"        case \"find\":","lastModifiedDate":"2024-02-19"},{"lineNumber":506,"author":{"gitId":"bennyLCK"},"content":"            return parseFind(components);","lastModifiedDate":"2024-02-19"},{"lineNumber":507,"author":{"gitId":"bennyLCK"},"content":"        default:","lastModifiedDate":"2024-02-19"},{"lineNumber":508,"author":{"gitId":"bennyLCK"},"content":"            assert false : \"Program execution should not reach here.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":509,"author":{"gitId":"bennyLCK"},"content":"            return new InvalidCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":510,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":511,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":512,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"bennyLCK":512}},{"path":"src/main/java/bond/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import java.util.ListIterator;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"import bond.task.DeadlineTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"import bond.task.EventTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TodoTask;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":" * The Parser class is used to parse user input and create the appropriate","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":" * Command object.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    private final String pathToFile;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"     * @param filePath The file path to the file where the tasks are stored.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"        this.pathToFile \u003d filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"     * Parses the name of a TodoTask and creates it.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"     * @return The TodoTask created.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"    private TodoTask readTodo(String taskName) {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"        return new TodoTask(taskName);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"     * Parses the date and time of a DeadlineTask and creates it.","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"     * @param taskDeadline  The date and time for deadline of task.","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"     * @return The DeadlineTask created.","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"    private DeadlineTask readDeadline(String taskName, String taskDeadline) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"        int spaceIndex \u003d taskDeadline.indexOf(\" \");","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"        int closeIndex \u003d taskDeadline.indexOf(\")\");","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"        String deadline \u003d taskDeadline.substring(spaceIndex + 1, closeIndex);","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"        String[] components \u003d deadline.split(\" \");","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"        deadline \u003d Parser.changeDateFormat(components[0], components[1], components[2]) + \" \" + components[3];","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"        return new DeadlineTask(taskName, deadline);","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"bennyLCK"},"content":"     * Parses the date and time of an EventTask and creates it.","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"bennyLCK"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"bennyLCK"},"content":"     * @param period  The date and time of the start and end of task.","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"bennyLCK"},"content":"     * @return The EventTask created.","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"bennyLCK"},"content":"    private EventTask readEventPeriod(String taskName, String period) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"bennyLCK"},"content":"        String eventPeriod \u003d period;","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"bennyLCK"},"content":"        String start;","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"bennyLCK"},"content":"        String end;","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"bennyLCK"},"content":"        int closeIndex \u003d eventPeriod.indexOf(\")\");","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"bennyLCK"},"content":"        eventPeriod \u003d eventPeriod.substring(0, closeIndex);","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"bennyLCK"},"content":"        String[] components \u003d eventPeriod.split(\" to: \");","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"bennyLCK"},"content":"        start \u003d components[0].replace(\"from: \", \"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"bennyLCK"},"content":"        end \u003d components[1];","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"bennyLCK"},"content":"        String[] startComponents \u003d start.split(\" \");","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"bennyLCK"},"content":"        start \u003d Parser.changeDateFormat(startComponents[0], startComponents[1], startComponents[2])","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"bennyLCK"},"content":"                + \" \" + startComponents[3];","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"bennyLCK"},"content":"        String[] endComponents \u003d end.split(\" \");","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"bennyLCK"},"content":"        end \u003d Parser.changeDateFormat(endComponents[0], endComponents[1], endComponents[2])","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"bennyLCK"},"content":"                + \" \" + endComponents[3];","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"bennyLCK"},"content":"        return new EventTask(taskName, start, end);","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"bennyLCK"},"content":"     * Parses the task and adds it to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"bennyLCK"},"content":"     * We assume that the task is in the correct format.","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"bennyLCK"},"content":"     * @param task  The task to be parsed and added to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"bennyLCK"},"content":"     * @param tasks The task list to add the parsed task to.","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If the task cannot be parsed and added to the task","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"bennyLCK"},"content":"     *                       list.","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"bennyLCK"},"content":"    public void readAndAddTask(String task, ArrayList\u003cTask\u003e tasks) throws BondException {","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"bennyLCK"},"content":"        String remainder \u003d task.substring(4);","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"bennyLCK"},"content":"        String taskName;","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"bennyLCK"},"content":"        boolean isMarked \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"bennyLCK"},"content":"        Task newTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"bennyLCK"},"content":"        if (remainder.startsWith(\"[X]\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"bennyLCK"},"content":"            isMarked \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"bennyLCK"},"content":"        remainder \u003d remainder.substring(4);","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"bennyLCK"},"content":"        // Determine task name","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"bennyLCK"},"content":"        if (!remainder.contains(\"(\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"bennyLCK"},"content":"            taskName \u003d remainder;","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"bennyLCK"},"content":"            remainder \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"bennyLCK"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"bennyLCK"},"content":"            int openIndex \u003d remainder.indexOf(\"(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"bennyLCK"},"content":"            taskName \u003d remainder.substring(0, openIndex - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"bennyLCK"},"content":"            remainder \u003d remainder.substring(openIndex + 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"bennyLCK"},"content":"        // Add task to taskList","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"bennyLCK"},"content":"        if (task.startsWith(\"[T]\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"bennyLCK"},"content":"            newTask \u003d readTodo(taskName);","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"bennyLCK"},"content":"        } else if (task.startsWith(\"[D]\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"bennyLCK"},"content":"            newTask \u003d readDeadline(taskName, remainder);","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"bennyLCK"},"content":"        } else if (task.startsWith(\"[E]\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"bennyLCK"},"content":"            newTask \u003d readEventPeriod(taskName, remainder);","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"bennyLCK"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"bennyLCK"},"content":"            newTask \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"load\", \"LOAD_FAILURE\");","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"bennyLCK"},"content":"        if (isMarked \u0026\u0026 newTask !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"bennyLCK"},"content":"            newTask.markAsComplete();","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"bennyLCK"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"bennyLCK"},"content":"     * Loads the tasks from the file and returns the tasks as an ArrayList.","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"bennyLCK"},"content":"     * @return The tasks loaded from the file as an ArrayList.","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If the tasks cannot be loaded from the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"bennyLCK"},"content":"    protected ArrayList\u003cTask\u003e load() throws BondException {","lastModifiedDate":"2024-02-18"},{"lineNumber":157,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"bennyLCK"},"content":"        File f;","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"bennyLCK"},"content":"        Scanner sc;","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"bennyLCK"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"bennyLCK"},"content":"            // Check for directory / file existence","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"bennyLCK"},"content":"            String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"bennyLCK"},"content":"            java.nio.file.Path directoryPath \u003d java.nio.file.Paths.get(home, \"data\");","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"bennyLCK"},"content":"            boolean directoryExists \u003d java.nio.file.Files.exists(directoryPath);","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"bennyLCK"},"content":"            if (!directoryExists) {","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"bennyLCK"},"content":"                java.nio.file.Files.createDirectory(directoryPath);","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"bennyLCK"},"content":"            java.nio.file.Path filePath \u003d java.nio.file.Paths.get(home, \"data\", \"Bond.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"bennyLCK"},"content":"            boolean fileExists \u003d java.nio.file.Files.exists(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"bennyLCK"},"content":"            if (!fileExists) {","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"bennyLCK"},"content":"                java.nio.file.Files.createFile(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"bennyLCK"},"content":"            assert java.nio.file.Files.exists(directoryPath) : \"Directory should exist\";","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"bennyLCK"},"content":"            assert java.nio.file.Files.exists(filePath) : \"File should exist\";","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"bennyLCK"},"content":"            f \u003d new File(pathToFile); // create a File for the given file path","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"bennyLCK"},"content":"            sc \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"bennyLCK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"load\", \"LOAD_FAILURE\");","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"bennyLCK"},"content":"            return null;","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"bennyLCK"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"bennyLCK"},"content":"            String currTask \u003d sc.nextLine();","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"bennyLCK"},"content":"            readAndAddTask(currTask, loadedTasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"bennyLCK"},"content":"        sc.close();","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"bennyLCK"},"content":"        return loadedTasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"bennyLCK"},"content":"     * Stores the new task in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"bennyLCK"},"content":"     * @param newTask  The new task to be stored in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If the new task cannot be stored in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":206,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"bennyLCK"},"content":"    public void storeTask(Task newTask) throws BondException {","lastModifiedDate":"2024-02-07"},{"lineNumber":208,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"bennyLCK"},"content":"            FileWriter fw \u003d new FileWriter(this.pathToFile, true); // create a FileWriter in append mode","lastModifiedDate":"2024-02-03"},{"lineNumber":210,"author":{"gitId":"bennyLCK"},"content":"            fw.write(newTask.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"bennyLCK"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":212,"author":{"gitId":"bennyLCK"},"content":"            fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":213,"author":{"gitId":"bennyLCK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":214,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"store\", \"STORE_FAILURE\");","lastModifiedDate":"2024-02-03"},{"lineNumber":215,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":216,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":218,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":219,"author":{"gitId":"bennyLCK"},"content":"     * Overwrites the previous save in the file with the new task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":220,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":221,"author":{"gitId":"bennyLCK"},"content":"     * @param taskList The new task list to overwrite the previous save in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":222,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If the new task list cannot overwrite the previous save","lastModifiedDate":"2024-02-04"},{"lineNumber":223,"author":{"gitId":"bennyLCK"},"content":"     *                       in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":224,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":225,"author":{"gitId":"bennyLCK"},"content":"    public void overwritePreviousSave(TaskList taskList) throws BondException {","lastModifiedDate":"2024-02-03"},{"lineNumber":226,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":227,"author":{"gitId":"bennyLCK"},"content":"            FileWriter fw \u003d new FileWriter(pathToFile, false); // create a FileWriter in overwrite mode","lastModifiedDate":"2024-02-03"},{"lineNumber":228,"author":{"gitId":"bennyLCK"},"content":"            ListIterator\u003cTask\u003e toWrite \u003d taskList.getTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":229,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"bennyLCK"},"content":"            while (toWrite.hasNext()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"bennyLCK"},"content":"                fw.write(toWrite.next().toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":232,"author":{"gitId":"bennyLCK"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":233,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":234,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"bennyLCK"},"content":"            fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":236,"author":{"gitId":"bennyLCK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":237,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"store\", \"STORE_FAILURE\");","lastModifiedDate":"2024-02-03"},{"lineNumber":238,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":239,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":240,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"bennyLCK":240}},{"path":"src/main/java/bond/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import java.util.ListIterator;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":" * The Ui class is used to handle the user response message of the Bond task management program.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    public Ui() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    public String newLine() {","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"        return System.lineSeparator();","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"     * Shows the welcome message when the program starts.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"        return \"Hello! I\u0027m Bond.\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"     * Shows the taskList is empty message.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"    public String showTaskListEmpty() {","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"        return \"There are no tasks in the list.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"     * Shows the message when a task is added.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"     * @param newTask  The task that is added.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"     * @param taskList The task list that the task is added to.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"    public String taskAdded(Task newTask, TaskList taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"        return String.format(","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"                \"Got it. I\u0027ve added this task:\\n      %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"                newTask.toString(), taskList.numberOfTasks());","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"     * Shows the message when a task is deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"     * @param deletedTask The task that is deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"     * @param taskList    The task list that the task is deleted from.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"    public String taskDeleted(Task deletedTask, TaskList taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"        return String.format(","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"                \"Got it. I\u0027ve removed this task:\\n      %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"                deletedTask.toString(), taskList.numberOfTasks());","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"bennyLCK"},"content":"     * Shows the message when a task is marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"bennyLCK"},"content":"     * @param markedTask The task that is marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"bennyLCK"},"content":"    public String taskMarked(Task markedTask) {","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"bennyLCK"},"content":"        return String.format(","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"bennyLCK"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n      %s\",","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"bennyLCK"},"content":"                markedTask.toString());","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"bennyLCK"},"content":"     * Shows the message when a task is marked as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"bennyLCK"},"content":"     * @param unmarkedTask The task that is marked as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"bennyLCK"},"content":"    public String taskUnmarked(Task unmarkedTask) {","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"bennyLCK"},"content":"        return String.format(","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"bennyLCK"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\\n      %s\",","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"bennyLCK"},"content":"                unmarkedTask.toString());","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"bennyLCK"},"content":"    private String appendTasks(TaskList taskList, String headerMsg) {","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"bennyLCK"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"bennyLCK"},"content":"        builder.append(headerMsg);","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"bennyLCK"},"content":"        ListIterator\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"bennyLCK"},"content":"        while (tasks.hasNext()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"bennyLCK"},"content":"            String foundTask \u003d String.format(\"    %d. %s\",","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"bennyLCK"},"content":"                    tasks.nextIndex() + 1, tasks.next().toString());","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"bennyLCK"},"content":"            if (tasks.hasNext()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"bennyLCK"},"content":"                foundTask +\u003d this.newLine();","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"bennyLCK"},"content":"            builder.append(foundTask);","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"bennyLCK"},"content":"        return builder.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"bennyLCK"},"content":"     * Shows all tasks found.","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"bennyLCK"},"content":"     * @param taskList The task list containing all tasks found.","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"bennyLCK"},"content":"    public String showFoundTasks(TaskList taskList) {","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"bennyLCK"},"content":"        String header \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"bennyLCK"},"content":"        return appendTasks(taskList, header);","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"bennyLCK"},"content":"     * Shows all tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"bennyLCK"},"content":"     * @param taskList The task list to read from.","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"bennyLCK"},"content":"    public String showList(TaskList taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"bennyLCK"},"content":"        String header \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"bennyLCK"},"content":"        return appendTasks(taskList, header);","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"bennyLCK"},"content":"     * Shows the goodbye message when the user exits the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"bennyLCK"},"content":"    public String showGoodbye() {","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"bennyLCK"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"bennyLCK":133}},{"path":"src/main/java/bond/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * Represents a deadline task in the Bond task management program.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    private String timing;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the DeadlineTask class.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"     * Throws a BondException if the deadline is in an incorrect format.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"     * @param name     The name of the deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If the deadline task cannot be created.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    public DeadlineTask(String name, String deadline) throws BondException {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"        String[] dateTime \u003d deadline.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"        // A timing is also required for the deadline task.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"        if (dateTime.length !\u003d 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"deadline\", \"INVALID_DATETIME_FORMAT\");","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"            this.dueDate \u003d LocalDate.parse(dateTime[0]);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"deadline\", \"INVALID_DATE_FORMAT\");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"        if (!Parser.isValidTiming(dateTime[1])) {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"deadline\", \"INVALID_TIME_FORMAT\");","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"        this.timing \u003d Parser.changeTimeFormat(dateTime[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"        return String.format(\"[D]%s (by: %s %s)\", super.toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"                this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")), this.timing);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bennyLCK":58}},{"path":"src/main/java/bond/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"import bond.main.BondException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.main.Parser;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * Represents an event task in the Bond task management program.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    private String startTiming;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    private String endTiming;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the EventTask class.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"     * Throws a BondException if the start and/or end datetime is in an incorrect","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"     * format.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"     * @param name  The name of the event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"     * @param start The start date and time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"     * @param end   The end date and time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"     * @throws BondException If the event task cannot be created.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    public EventTask(String name, String start, String end) throws BondException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"        String[] startDateTime \u003d start.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"        String[] endDateTime \u003d end.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"        if (startDateTime.length !\u003d 2 || endDateTime.length !\u003d 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"event\", \"INVALID_DATETIME_FORMAT\");","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"            this.startDate \u003d LocalDate.parse(startDateTime[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"            this.endDate \u003d LocalDate.parse(endDateTime[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"deadline\", \"INVALID_DATE_FORMAT\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"        if (!Parser.isValidTiming(startDateTime[1]) || !Parser.isValidTiming(endDateTime[1])) {","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"            BondException.raiseException(\"event\", \"INVALID_TIME_FORMAT\");","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"        this.startTiming \u003d Parser.changeTimeFormat(startDateTime[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"        this.endTiming \u003d Parser.changeTimeFormat(endDateTime[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"        return String.format(\"[E]%s (from: %s %s to: %s %s)\", super.toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"                this.startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")), this.startTiming,","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")), this.endTiming);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bennyLCK":63}},{"path":"src/main/java/bond/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":" * Represents a task in the Bond task management program.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"    protected String name;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"    private Boolean isCompleted;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"     * @param name The name of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    public void markAsComplete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"        return String.format(\" [%s] %s\", this.isCompleted ? \"X\" : \" \", this.name.trim());","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"bennyLCK":36}},{"path":"src/main/java/bond/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"import java.util.ListIterator;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":" * Stores and provides operations for the list of tasks in the Bond task","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":" * management program.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"     * @param taskList The list of tasks to be stored in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"        this.tasks \u003d taskList \u003d\u003d null ? new ArrayList\u003c\u003e() : taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"    public int numberOfTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"    public boolean noTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"     * Returns a list iterator for the tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"    public ListIterator\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"        return this.tasks.listIterator();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"     * Finds tasks in the task list that contain the keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"     * Returns a new TaskList containing the found tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"     * @param keyword The keyword to search for in the task names.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"            if (task.name.contains(keyword)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"bennyLCK"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"bennyLCK"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"bennyLCK"},"content":"        return new TaskList(foundTasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"bennyLCK":70}},{"path":"src/main/java/bond/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":" * Represents a to-do task in the Bond task management program.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":" * @version 0.2","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"     * Constructor for the TodoTask class.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"     * @param name The name of the to-do task.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bennyLCK":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"129.6\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"20.0\" lineSpacing\u003d\"10.0\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: dodgerblue; -fx-background-radius: 10;\" text\u003d\"Label\" translateY\u003d\"0\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" blendMode\u003d\"SRC_ATOP\" fitHeight\u003d\"120.0\" fitWidth\u003d\"120.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"            \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"         \u003cimage\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"            \u003cImage url\u003d\"@../../../../../../Pictures/Saved%20Pictures/Anya.jpg\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"         \u003c/image\u003e\u003c/ImageView\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"bennyLCK":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bond.main.MainWindow\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: mediumblue;\" text\u003d\"Send\" textFill\u003d\"#f7f7f7\" AnchorPane.bottomAnchor\u003d\"-0.20000000000000284\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"            \u003cFont name\u003d\"Comic Sans MS Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefWidth\u003d\"600.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"554.0\" prefWidth\u003d\"588.0\" style\u003d\"-fx-background-color: lightcyan;\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"bennyLCK":26}},{"path":"src/test/java/bond/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import bond.command.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":" * Tests for the Parser class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":" * @version 0.1","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":"    public void parse_invalidCommandType_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"todos brush teeth, wash face, take a shower\";","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"WHAT do you MEAN???????????\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"    public void parse_emptyDescriptionTodo_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"todo\";","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"Are you for REAL??? No info for a todo\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"    public void parse_emptyDescriptionDeadline_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"deadline\";","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"Are you for REAL??? No info for a deadline\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"    public void parse_emptyDescriptionEvent_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"event\";","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"Are you for REAL??? No info for a event\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"bennyLCK"},"content":"    public void parse_extraDetailsList_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"list abc\";","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"I see, you are SO EXTRA and saying list needs MORE!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"bennyLCK"},"content":"    public void parse_missingIndexMark_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"mark\";","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"WHY did you not give me an INDEX to mark a task!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"bennyLCK"},"content":"    public void parse_invalidIndexMark_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"mark abc\";","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"WHY did you not give me a PROPER INDEX to mark a task!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"bennyLCK"},"content":"    public void parse_missingIndexUnmark_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"unmark\";","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"WHY did you not give me an INDEX to unmark a task!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"bennyLCK"},"content":"    public void parse_invalidIndexUnmark_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"unmark abc\";","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"WHY did you not give me a PROPER INDEX to unmark a task!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"bennyLCK"},"content":"    public void parse_extraDetailsBye_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"bye abc\";","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"I see, you are SO EXTRA and saying bye needs MORE!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"bennyLCK"},"content":"    public void parse_missingIndexDelete_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"delete\";","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":172,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"WHY did you not give me an INDEX to delete a task!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":180,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"bennyLCK"},"content":"    public void parse_invalidIndexDelete_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"delete abc\";","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":187,"author":{"gitId":"bennyLCK"},"content":"            Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":188,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":189,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":190,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"WHY did you not give me a PROPER INDEX to delete a task!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":191,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":195,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":196,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":197,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":198,"author":{"gitId":"bennyLCK"},"content":"    public void parse_todo_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"todo sleep\";","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"bennyLCK"},"content":"            Command c \u003d Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(c.getCommandType(), \"todo\");","lastModifiedDate":"2024-02-07"},{"lineNumber":204,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":206,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":208,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":209,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"bennyLCK"},"content":"    public void parse_deadline_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":212,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"deadline sleep /by 2024-02-29 12am\";","lastModifiedDate":"2024-02-04"},{"lineNumber":213,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":214,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":215,"author":{"gitId":"bennyLCK"},"content":"            Command c \u003d Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":216,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(c.getCommandType(), \"deadline\");","lastModifiedDate":"2024-02-07"},{"lineNumber":217,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":218,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":219,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":220,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":221,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":222,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":223,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":224,"author":{"gitId":"bennyLCK"},"content":"    public void parse_event_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":225,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"event sleep /from 2024-02-29 12am /to 2024-03-01 10am\";","lastModifiedDate":"2024-02-04"},{"lineNumber":226,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":227,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":228,"author":{"gitId":"bennyLCK"},"content":"            Command c \u003d Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":229,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(c.getCommandType(), \"event\");","lastModifiedDate":"2024-02-07"},{"lineNumber":230,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":231,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":232,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":233,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":234,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":235,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":236,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":237,"author":{"gitId":"bennyLCK"},"content":"    public void parse_list_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":238,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"list\";","lastModifiedDate":"2024-02-04"},{"lineNumber":239,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":240,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":241,"author":{"gitId":"bennyLCK"},"content":"            Command c \u003d Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":242,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(c.getCommandType(), \"list\");","lastModifiedDate":"2024-02-07"},{"lineNumber":243,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":244,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":245,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":246,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":247,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":248,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":249,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":250,"author":{"gitId":"bennyLCK"},"content":"    public void parse_mark_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":251,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"mark 1\";","lastModifiedDate":"2024-02-04"},{"lineNumber":252,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":253,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":254,"author":{"gitId":"bennyLCK"},"content":"            Command c \u003d Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":255,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(c.getCommandType(), \"mark\");","lastModifiedDate":"2024-02-07"},{"lineNumber":256,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":257,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":258,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":259,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":260,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":261,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":262,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":263,"author":{"gitId":"bennyLCK"},"content":"    public void parse_unmark_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":264,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"unmark 1\";","lastModifiedDate":"2024-02-04"},{"lineNumber":265,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":266,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":267,"author":{"gitId":"bennyLCK"},"content":"            Command c \u003d Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":268,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(c.getCommandType(), \"unmark\");","lastModifiedDate":"2024-02-07"},{"lineNumber":269,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":270,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":271,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":272,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":273,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":274,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":275,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":276,"author":{"gitId":"bennyLCK"},"content":"    public void parse_bye_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":277,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"bye\";","lastModifiedDate":"2024-02-04"},{"lineNumber":278,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":279,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":280,"author":{"gitId":"bennyLCK"},"content":"            Command c \u003d Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":281,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(c.getCommandType(), \"bye\");","lastModifiedDate":"2024-02-07"},{"lineNumber":282,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":283,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":284,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":285,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":286,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":287,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":288,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":289,"author":{"gitId":"bennyLCK"},"content":"    public void parse_delete_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":290,"author":{"gitId":"bennyLCK"},"content":"        String testUserCommand \u003d \"delete 1\";","lastModifiedDate":"2024-02-04"},{"lineNumber":291,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":292,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":293,"author":{"gitId":"bennyLCK"},"content":"            Command c \u003d Parser.parse(testUserCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":294,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(c.getCommandType(), \"delete\");","lastModifiedDate":"2024-02-07"},{"lineNumber":295,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":296,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":297,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":298,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":299,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":300,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"bennyLCK":300}},{"path":"src/test/java/bond/main/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bennyLCK"},"content":"package bond.main;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"bennyLCK"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bennyLCK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"bennyLCK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bennyLCK"},"content":"import bond.task.DeadlineTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"bennyLCK"},"content":"import bond.task.EventTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"bennyLCK"},"content":"import bond.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"bennyLCK"},"content":"import bond.task.TodoTask;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"bennyLCK"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bennyLCK"},"content":" * Tests for the Parser class.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bennyLCK"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bennyLCK"},"content":" * @author Benny Loh","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bennyLCK"},"content":" * @version 0.1","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bennyLCK"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"bennyLCK"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"bennyLCK"},"content":"    public void parseAndAddTask_invalidDateFormatDeadline_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"bennyLCK"},"content":"        String taskFromFile \u003d \"[D] [ ] sleep (by: 29 Feb 2024 10pm)\";","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"bennyLCK"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"bennyLCK"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.home\") + \"/data/Bond.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"bennyLCK"},"content":"            storage.readAndAddTask(taskFromFile, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"Give the DATE(s) in the CORRECT FORMAT!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"bennyLCK"},"content":"    public void parseAndAddTask_invalidDateFormatEvent_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"bennyLCK"},"content":"        String taskFromFile \u003d \"[E] [ ] sleep (from: 29 Feb 2024 10pm to: Mar 01 2024 10am)\";","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"bennyLCK"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"bennyLCK"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.home\") + \"/data/Bond.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"bennyLCK"},"content":"            storage.readAndAddTask(taskFromFile, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"Give the DATE(s) in the CORRECT FORMAT!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"bennyLCK"},"content":"    public void parseAndAddTask_invalidTask_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"bennyLCK"},"content":"        String taskFromFile \u003d \"[A] [ ] sleep (from: 29 Feb 2024 10pm to: Mar 01 2024 10am)\";","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"bennyLCK"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"bennyLCK"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.home\") + \"/data/Bond.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"bennyLCK"},"content":"            storage.readAndAddTask(taskFromFile, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"bennyLCK"},"content":"        } catch (BondException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(\"I COULD NOT LOAD your tasks!!!\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"bennyLCK"},"content":"    public void parseAndAddTask_todo_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"bennyLCK"},"content":"        String taskFromFile \u003d \"[T] [ ] task 1\";","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"bennyLCK"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"bennyLCK"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.home\") + \"/data/Bond.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"bennyLCK"},"content":"            storage.readAndAddTask(taskFromFile, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"bennyLCK"},"content":"            TodoTask task \u003d (TodoTask) tasks.get(0);","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(task.toString(), taskFromFile);","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"bennyLCK"},"content":"    public void parseAndAddTask_deadline_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"bennyLCK"},"content":"        String taskFromFile \u003d \"[D] [ ] sleep (by: Feb 29 2024 10pm)\";","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"bennyLCK"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"bennyLCK"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.home\") + \"/data/Bond.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"bennyLCK"},"content":"            storage.readAndAddTask(taskFromFile, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"bennyLCK"},"content":"            DeadlineTask task \u003d (DeadlineTask) tasks.get(0);","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(task.toString(), taskFromFile);","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"bennyLCK"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"bennyLCK"},"content":"    public void parseAndAddTask_event_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"bennyLCK"},"content":"        String taskFromFile \u003d \"[E] [ ] sleep (from: Feb 29 2024 10pm to: Mar 01 2024 10am)\";","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"bennyLCK"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"bennyLCK"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.home\") + \"/data/Bond.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"bennyLCK"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"bennyLCK"},"content":"            storage.readAndAddTask(taskFromFile, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"bennyLCK"},"content":"            EventTask task \u003d (EventTask) tasks.get(0);","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"bennyLCK"},"content":"            assertEquals(task.toString(), taskFromFile);","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"bennyLCK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"bennyLCK"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"bennyLCK"},"content":"            assert false;","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"bennyLCK"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"bennyLCK"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"bennyLCK"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"bennyLCK":120}}]
