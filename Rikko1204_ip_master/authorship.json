[{"path":"src/main/java/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public enum CommandEnum {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    BYE,","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    LIST,","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    MARK,","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    UNMARK","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    protected String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    private String name;","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public Duke(String name) {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    public void greetings() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"        String logo \u003d\"    _____ \\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"/* */                \"   /  _  \\\\_______   ____   _____ _____ \\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"/*   */              \"  /  /_\\\\  \\\\_  __  \\\\/  _ \\\\ /     \\\\___  \\\\ \\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"        /*   */      \" /    |    \\\\  | \\\\_ ( \u003c_\u003e )   |   \\\\/ __ \\\\_ \\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"/* */                \" \\\\____|__  /__|    \\\\____/|___|_  (____  / \\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"/* */                \"         \\\\/                    \\\\/     \\\\/ \\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Hello from \\n\" + logo);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"        String reply \u003d \"Hi! I\u0027m \" + this.name + \". What can I do for you?\";","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"//        String reply \u003d \"こんにちは先生、私は\" + this.name + \"アロナです. \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"//                + \"どういうご用件ですか?　\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"//                + \"ここで先生のスケジュールが決まります！\";","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(reply);","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    public void quitApplication() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        String reply \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(reply);","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"    public void addTask(String input) throws TaskException {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        String type \u003d splitInput[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"        if (splitInput.length \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"            throw new TaskException(\"OOPS!!! Please enter some tasks!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        } else if (!containsEnumValue(TaskEnum.class, type)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"            throw new TaskException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"        } else if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"            throw new TaskException(\"OOPS!!! Please provide some task description\");","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        String[] info \u003d splitInput[1].split(\"/\");","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"        String description \u003d info[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"        switch(type) {","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"                tasks.add(new Todo(description));","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"                if (info.length \u003c 2) throw new TaskException(\"OOPS!!! Please provide a deadline.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"                String by \u003d info[1].replaceAll(\"by\", \"\").trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"                tasks.add(new Deadline(description, by));","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"            case \"event\":","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"                if (info.length \u003c 3) throw new TaskException(\"OOPS!!! Please provide an event begin and deadline.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"                String from \u003d info[1].replaceAll(\"from\", \"\").trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"                by \u003d info[2].replaceAll(\"to\", \"\").trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"                tasks.add(new Event(description, from, by));","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"    public void DeleteTask(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"        if (taskNum \u003e tasks.size()) throw new IndexOutOfBoundsException(\"OOPS!!! The task doesn\u0027t exist!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"        int index \u003d taskNum - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Noted. I have removed this task: \");","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"    public void printTasks() {","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"            if (tasks.get(i) \u003d\u003d null) break;","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"            System.out.println(i + 1 + \".\" + task.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"    public void changeTaskStatus(int taskNum, boolean status) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"        if (taskNum \u003e tasks.size()) throw new IndexOutOfBoundsException(\"OOPS!!! The task doesn\u0027t exist!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"        int index \u003d taskNum - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"        if (task.getStatus() \u003d\u003d status) {","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"            System.out.println(\"The task has already been marked as \" + (status ? \"done.\" : \"not done.\"));","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"Rikko1204"},"content":"        task.setStatusIcon(status);","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"Rikko1204"},"content":"        if (status) {","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"Rikko1204"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"Rikko1204"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"Rikko1204"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-21"},{"lineNumber":111,"author":{"gitId":"Rikko1204"},"content":"        Duke duke \u003d new Duke(\"Arona\");","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"Rikko1204"},"content":"        duke.greetings();","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":114,"author":{"gitId":"Rikko1204"},"content":"        while (true) {","lastModifiedDate":"2024-01-21"},{"lineNumber":115,"author":{"gitId":"Rikko1204"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"Rikko1204"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":117,"author":{"gitId":"Rikko1204"},"content":"                String command \u003d input.split(\" \", 0)[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"Rikko1204"},"content":"                switch(command) {","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"Rikko1204"},"content":"                    case \"bye\":","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"Rikko1204"},"content":"                        duke.quitApplication();","lastModifiedDate":"2024-01-22"},{"lineNumber":121,"author":{"gitId":"Rikko1204"},"content":"                        return;","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"Rikko1204"},"content":"                    case \"list\":","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"Rikko1204"},"content":"                        duke.printTasks();","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"Rikko1204"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"Rikko1204"},"content":"                    case \"mark\":","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"Rikko1204"},"content":"                        if (input.split(\" \", 0).length \u003d\u003d 1) throw new DukeException(\"OOPS!!! Please provide task number.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"Rikko1204"},"content":"                        int taskNum \u003d Integer.parseInt(input.split(\" \", 0)[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"Rikko1204"},"content":"                        duke.changeTaskStatus(taskNum, true);","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"Rikko1204"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"Rikko1204"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"Rikko1204"},"content":"                        if (input.split(\" \", 0).length \u003d\u003d 1) throw new DukeException(\"OOPS!!! Please provide task number.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"Rikko1204"},"content":"                        taskNum \u003d Integer.parseInt(input.split(\" \", 0)[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"Rikko1204"},"content":"                        duke.changeTaskStatus(taskNum, false);","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"Rikko1204"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"Rikko1204"},"content":"                    case \"delete\":","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"Rikko1204"},"content":"                        if (input.split(\" \", 0).length \u003d\u003d 1) throw new DukeException(\"OOPS!!! Please provide task number.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"Rikko1204"},"content":"                        taskNum \u003d Integer.parseInt(input.split(\" \", 0)[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"Rikko1204"},"content":"                        duke.DeleteTask(taskNum);","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"Rikko1204"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"Rikko1204"},"content":"                    default:","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"Rikko1204"},"content":"                        duke.addTask(input);","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"Rikko1204"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"Rikko1204"},"content":"                }","lastModifiedDate":"2024-01-21"},{"lineNumber":144,"author":{"gitId":"Rikko1204"},"content":"            } catch (TaskException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"Rikko1204"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"Rikko1204"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"Rikko1204"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"Rikko1204"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"Rikko1204"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"Rikko1204"},"content":"    private static \u003cE extends Enum\u003cE\u003e\u003e boolean containsEnumValue(Class\u003cE\u003e enumClass, String value) {","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"Rikko1204"},"content":"        for (Enum\u003cE\u003e enumConstant : enumClass.getEnumConstants()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"Rikko1204"},"content":"            if (enumConstant.name().equalsIgnoreCase(value)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"Rikko1204"},"content":"                return true;","lastModifiedDate":"2024-01-23"},{"lineNumber":157,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":158,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":159,"author":{"gitId":"Rikko1204"},"content":"        return false;","lastModifiedDate":"2024-01-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Rikko1204":158,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public DukeException(String string) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(string);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    protected String from;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    protected String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    public Event(String description, String from, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from + \" to: \" + this.by + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"        return description;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        return isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    public void setStatusIcon(boolean status) {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":30}},{"path":"src/main/java/TaskEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public enum TaskEnum {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    TODO,","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    EVENT","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":5}},{"path":"src/main/java/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public TaskException(String string) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(string);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"todo food","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Rikko1204":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"@REM REM compile the code into the bin folder","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"@REM javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"@REM IF ERRORLEVEL 1 (","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"@REM     echo ********** BUILD FAILURE **********","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"@REM     exit /b 1","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"@REM )","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"@REM REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"java -classpath \"..\\out\\production\\Personal Project\" Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Rikko1204":8,"-":13}}]
