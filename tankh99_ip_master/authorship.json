[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"# Test generation setup help","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"Only run this if you\u0027re sure your program works as intended `./text-ui-test/runtest.sh \u003e ./text-ui-test/EXPECTED.txt`","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tankh99":5,"-":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-19"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import Managers.TaskManager;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"Hello, I\u0027m Baron. What can I do for you?\");","lastModifiedDate":"2024-01-19"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-19"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"        String input;","lastModifiedDate":"2024-01-19"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2024-01-19"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"        do {","lastModifiedDate":"2024-01-19"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-19"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"            taskManager.handleInput(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2024-01-19"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"        ","lastModifiedDate":"2024-01-19"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"        scanner.close();","lastModifiedDate":"2024-01-19"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"Bye, good riddance\");","lastModifiedDate":"2024-01-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tankh99":18,"-":10}},{"path":"src/main/java/Managers/DeadlineDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Managers;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Models.Deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":" import Utils.StringUtils;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"public class DeadlineDao {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"  public static final String name \u003d \"deadline\";","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"  private static final String byString \u003d \"/by\";","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"  public static Deadline getFrom(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"    String name \u003d getName(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    String deadline \u003d getDeadline(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"    Deadline deadlineTask \u003d new Deadline(name, deadline);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"    return deadlineTask;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"  private static String getName(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"    String name \u003d StringUtils.getValueOfCommand(input, DeadlineDao.name, byString);","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"    return name;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"  private static String getDeadline(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"    String deadline \u003d StringUtils.getValueOfCommand(input, byString, null);","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    return deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":26}},{"path":"src/main/java/Managers/EventDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Managers;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Models.Event;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import Utils.StringUtils;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"public class EventDao {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"  public static final String name \u003d \"event\";","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"  private static final String fromString \u003d \"/from\";","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"  private static final String toString \u003d \"/to\";","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"  public static Event getFrom(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"    String name \u003d getEventName(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    String startDate \u003d getEventFrom(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"    String endDate \u003d getEventTo(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"    Event event \u003d new Event(name, startDate, endDate);","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"    return event;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"  } ","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"  private static String getEventName(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"    return StringUtils.getValueOfCommand(input, EventDao.name, EventDao.fromString);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"  private static String getEventTo(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"    return StringUtils.getValueOfCommand(input, EventDao.toString, null);","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"  private static String getEventFrom(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"    return StringUtils.getValueOfCommand(input, EventDao.fromString, EventDao.toString);","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":29}},{"path":"src/main/java/Managers/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Managers;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import java.util.List;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import Models.Deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"import Models.Event;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"import Models.Task;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"import Models.Todo;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"import Utils.StringUtils;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"// TODO: Stretch goal: add exceptions for marking and listing non-existent indexes","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"public class TaskManager {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"  public static final String mark \u003d \"mark\";","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"  public static final String unmark \u003d \"unmark\";","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"  public static final String list \u003d \"list\";","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"  public static final String delete \u003d \"delete\";","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"  public static final String bye \u003d \"bye\";","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"  private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"  ","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"  private Task get(int i) {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"    return this.tasks.get(i);","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"  private void printSeparator() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"    System.out.println(\"--------------------\");","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"  protected void add(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"    System.out.println(\"Got it, I\u0027ve added this task: \\n  \" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"    tasks.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"  protected void delete(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"    int i \u003d Integer.parseInt(StringUtils.getValueOfCommand(input, delete, null)) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"tankh99"},"content":"    Task task \u003d this.tasks.remove(i);","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"tankh99"},"content":"    System.out.println(\"Noted, I\u0027ve removed this task: \\n  \" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"tankh99"},"content":"    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"tankh99"},"content":"  private void print() {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"tankh99"},"content":"    for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"tankh99"},"content":"        System.out.println((i + 1) + \". \" + this.get(i));","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"tankh99"},"content":"  protected static String getCommand(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"tankh99"},"content":"    return input.split(\" \")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"tankh99"},"content":"  protected static String getValue(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"tankh99"},"content":"    if (input.split(\" \").length \u003c\u003d 1) throw new IllegalArgumentException(\"Value expected but not found\");","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"tankh99"},"content":"    return input.split(\" \")[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"tankh99"},"content":"  public void handleInput(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"tankh99"},"content":"    try {","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"tankh99"},"content":"      input \u003d input.trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"tankh99"},"content":"      String command \u003d getCommand(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"tankh99"},"content":"      // Decided to pass the entire input instead because otherwise we would have to parse the input into command and value","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"tankh99"},"content":"      // which would not be appropriate here since it includes a list() function too","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"tankh99"},"content":"      if (command.equals(TodoDao.name)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"tankh99"},"content":"        addTodo(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(DeadlineDao.name)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"tankh99"},"content":"        addDeadline(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(EventDao.name)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"tankh99"},"content":"        addEvent(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(list)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"tankh99"},"content":"        print();","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(mark)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"tankh99"},"content":"        mark(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(unmark)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"tankh99"},"content":"        unmark(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"tankh99"},"content":"      }  else if (command.equals(delete)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"tankh99"},"content":"        delete(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(bye)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"tankh99"},"content":"        return;","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"tankh99"},"content":"      } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"tankh99"},"content":"        throw new IllegalArgumentException(\"Command not recognized\");","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"tankh99"},"content":"      }","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"tankh99"},"content":"    } catch (Exception ex) {","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"tankh99"},"content":"      System.out.println(ex.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"tankh99"},"content":"  private void addTodo(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"tankh99"},"content":"    Todo todo \u003d TodoDao.getFrom(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"tankh99"},"content":"    this.add(todo);","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"tankh99"},"content":"  private void addDeadline(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"tankh99"},"content":"    Deadline deadline \u003d DeadlineDao.getFrom(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"tankh99"},"content":"    this.add(deadline);","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"tankh99"},"content":"  private void addEvent(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"tankh99"},"content":"    Event event \u003d EventDao.getFrom(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"tankh99"},"content":"    this.add(event);","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"tankh99"},"content":"  private void mark(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"tankh99"},"content":"    int taskIndex \u003d Integer.parseInt(StringUtils.getValueOfCommand(input, mark, null)) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"tankh99"},"content":"    Task task \u003d this.get(taskIndex);","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"tankh99"},"content":"    task.markAsDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"tankh99"},"content":"    System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"tankh99"},"content":"  private void unmark(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"tankh99"},"content":"    int taskIndex \u003d Integer.parseInt(StringUtils.getValueOfCommand(input, unmark, null)) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"tankh99"},"content":"    Task task \u003d this.get(taskIndex);","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"tankh99"},"content":"    task.markAsUndone();","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"tankh99"},"content":"    System.out.println(\"Ok! I\u0027ve marked this task as not yet done: \\n\" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"tankh99"},"content":"    this.printSeparator();","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":128}},{"path":"src/main/java/Managers/TodoDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Managers;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Models.Todo;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import Utils.StringUtils;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"public class TodoDao {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"  public static final String name \u003d \"todo\";","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"  public static Todo getFrom(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"    String value \u003d StringUtils.getValueOfCommand(input, TodoDao.name, null);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"    return new Todo(value);","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":12}},{"path":"src/main/java/Models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Models;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"  private String deadline;","lastModifiedDate":"2024-01-19"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"  public Deadline(String name, String deadline) {","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"    super(name);","lastModifiedDate":"2024-01-19"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"    this.deadline \u003d deadline;","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"  ","lastModifiedDate":"2024-01-19"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"  @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"  public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2024-01-19"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"tankh99":14}},{"path":"src/main/java/Models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Models;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"  private String startDate;","lastModifiedDate":"2024-01-19"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"  private String endDate;","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"  public Event(String name, String startdate, String endDate) {","lastModifiedDate":"2024-01-19"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"    super(name);","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"    this.startDate \u003d startdate;","lastModifiedDate":"2024-01-19"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"    this.endDate \u003d endDate;","lastModifiedDate":"2024-01-19"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"  ","lastModifiedDate":"2024-01-19"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"  @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"  public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"    return \"[E]\" + super.toString() + \" (from: \" + startDate + \" to: \" + endDate + \")\";","lastModifiedDate":"2024-01-19"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"tankh99":16}},{"path":"src/main/java/Models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Models;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"public class Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"  private String name;","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"  private boolean isDone;","lastModifiedDate":"2024-01-19"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"  public Task(String name) {","lastModifiedDate":"2024-01-19"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"    this.name \u003d name;","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-19"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"  public Task(String name, boolean isDone) {","lastModifiedDate":"2024-01-19"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    this.name \u003d name;","lastModifiedDate":"2024-01-19"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"    this.isDone \u003d isDone;","lastModifiedDate":"2024-01-19"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"  public String getName() {","lastModifiedDate":"2024-01-19"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"    return name;","lastModifiedDate":"2024-01-19"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"  public boolean isDone() {","lastModifiedDate":"2024-01-19"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"    return isDone;","lastModifiedDate":"2024-01-19"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"  public void markAsDone() {","lastModifiedDate":"2024-01-19"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"    isDone \u003d true;","lastModifiedDate":"2024-01-19"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"  public void markAsUndone() {","lastModifiedDate":"2024-01-19"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"    isDone \u003d false;","lastModifiedDate":"2024-01-19"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"  @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"  public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"    String done \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-19"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"    return \"[\" + done + \"] \" + name;","lastModifiedDate":"2024-01-19"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"tankh99":37}},{"path":"src/main/java/Models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Models;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"  public Todo(String name) {","lastModifiedDate":"2024-01-19"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"    super(name);","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"  @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"  public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-19"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"tankh99":12}},{"path":"src/main/java/Utils/StringUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Utils;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"public class StringUtils {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"  public static int getIndexOf(String input, String toFind) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"    int index \u003d input.indexOf(toFind);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"    if (index \u003d\u003d -1) throw new IllegalArgumentException(\"No \" + toFind + \" specified\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"    return index;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"  public static int getIndexOf(String input, String toFind, int offset) {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"    int index \u003d input.indexOf(toFind) + offset;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"    if (index \u003c 0 || index \u003e\u003d input.length()) throw new IllegalArgumentException(\"No \" + toFind + \" specified\");","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    return index;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"  /**","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"   * This function gets the value of a specified command string. ","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"   * @param input The entire string","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"   * @param command Command string to start search from. Search index is offset by the command\u0027s length","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"   * @param stopWord Optional parameter to indicate to the function that anything beyond this stopword\u0027s start index ","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"   * will not be the value of the command. Search index is offset by -1 to avoid collecting the stopwrod too","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"   * @return","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"   */","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"  public static String getValueOfCommand(String input, String command, String stopWord)  {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    int commandIndex \u003d getIndexOf(input, command);","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"    // Validates against command that is at the end of the string","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"    if (commandIndex + command.length() \u003e\u003d input.length()) throw new IllegalArgumentException(\"No valid value found after \" + command);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"    commandIndex +\u003d command.length();","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"    String value \u003d \"\";","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"    if (stopWord !\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"      int endIndex \u003d getIndexOf(input, stopWord, -1);","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"      value \u003d input.substring(commandIndex, endIndex);","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"    } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"      value \u003d input.substring(commandIndex);","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"    value \u003d value.trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"    if (value.isEmpty()) throw new IllegalArgumentException(\"No valid value found after \" + command);","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"    return value;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"todo eat something nice","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"deadline cs2103 assignment /by tomorrow","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"event clubbing all night /from tonight /to tomorrow morning","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"deadline name name /by ","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"deadline name name /by tonight","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"event ","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"event name name /from","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"event /from tonight","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"event name name /from tonight","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"event name name /to","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"event name name /to tonight","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"event name name /from tonight yo /to","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"event name name /from /to","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"delete 3","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"tankh99":26}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"# Reference: https://stackoverflow.com/questions/59895/how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"SCRIPT_DIR\u003d$( cd -- \"$( dirname -- \"${BASH_SOURCE[0]}\" )\" \u0026\u003e /dev/null \u0026\u0026 pwd )","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"echo $SCRIPT_DIR","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"if [ ! -d \"$SCRIPT_DIR/../bin\" ]","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"    mkdir $SCRIPT_DIR/../bin","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"if [ -e \"$SCRIPT_DIR/ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"    rm $SCRIPT_DIR/ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"if ! javac -cp $SCRIPT_DIR/../src/main/java -Xlint:none -d $SCRIPT_DIR/../bin $SCRIPT_DIR/../src/main/java/Duke.java","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"java -classpath $SCRIPT_DIR/../bin Duke \u003c $SCRIPT_DIR/input.txt \u003e $SCRIPT_DIR/ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"diff $SCRIPT_DIR/ACTUAL.TXT $SCRIPT_DIR/EXPECTED.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tankh99":10,"-":26}}]
