[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"# pingmebot.PingMe project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"3. After that, locate the `src/main/java/pingmebot.PingMe.java` file, right-click it, and choose `Run pingmebot.PingMe.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cheahTJ":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    mainClass.set(\"pingmebot.PingMe\")","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    archiveBaseName \u003d \"pingmebot\"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cheahTJ":3,"-":39}},{"path":"src/main/java/pingmebot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.ToDos;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Events;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":" * Helps to parse and make sense of user\u0027s inputs.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"public class Parser {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    protected String userInput;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    protected ArrayList\u003cString\u003e words;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     * Creates a parser class with user\u0027s inputs.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     * It also helps to break down user\u0027s commands into an array for better processing afterwards.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"     * @param userInput User\u0027s inputs.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    public Parser (String userInput) {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"        this.words \u003d new ArrayList\u003c\u003e(Arrays.asList(userInput.split(\" \")));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"     * Creates a ToDos object with a specified task description after parsing user\u0027s command with the ToDo command.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"     * @return A ToDos object with a specified task description.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user did not specify any task description or when the user command is not understood.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    public ToDos parseToDoCommand() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"            if (!this.words.get(1).isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"                StringBuilder description \u003d new StringBuilder(this.words.get(1));","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"                for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"                    description.append(\" \").append(this.words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"                return new ToDos(description.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"OOPS! The command is incomplete. Please provide a task description!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"     * Creates a Deadline object with a specified task description and a datetime to do the task by after parsing user\u0027s command with the Deadline command.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"     * @return A Deadline object with a specified task description and a datetime to compelte the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user did not specify any task description or datetime to finish the task, or when the user command is not understood.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"    public Deadline parseDeadlineCommand() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder by  \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"        int index \u003d this.words.indexOf(\"/by\");","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"            if (index !\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"                description \u003d new StringBuilder(this.words.get(1)); // if the user forgets to include description field","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I don\u0027t understand your command. Try writing: deadline (task description) /by (d/m/yyyy HHmm format)\");","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"            if (i \u003c index) {","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"                description.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"            } else if (i \u003e index) {","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"                by.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"        if (!(by.toString().isEmpty() || description.toString().isEmpty())) {","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"            LocalDateTime parsedDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"                parsedDateTime \u003d LocalDateTime.parse(by.toString().trim(), formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"                throw new PingMeException(\"I don\u0027t understand your command. Try writing: deadline (task description) /by (d/m/yyyy HHmm format)\");","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"            return new Deadline(description.toString(), parsedDateTime);","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You have missing fields! You need a task description \u0026 a deadline to finish your task, try again!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"     * Creates an Events object with a specified task description, start and end date or time of the event after parsing user\u0027s command with the Events command.","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"     * @return An Events object with a specified task description, start and end date or time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user did not specify any task description, start and end date or time of the event or when the user command is not understood.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"    public Events parseEventsCommand() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder start \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder end \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"        int indexOfFrom \u003d this.words.indexOf(\"/from\");","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"        int indexOfTo \u003d this.words.indexOf(\"/to\");","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"        if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I don\u0027t understand your command. Try writing: event (task description) /from (date/time) /to (date/time)\");","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"            if (indexOfFrom \u003d\u003d 1 || indexOfTo \u003d\u003d 1) {} else {","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"                description \u003d new StringBuilder(this.words.get(1));","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"            if (i \u003c indexOfFrom) {","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"                description.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"            } else if (i \u003e indexOfFrom \u0026\u0026 i \u003c indexOfTo) {","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"                start.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"            } else if (i \u003e indexOfTo){","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"                end.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"        if (description.toString().isEmpty() || start.toString().isEmpty() || end.toString().isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You having missing fields! You need a task description, start and end date/time for your task, try again!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"            return new Events(description.toString(), start.toString(), end.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"     * Returns a 0-based index of the task to be marked after parsing the user\u0027s comnmand with the mark command.","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"     * @param currentNumOfTask The total number of task currently in the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"     * @return A 0-based index of the task to be marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the index of the task in the tasklist is not specified or when it is higher or lower than the actual total number of tasks currently.","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"    public int parseMarkCommand(int currentNumOfTask) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"            if (!this.words.get(1).isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"cheahTJ"},"content":"                if (Integer.parseInt(this.words.get(1)) \u003e currentNumOfTask || Integer.parseInt(this.words.get(1)) \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"cheahTJ"},"content":"                    throw new PingMeException(\"You have currently \" + currentNumOfTask + \" tasks. You cannot mark task larger or smaller than this!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"cheahTJ"},"content":"                    return Integer.parseInt(this.words.get(1)) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":160,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I\u0027m not sure which task you wish to mark. Please specify the task you wish to mark and try again!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"cheahTJ"},"content":"     * Returns a 0-based index of the task to be un-marked after parsing the user\u0027s comnmand with the unmark command.","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"cheahTJ"},"content":"     * @param currentNumOfTask The total number of task currently in the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"cheahTJ"},"content":"     * @return A 0-based index of the task to be un-marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the index of the task in the tasklist is not specified or when it is higher or lower than the actual total number of tasks currently.","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":175,"author":{"gitId":"cheahTJ"},"content":"    public int parseUnmarkCommand(int currentNumOfTask) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"cheahTJ"},"content":"            if (!this.words.get(1).isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":178,"author":{"gitId":"cheahTJ"},"content":"                if (Integer.parseInt(this.words.get(1)) \u003e currentNumOfTask || Integer.parseInt(this.words.get(1)) \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":179,"author":{"gitId":"cheahTJ"},"content":"                    throw new PingMeException(\"You have currently \" + currentNumOfTask + \" tasks. You cannot un-mark task larger or smaller than this!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":182,"author":{"gitId":"cheahTJ"},"content":"                    return Integer.parseInt(this.words.get(1)) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":184,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":186,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":187,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":188,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I\u0027m not sure which task you wish to un-mark. Please specify the task you wish to un-mark and try again!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":193,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":194,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"cheahTJ"},"content":"     * Returns a 0-based index of the task to be deleted after parsing the user\u0027s comnmand with the delete command.","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"cheahTJ"},"content":"     * @param currentNumOfTask The total number of task currently in the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"cheahTJ"},"content":"     * @return A 0-based index of the task to be marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the index of the task in the tasklist is not specified or when it is higher or lower than the actual total number of tasks currently.","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":201,"author":{"gitId":"cheahTJ"},"content":"    public int parseDeleteCommand(int currentNumOfTask) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":203,"author":{"gitId":"cheahTJ"},"content":"            if (!this.words.get(1).isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":204,"author":{"gitId":"cheahTJ"},"content":"                if (Integer.parseInt(this.words.get(1)) \u003e currentNumOfTask || Integer.parseInt(this.words.get(1)) \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":205,"author":{"gitId":"cheahTJ"},"content":"                    throw new PingMeException(\"You have currently \" + currentNumOfTask + \" tasks. You cannot delete task larger or smaller than this!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":208,"author":{"gitId":"cheahTJ"},"content":"                    return Integer.parseInt(this.words.get(1)) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":209,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":210,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":212,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":213,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":214,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":216,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I\u0027m not sure which task you wish to delete. Please specify the task you want to delete and try again!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":218,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":219,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"cheahTJ"},"content":"     * Returns the keyword of what the user is trying to find in his/her tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"cheahTJ"},"content":"     * @return Keyword specified by the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":224,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user forgets to input keyword to find.","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":226,"author":{"gitId":"cheahTJ"},"content":"    public String parseFindCommand() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":228,"author":{"gitId":"cheahTJ"},"content":"            if (!this.words.get(1).isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":229,"author":{"gitId":"cheahTJ"},"content":"                return this.words.get(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-02"},{"lineNumber":232,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":233,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":234,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I\u0027m not sure what you are trying to find. Please specify a keyword and try again!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":236,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":237,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":237}},{"path":"src/main/java/pingmebot/PingMe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.ToDos;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Events;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":" * A simple, interactive task management application.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":" * It allows user to interact with it via command line interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"public class PingMe {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    private UI ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     * Creates a PingMe object with a specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     * @param filePath The filePath to the storage of data locally.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    public PingMe(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"            this.tasks \u003d new TaskList(storage.bootingUp());","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"        } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     * Helps to start the main logic of the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"        while (true) {","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"            String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"            parser \u003d new Parser(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"                ui.sayGoodbye();","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"                break;","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"                ui.listText();","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"                tasks.listTask();","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"                    int taskNumber \u003d parser.parseMarkCommand(tasks.getTaskSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"                    ui.markTaskText(taskNumber, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"                } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"                    int taskNum \u003d parser.parseUnmarkCommand(tasks.getTaskSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"                    ui.unmarkTaskText(taskNum, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"                } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"                    ToDos todo \u003d parser.parseToDoCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"                    ui.additionToTasksText(todo, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"                } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"                    Deadline deadlineTask \u003d parser.parseDeadlineCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"                    tasks.addTask(deadlineTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"                    ui.additionToTasksText(deadlineTask, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"                } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"                    Events events \u003d parser.parseEventsCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"                    tasks.addTask(events);","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"                    ui.additionToTasksText(events, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"                } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"                    int taskNumber \u003d parser.parseDeleteCommand(tasks.getTaskSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"                    ui.deletionToTasksText(taskNumber, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"                } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"                    String keyword \u003d parser.parseFindCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"                    ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findMatchingTask(keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"                    if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"                        ui.showError(\"No matching results found!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"                    } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"                        ui.listMatchingText();","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"                        tasks.listMatchingTask(matchingTasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"                catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means :\u0027(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"        new PingMe(\"./data/dukeData.txt\").run();","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cheahTJ":134,"-":2}},{"path":"src/main/java/pingmebot/PingMeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":" * Responsible for throwing exception that is specific to the bot application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"public class PingMeException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    protected String message;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"     * Creates a specified bot object that has its own error message","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"     * @param message Error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    public PingMeException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"cheahTJ":17}},{"path":"src/main/java/pingmebot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.ToDos;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Events;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":" * Helps to load tasks from and updating tasks to local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":" * It provides methods to boot tasks, if any, from and write any new tasks into the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    protected File myFile;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    protected String filePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     * Creates a filestorage object with a specified file path.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     * @param filePath The file path to the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the path to the file does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    public Storage(String filePath) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        this.myFile \u003d new File(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"        if (!myFile.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"                if (this.myFile.createNewFile()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"                    System.out.println(\"File has been successfully created\");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"                    System.out.println(\"Error creating file...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"                throw new PingMeException(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"     * Loads tasks into list of tasks which is then used to create the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"     * @return List of tasks, if any, from the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the path to the file is not found or when syntax of tasks stored in the localfile is not understood.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    public ArrayList\u003cTask\u003e bootingUp() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        if (this.myFile.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"                Scanner sc \u003d new Scanner(this.myFile);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"                    String text \u003d sc.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"                    String[] segmentedText \u003d text.split(\"\\\\|\");","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"                    if (segmentedText[0].trim().equals(\"todo\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"                        int isTaskCompleted \u003d Integer.parseInt(segmentedText[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"                        String description \u003d segmentedText[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"                        ToDos todo \u003d new ToDos(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"                        if (isTaskCompleted \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"                            todo.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"                        tasks.add(todo);","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"                    } else if (segmentedText[0].trim().equals(\"deadline\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"                        int isTaskCompleted \u003d Integer.parseInt(segmentedText[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"                        String description \u003d segmentedText[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"                        String deadlineTime \u003d segmentedText[3].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"                        LocalDateTime parsedDateTime \u003d LocalDateTime.parse(deadlineTime, formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"                        Deadline deadline \u003d new Deadline(description, parsedDateTime);","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"                        if (isTaskCompleted \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"                            deadline.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"                    } else if (segmentedText[0].trim().equals(\"event\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"                        int isTaskCompleted \u003d Integer.parseInt(segmentedText[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"                        String description \u003d segmentedText[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"                        String from \u003d \" \" + segmentedText[3].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"                        String to \u003d \" \" + segmentedText[4].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"                        Events event \u003d new Events(description,from,to);","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"                        if (isTaskCompleted \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"                            event.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"                        tasks.add(event);","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"                    } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"                        throw new PingMeException(\"Weird expression found!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"                throw new PingMeException(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"     * Updates and writes all the tasks in the tasklist into the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The list of all tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the path to the file is not found.","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"    public void updateFile(ArrayList\u003cTask\u003e tasks) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"                int isCompleted \u003d t.hasCompleted();","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"                if (t instanceof ToDos) {","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"                    String toWrite \u003d ((ToDos) t).updateToDoText(isCompleted);","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"                    fw.write(toWrite + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"                    String toWrite \u003d ((Deadline) t).updateDeadlineText(isCompleted);","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"                    fw.write(toWrite + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"                } else if (t instanceof Events) {","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"                    String toWrite \u003d ((Events) t).updateEventText(isCompleted);","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"                    fw.write(toWrite + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"There is not file to be updated!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"cheahTJ":142}},{"path":"src/main/java/pingmebot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" * Stores the list of tasks assigned to the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     * Creates a TaskList object when there are already tasks in the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks A specified list of tasks loaded from the local file","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     * Constructor for creating a TaskList object when there are no tasks already in the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     * Returns the number of tasks in the current tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"     * @return The number of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    public int getTaskSize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     * Updates the local file of the modification made to the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"     * @param fs The actual file that the method is supposed to write into.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If there is an attempt to write into a non-existent file.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    public void updateTaskToStorage(Storage fs) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"            fs.updateFile(this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"        } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"     * Adds a task to the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"     * @param task The task to be added into the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"     * Removes a task from the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"    public void removeTask(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.remove(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"     * Returns the desired description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to retrieve its description.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"     * @return The desired description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"    public String taskToString(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.get(taskNumber).toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"     * Returns the status icon of the task to see if it has been completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to retrieve its status icon.","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"     * @return Status icon of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"    public String taskStatusIcon(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.get(taskNumber).getStatusIcon();","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"     * Marks task as completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to mark as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"    public void taskMarkAsDone(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"     * Un-marks task.","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to un-mark.","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"    public void taskUncheckTask(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.get(taskNumber).uncheckingTask();","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"     * Prints out the list of tasks with an index number.","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"    public void listTask() {","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"            if (tasks.get(i) \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"            System.out.println(taskNumber + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"     * Returns a list of matching task according to the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"     * @param keyword Keyword specified by the user to find.","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"     * @return A list of matching task lists, can be empty as well.","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"    public ArrayList\u003cTask\u003e findMatchingTask(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.stream().filter(task","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"                -\u003e task.getDescription().contains(keyword)).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"     * Prints out the list of matching task, if any, with a 1-based index.","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The list of matching tasks, if any.","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"    public void listMatchingTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":143}},{"path":"src/main/java/pingmebot/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":" * Deals with the user interactivity of the application.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"public class UI {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    private final Scanner SC;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     * Creates a UI object with the Scanner object intialised to read user\u0027s inputs.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    public UI() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"        this.SC \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     * Sends welcoming message to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"        String greetingMsg \u003d \"Hello! I\u0027m PingMeBot\\n\" + \"What can I do for you?\";","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(greetingMsg);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     * Sends goodbye message to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        String exitMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(\"\\n\" + exitMsg);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     * Sends to user an overview message of the tasks the user has.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    public void listText() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"     * Prints an overview text of matching tasks found in the tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    public void listMatchingText() {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     * Reads the user\u0027s inputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"     * @return User\u0027s input.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        return this.SC.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"     * Sends a message to the user when his/her desired task has been added.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"     * @param task The specified task the user wants to do.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"     * @param allTasks The tasklist which contains all the user\u0027s tasks in which the user\u0027s new task is to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"    public void additionToTasksText(Task task, TaskList allTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponAddition \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        toUserUponAddition +\u003d (\"\\n\" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"        toUserUponAddition +\u003d \"\\n\"  + \"  \" + task.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"        toUserUponAddition +\u003d \"\\n\" + \"Now you have \" + allTasks.getTaskSize() + \" tasks in the list.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponAddition);","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"     * Sends a message to inform the user of the task that he/she wishes to delete.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist which the user wants to delete.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"     * @param allTasks The list of all the tasks that the user has in which to delete the task from.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"    public void deletionToTasksText(int taskNumber, TaskList allTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponDeletion \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"        toUserUponDeletion +\u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"        toUserUponDeletion +\u003d \"\\n\"  + \"  \" + allTasks.taskToString(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"        allTasks.removeTask(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"        toUserUponDeletion +\u003d \"\\n\" + \"Now you have \" + allTasks.getTaskSize() + \" tasks in the list.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponDeletion);","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"     * Sends a message to the user when the task that he/she wishes to mark as completed has been marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNum The position of the task in the tasklist which the user wants to mark.","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"     * @param allTasks The list of all the tasks that the user has in which to mark the task from.","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user tries to mark a task which has already been completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"    public void markTaskText(int taskNum, TaskList allTasks) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponMarkingTask \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"        if (allTasks.taskStatusIcon(taskNum).equals(\"X\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You cannot mark task again which has been completed!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"        allTasks.taskMarkAsDone(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"        toUserUponMarkingTask +\u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"        toUserUponMarkingTask +\u003d \"\\n\" + \"  \" + allTasks.taskToString(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponMarkingTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"     * Sends a message to the user when the task that he/she wishes to un-mark as not completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNum The position of the task in the tasklist which the user wants to un-mark.","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"     * @param allTasks The list of all the tasks that the user has in which to un-mark the task from.","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user tries to un-mark a task which has not been completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"    public void unmarkTaskText(int taskNum, TaskList allTasks) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponUnmarkingTask \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"        if (allTasks.taskStatusIcon(taskNum).equals(\" \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You cannot un-mark task which has not been marked!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"        allTasks.taskUncheckTask(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"        toUserUponUnmarkingTask +\u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"        toUserUponUnmarkingTask +\u003d \"\\n\" + \"  \" + allTasks.taskToString(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponUnmarkingTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"     * Sends the specified error message to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"     * @param errorMessage Specified error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":136}},{"path":"src/main/java/pingmebot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":" * A category of task that has a task description and a datetime to complete it by.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     * Creates a Deadline object with a specified task description and a datetime to complete the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * @param by Datetime to finish the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HHmm\")) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation that is saved to the local file whenever a deadline task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     * @param isCompleted Integer boolean flag to indicate if the task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation when a deadline task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    public String updateDeadlineText(int isCompleted) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        String text \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        text +\u003d \"deadline | \" + isCompleted + \" | \" + this.description + \" | \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        return text;","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"     * Returns true only when 2 objects have the same description and the date time to complete the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The object that is being compared to.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to indicate if 2 objects have the same description and the date time to complete the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        Deadline otherDeadline \u003d (Deadline) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        return this.description.equals(otherDeadline.description) \u0026\u0026 this.by.equals(otherDeadline.by);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":66}},{"path":"src/main/java/pingmebot/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":" * A category of task that has a task description, and a start and end date or time to complete the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    protected String start;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"    protected String end;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"     * Creates an object with the initialisation of the task\u0027s description, start and end date or time.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     * @param start The starting date or time of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     * @param end The ending date or time of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    public Events(String description, String start, String end) {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation of the Events task.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation of the Events task.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + start + \" to:\" + end + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation that is saved to the local file whenever an Events task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     * @param isCompleted Integer boolean flag to indicate if the task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation when a Events task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    public String updateEventText(int isCompleted) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        String text \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        text +\u003d \"event | \" + isCompleted + \" | \" + this.description + \" | \" + this.start + \" | \" + this.end;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        return text;","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"     * Returns true only when 2 objects have the same description and the starting and ending date or time of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The object that is being compared to.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to indicate if 2 objects have the same description and ending date or time of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        Events otherEvent \u003d (Events) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        return this.description.equals(otherEvent.description) \u0026\u0026 this.start.equals(otherEvent.start) \u0026\u0026 this.end.equals(otherEvent.end);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":68}},{"path":"src/main/java/pingmebot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":" * Represents a task with a task description and a boolean flag to know if the task has been completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"     * Creates a task object with the task description and a boolean flag initialised.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     * Returns a specified task\u0027s status icon.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     * @return The specified task\u0027s status icon.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * Marks the task as completed by setting the isDone boolean flag to true.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     * Unmarks the task as uncompleted by setting the isDone boolean flag to false.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    public void uncheckingTask() {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation to know if a task has been completed or not.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"     * @return A string to indicate if task has been completed or not.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"     * Returns an integer boolean flag of the isDone variable.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"     * @return An integer representation to indicate if the task has been completed or not.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"    public int hasCompleted() {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        return this.isDone ? 1 : 0;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"     * @return Description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":71}},{"path":"src/main/java/pingmebot/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":" * A category of task that has a task description.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"     * Creates a Deadline object with a specified task description.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation of the ToDos task.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation of the ToDos task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation that is saved to the local file whenever a ToDos task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"     * @param isCompleted Integer boolean flag to indicate if the task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation when a ToDos task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    public String updateToDoText(int isCompleted) {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"        String text \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        text +\u003d \"todo | \" + isCompleted + \" | \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"        return text;","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"     * Returns true only when 2 objects have the same description.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The object that is being compared to.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to indicate if 2 objects have the same description.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        ToDos otherToDo \u003d (ToDos) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        return this.description.equals(otherToDo.description);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":61}},{"path":"src/test/java/pingmebot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Events;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.ToDos;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    public void todoParserTest() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"todo project\";","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new ToDos(\"project\"),parser.parseToDoCommand());","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    public void deadlineParserTest() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"deadline project /by 05/05/2000 1800\";","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        String time \u003d \"05/05/2000 1800\";","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new Deadline(\"project\", LocalDateTime.parse(time, formatter)),parser.parseDeadlineCommand());","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    public void eventParserTest() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        String command  \u003d \"event project /from 9am /to 8pm\";","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new Events(\"project\", \" 9am\",\" 8pm\"),parser.parseEventsCommand());","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    public void markParserTest() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"mark 2\";","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        int arbituaryNumOfTask \u003d 3;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(1, parser.parseMarkCommand(arbituaryNumOfTask));","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"    public void unmarkParserTest() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"unmark 2\";","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"        int arbituaryNumOfTask \u003d 3;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(1, parser.parseMarkCommand(arbituaryNumOfTask));","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    public void deleteParserTest() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"delete 2\";","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        int arbituaryNumOfTask \u003d 3;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(1, parser.parseMarkCommand(arbituaryNumOfTask));","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"    public void findParserTest() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"find book\";","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\"book\", parser.parseFindCommand());","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"cheahTJ":68}},{"path":"src/test/java/pingmebot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.ToDos;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    public void getTaskSizeTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project 1\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project 2\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project 3\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(3, tl.getTaskSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    public void updateTaskToStorageTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"            tasks.add(new ToDos(\"project 1\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"            tasks.add(new ToDos(\"project 2\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"            TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"            String filePath \u003d \"./data/dukeData.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"            // File will always exist since it will be created in the file storage constructor if not found","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"            tl.updateTaskToStorage(new Storage(filePath));","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"            String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"            String totalLine \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"            try (BufferedReader reader \u003d new BufferedReader(new FileReader(Paths.get(filePath).toFile()))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"                    totalLine +\u003d line + \"\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"                fail(\"Test Failed.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"            assertEquals(\"todo | 0 | project 1\" + \"\\n\" + \"todo | 0 | project 2\" + \"\\n\",totalLine);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"        } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"            fail(\"Test Failed.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    public void addTaskTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        tl.addTask(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(1,tl.tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"    public void removeTaskTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"        // Task number is 0-based","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"        tl.removeTask(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(0, tl.tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"    public void taskToStringTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\"[T][ ] project\", tl.taskToString(0));","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"    public void taskStatusIconTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\" \", tl.taskStatusIcon(0));","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"    public void taskMarkAsDoneTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"        tl.taskMarkAsDone(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\"[T][X] project\", tl.tasks.get(0).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"    public void taskUncheckTaskTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"        tl.taskMarkAsDone(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"        tl.taskUncheckTask(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\"[T][ ] project\", tl.tasks.get(0).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"    public void listTaskTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"        PrintStream newOut \u003d new PrintStream(outputStream);","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"        System.setOut(newOut);","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"        tl.listTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"        String capturedOutput \u003d outputStream.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\"1.[T][ ] project\" + \"\\n\", capturedOutput);","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"    public void findMatchingTaskTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"read book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"borrow book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e expectedOutput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"        expectedOutput.add(new ToDos(\"read book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"        expectedOutput.add(new ToDos(\"borrow book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(expectedOutput, tl.findMatchingTask(\"book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"    public void listMatchingTaskTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"read book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"borrow book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e filteredTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"        filteredTask.add(new ToDos(\"read book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"        filteredTask.add(new ToDos(\"borrow book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"        PrintStream newOut \u003d new PrintStream(outputStream);","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"        System.setOut(newOut);","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"cheahTJ"},"content":"        tl.listMatchingTask(filteredTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"cheahTJ"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"cheahTJ"},"content":"        String capturedOutput \u003d outputStream.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\"1.[T][ ] read book\" + \"\\n\" + \"2.[T][ ] borrow book\" + \"\\n\", capturedOutput);","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"cheahTJ":159}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"list","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"cheahTJ":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"java -classpath ..\\bin pingmebot.PingMe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cheahTJ":1,"-":20}}]
