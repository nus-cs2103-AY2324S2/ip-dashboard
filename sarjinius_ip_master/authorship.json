[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"checkstyle {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"sarjinius"},"content":"    mainClass.set(\"virtue.Launcher\")","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"sarjinius"},"content":"    archiveBaseName \u003d \"virtue\"","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"sarjinius":22}},{"path":"data/virtue.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"E | 0 | Come to the place | 2024-02-14T10:00 | 2024-02-16T19:00","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"D | 1 | Bring the goods  | 2025-02-13T12:00","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"T | 0 | Keep the change","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"T | 0 | find answer","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"T | 0 | Make me better","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"D | 0 | Make  | 2024-02-21T12:00","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"sarjinius":6}},{"path":"src/main/java/virtue/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"/** The Command that can be generated by inputs in the chatbot. */","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"public class Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"    /** The available types of commands in Virtue. */","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"    public enum CommandType {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"        BYE(\"bye\", false, false),","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"        LIST(\"list\", false, false),","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"        MARK(\"mark\", true, false),","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"        UNMARK(\"unmark\", true, false),","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"        TODO(\"todo\", false, true),","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"        DEADLINE(\"deadline\", false, true),","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"        EVENT(\"event\", false, true),","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"        DELETE(\"delete\", true, false),","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"        FIND(\"find\", false, true);","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"        private final String string;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"        private final boolean hasIndex;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"        private final boolean hasDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"        CommandType(String string,","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"                    boolean hasIndex,","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"                    boolean hasDescription) {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"            this.string \u003d string;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"            this.hasIndex \u003d hasIndex;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"            this.hasDescription \u003d hasDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"        @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"        public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"            return this.string;","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"    protected CommandType type;","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"    protected int index;","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"    protected String description;","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"    protected VirtueDateTime by;","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"sarjinius"},"content":"    protected VirtueDateTime from;","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"sarjinius"},"content":"    protected VirtueDateTime to;","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"sarjinius"},"content":"    private String resultMessage;","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"sarjinius"},"content":"     * Creates a command from the user input.","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"sarjinius"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"sarjinius"},"content":"     * @throws VirtueException If the string cannot be parsed into a command.","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"sarjinius"},"content":"    public Command(String input) throws VirtueException {","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"sarjinius"},"content":"        this.type \u003d Parser.getCommandType(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"sarjinius"},"content":"        if (this.type.hasIndex) {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"sarjinius"},"content":"            this.index \u003d Parser.getIndex(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"sarjinius"},"content":"        if (this.type.hasDescription) {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"sarjinius"},"content":"            this.description \u003d Parser.getDescription(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"sarjinius"},"content":"        if (this.type \u003d\u003d CommandType.DEADLINE) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"sarjinius"},"content":"            this.by \u003d Parser.getBy(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"sarjinius"},"content":"        if (this.type \u003d\u003d CommandType.EVENT) {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"sarjinius"},"content":"            this.from \u003d Parser.getFrom(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"sarjinius"},"content":"            this.to \u003d Parser.getTo(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"sarjinius"},"content":"     * Checks if a command is of type \"bye\".","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"sarjinius"},"content":"     * @return True if the command is a \"bye\", false if not.","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"sarjinius"},"content":"    public boolean isBye() {","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"sarjinius"},"content":"        return type \u003d\u003d CommandType.BYE;","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"sarjinius"},"content":"     * Sets the result message of the command.","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"sarjinius"},"content":"     * @param message The result message generated by the command.","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"sarjinius"},"content":"    public void setResultMessage(String message) {","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"sarjinius"},"content":"        resultMessage \u003d message;","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"sarjinius"},"content":"     * Gets the result message of the command.","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"sarjinius"},"content":"     * @return The result message of the command.","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"sarjinius"},"content":"    public String getResultMessage() {","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"sarjinius"},"content":"        return resultMessage;","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":97}},{"path":"src/main/java/virtue/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"/** Represents a deadline task. */","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"public class Deadline extends VirtueTask {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"    private VirtueDateTime by;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"    public Deadline(String description, VirtueDateTime by) {","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"    public String fileFormat() {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"        return \"D | \" + super.fileFormat() + \" | \" + by.fileFormat();","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":21}},{"path":"src/main/java/virtue/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"sarjinius"},"content":"        dialog.setMinHeight(dialog.USE_PREF_SIZE);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"sarjinius"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"sarjinius"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"sarjinius"},"content":"    private void flip() {","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"sarjinius"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"sarjinius"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"sarjinius"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"sarjinius"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"sarjinius"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"sarjinius"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"sarjinius"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"sarjinius"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"sarjinius"},"content":"        db.flip();","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"sarjinius"},"content":"        return db;","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"sarjinius":63}},{"path":"src/main/java/virtue/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"public class EmptyDescriptionException extends VirtueException {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"    public EmptyDescriptionException(String type) {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"        super(\"OOPS!!! The description of a \" + type + \" cannot be empty.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":7}},{"path":"src/main/java/virtue/EmptyIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"public class EmptyIndexException extends VirtueException {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"    public EmptyIndexException(String type) {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"        super(\"OOPS!!! The description of a \" + type + \" command cannot be empty.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":7}},{"path":"src/main/java/virtue/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"/** Represents an event task. */","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"public class Event extends VirtueTask {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"    private VirtueDateTime from;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"    private VirtueDateTime to;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"    public Event(String description, VirtueDateTime from, VirtueDateTime to) {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"    public String fileFormat() {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"        return \"E | \" + super.fileFormat() + \" | \" + from.fileFormat() + \" | \" + to.fileFormat();","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":23}},{"path":"src/main/java/virtue/IndexFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"public class IndexFormatException extends VirtueException {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"    public IndexFormatException(String type) {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"        super(\"The index of a \" + type + \" command must be an integer.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":7}},{"path":"src/main/java/virtue/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"public class Launcher {","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"sarjinius":11}},{"path":"src/main/java/virtue/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":" * A GUI for Virtue using FXML.","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"    private Virtue virtue \u003d new Virtue();","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setVirtue(virtue);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().start();","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"            stage.show();","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"sarjinius":32}},{"path":"src/main/java/virtue/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"    private Virtue virtue;","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaStoic.png\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MrVirtue.png\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"    public void setVirtue(Virtue v) {","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"        virtue \u003d v;","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"sarjinius"},"content":"    public void start() {","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"sarjinius"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(virtue.greet(), dukeImage));","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"sarjinius"},"content":"        virtue.initialize();","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"sarjinius"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Virtue\u0027s reply and then appends them to","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"sarjinius"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"sarjinius"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"sarjinius"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"sarjinius"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"sarjinius"},"content":"        String response \u003d virtue.getResponse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"sarjinius"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"sarjinius"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"sarjinius"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"sarjinius"},"content":"        );","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"sarjinius"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"sarjinius"},"content":"        if (virtue.isExit) {","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"sarjinius"},"content":"            userInput.setEditable(false);","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"sarjinius"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"sarjinius"},"content":"            PauseTransition appPause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"sarjinius"},"content":"            appPause.setOnFinished(event -\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"sarjinius"},"content":"                    Platform.exit());","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"sarjinius"},"content":"            appPause.play();","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"sarjinius":69}},{"path":"src/main/java/virtue/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"/** A parser that parses user inputs to help generate commands. */","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"public class Parser {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"     * Gets the first word of a string.","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"     * @param str The string to get the first word from.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"     * @return The first word of a string.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"    private static String getFirstWord(String str) {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"        return str.split(\" \", 2)[0];","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"     * Removes the first word of a string.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"     * @param str The string to remove the first word from.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"     * @return The string without the first word.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"    private static String removeFirstWord(String str) {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"        return str.split(\" \", 2)[1];","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"     * Gets the type of the command, which is its first word.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"     * @return The type of the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"     * @throws UnknownCommandTypeException If the first word does not match a command type.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"    public static Command.CommandType getCommandType(String input) throws UnknownCommandTypeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"        String firstWord \u003d getFirstWord(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"        for (Command.CommandType type : Command.CommandType.values()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"            if (firstWord.equals(type.toString())) {","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"sarjinius"},"content":"                return type;","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"sarjinius"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"sarjinius"},"content":"        throw new UnknownCommandTypeException();","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"sarjinius"},"content":"     * Gets the index input by the user for a mark/unmark/delete command.","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"sarjinius"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"sarjinius"},"content":"     * @return The index for a mark/unmark/delete command.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"sarjinius"},"content":"     * @throws EmptyIndexException If the index does not exist.","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"sarjinius"},"content":"     * @throws IndexFormatException If the index is not an integer.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"sarjinius"},"content":"    public static int getIndex(String input) throws EmptyIndexException, IndexFormatException {","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"sarjinius"},"content":"        String type \u003d getFirstWord(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"sarjinius"},"content":"            return Integer.parseInt(removeFirstWord(input));","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"sarjinius"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"sarjinius"},"content":"            throw new EmptyIndexException(type);","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"sarjinius"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"sarjinius"},"content":"            throw new IndexFormatException(type);","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"sarjinius"},"content":"     * Gets the description for a todo/deadline/event command.","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"sarjinius"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"sarjinius"},"content":"     * @return The description for a todo/deadline/event command.","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"sarjinius"},"content":"     * @throws EmptyDescriptionException If the description does not exist.","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"sarjinius"},"content":"    public static String getDescription(String input) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"sarjinius"},"content":"        String description;","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"sarjinius"},"content":"        String firstWordRemoved;","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"sarjinius"},"content":"        String type \u003d getFirstWord(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"sarjinius"},"content":"            firstWordRemoved \u003d removeFirstWord(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"sarjinius"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"sarjinius"},"content":"            throw new EmptyDescriptionException(type);","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"sarjinius"},"content":"        switch (type) {","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"sarjinius"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"sarjinius"},"content":"            description \u003d firstWordRemoved.split(\"/by\", 2)[0];","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"sarjinius"},"content":"        case \"event\":","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"sarjinius"},"content":"            description \u003d firstWordRemoved.split(\" /from \", 2)[0];","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"sarjinius"},"content":"        default: // case TODO","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"sarjinius"},"content":"            description \u003d firstWordRemoved;","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"sarjinius"},"content":"        return description;","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"sarjinius"},"content":"     * Gets the deadline for a deadline command.","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"sarjinius"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"sarjinius"},"content":"     * @return The deadline date/time of the deadline command.","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"sarjinius"},"content":"     * @throws VirtueDateTimeException If the date/time is invalid or not in the correct format.","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"sarjinius"},"content":"    public static VirtueDateTime getBy(String input) throws VirtueDateTimeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"sarjinius"},"content":"        String firstWordRemoved \u003d removeFirstWord(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"sarjinius"},"content":"        String dateTimeStr \u003d firstWordRemoved.split(\" /by \", 2)[1];","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"sarjinius"},"content":"            return new VirtueDateTime(dateTimeStr);","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"sarjinius"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"sarjinius"},"content":"            throw new VirtueDateTimeException(\"by\", \"deadline\");","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"sarjinius"},"content":"     * Gets the starting date/time for an event command.","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"sarjinius"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"sarjinius"},"content":"     * @return The starting date/time of the event command.","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"sarjinius"},"content":"     * @throws VirtueDateTimeException If the date/time is invalid or not in the correct format.","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"sarjinius"},"content":"    public static VirtueDateTime getFrom(String input) throws VirtueDateTimeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"sarjinius"},"content":"        String firstWordRemoved \u003d removeFirstWord(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"sarjinius"},"content":"        String fromAndTo \u003d firstWordRemoved.split(\" /from \", 2)[1];","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"sarjinius"},"content":"        String dateTimeStr \u003d fromAndTo.split(\" /to \", 2)[0];","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"sarjinius"},"content":"            return new VirtueDateTime(dateTimeStr);","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"sarjinius"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":128,"author":{"gitId":"sarjinius"},"content":"            throw new VirtueDateTimeException(\"from\", \"event\");","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"sarjinius"},"content":"     * Gets the ending date/time for an event command.","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"sarjinius"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"sarjinius"},"content":"     * @return The ending date/time of the event command.","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"sarjinius"},"content":"     * @throws VirtueDateTimeException If the date/time is invalid or not in the correct format.","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"sarjinius"},"content":"    public static VirtueDateTime getTo(String input) throws VirtueDateTimeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"sarjinius"},"content":"        String firstWordRemoved \u003d removeFirstWord(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"sarjinius"},"content":"        String fromAndTo \u003d firstWordRemoved.split(\" /from \", 2)[1];","lastModifiedDate":"2024-02-14"},{"lineNumber":142,"author":{"gitId":"sarjinius"},"content":"        String dateTimeStr \u003d fromAndTo.split(\" /to \", 2)[1];","lastModifiedDate":"2024-02-14"},{"lineNumber":143,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":144,"author":{"gitId":"sarjinius"},"content":"            return new VirtueDateTime(dateTimeStr);","lastModifiedDate":"2024-02-14"},{"lineNumber":145,"author":{"gitId":"sarjinius"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"sarjinius"},"content":"            throw new VirtueDateTimeException(\"to\", \"event\");","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"sarjinius":149}},{"path":"src/main/java/virtue/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import java.io.File;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"/** Contains the methods needed to load a task list from a file and save a task list to a file. */","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"public class Storage {","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"    private final File directory \u003d new File(\"data\");","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"    private final File file \u003d new File(\"data/virtue.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"     * Loads the task list from the designated file.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"     * @return The task list saved in the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"     * @throws VirtueDateTimeException If a date in one of the tasks is invalid or in the wrong format.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"    public VirtueTaskList loadTaskList() throws VirtueDateTimeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"        VirtueTaskList taskList \u003d new VirtueTaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"            directory.mkdir();","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"        assert directory.exists() : \"directory should be created if it does not exist\";","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"                System.out.println(\"OOPS! An error occurred while creating the file: \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"        assert file.exists() : \"file should be created if it does not exist\";","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"sarjinius"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"sarjinius"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"sarjinius"},"content":"                taskList.addFromFile(sc.nextLine());","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"sarjinius"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"sarjinius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"sarjinius"},"content":"            System.out.println(\"OOPS! An error occurred while reading the file: \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"sarjinius"},"content":"        return taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"sarjinius"},"content":"     * Saves the task list to the designated file.","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"sarjinius"},"content":"     * @param taskList The task list to be saved.","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"sarjinius"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"sarjinius"},"content":"    public void saveToFile(VirtueTaskList taskList) throws IOException {","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"sarjinius"},"content":"        FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"sarjinius"},"content":"        fileWriter.write(taskList.fileFormat());","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"sarjinius"},"content":"        fileWriter.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":61}},{"path":"src/main/java/virtue/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"/** Represents a todo task. */","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"public class Todo extends VirtueTask {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"    public String fileFormat() {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"        return \"T | \" + super.fileFormat();","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":18}},{"path":"src/main/java/virtue/UnknownCommandTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"public class UnknownCommandTypeException extends VirtueException {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"    public UnknownCommandTypeException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":7}},{"path":"src/main/java/virtue/Virtue.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"public class Virtue {","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"    /** The storage that handles file reading and writing. */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"    /** The task list to be used by the chatbot. */","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"    private VirtueTaskList tasks;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"    /** True if chatbot is commanded to exit and false otherwise. */","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"    public boolean isExit;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"    /** Creates a new Virtue class instance. */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"    public Virtue() {","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"     * Adds an indention to the string.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"     * @param str The string to be indented.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"     * @return The indented string.","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"    protected static String indent(String str) {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"        return \"    \" + str;","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e master","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"     * Greets the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"     * @return The greeting message.","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"sarjinius"},"content":"    public String greet() {","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"sarjinius"},"content":"        return \"Hello! I\u0027m Virtue.\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"sarjinius"},"content":"     * Exits with a goodbye message.","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"sarjinius"},"content":"     * @return The goodbye message.","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"sarjinius"},"content":"    private String bye() {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"sarjinius"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"sarjinius"},"content":"    /** Runs the chatbot. */","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"sarjinius"},"content":"    protected void initialize() {","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"sarjinius"},"content":"            tasks \u003d storage.loadTaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"sarjinius"},"content":"        } catch (VirtueDateTimeException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"sarjinius"},"content":"            System.out.println(\"OOPS! There is a date not in the correct format.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"sarjinius"},"content":"     * Generates a response to user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"sarjinius"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"sarjinius"},"content":"        Command currentCommand;","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"sarjinius"},"content":"            currentCommand \u003d new Command(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"sarjinius"},"content":"        } catch (VirtueException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"sarjinius"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"sarjinius"},"content":"        if (currentCommand.isBye()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"sarjinius"},"content":"            isExit \u003d true;","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"sarjinius"},"content":"            return bye();","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"sarjinius"},"content":"            tasks.applyCommand(currentCommand);","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"sarjinius"},"content":"            String message \u003d currentCommand.getResultMessage();","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"sarjinius"},"content":"            assert message !\u003d null : \"message should not be null\";","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"sarjinius"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"sarjinius"},"content":"            return message;","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"sarjinius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"sarjinius"},"content":"            return \"OOPS! An error occurred while taking the inputs: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"sarjinius":88}},{"path":"src/main/java/virtue/VirtueDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"/** Represents a date and time for tasks in the chatbot. */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"public class VirtueDateTime {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"     * Creates a date/time object from the string input.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"     * @param str The date/time in ISO_LOCAL_DATE_TIME format.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"     * @throws DateTimeParseException If not a valid date/time or not in the correct format.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"    public VirtueDateTime(String str) throws DateTimeParseException {","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"        dateTime \u003d LocalDateTime.parse(str);","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"     * Generates the string representation when the task","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"     * containing this object is printed to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"     * @return The string representation when the task is printed to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"     * Generates the string representation when the","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"     * task containing this object is saved to the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"     * @return The string representation when the task is saved to the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"    public String fileFormat() {","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"sarjinius"},"content":"        return dateTime.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"sarjinius":41}},{"path":"src/main/java/virtue/VirtueDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"public class VirtueDateTimeException extends VirtueException {","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"    public VirtueDateTimeException(String dateType, String type) {","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"        super(\"The \\\"\" + dateType + \"\\\" date of a \" + type","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"                + \" command must be in a valid date and time format.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"sarjinius":8}},{"path":"src/main/java/virtue/VirtueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"// Exceptions unique to Virtue.","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"public class VirtueException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"    public VirtueException(String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"        super(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":8}},{"path":"src/main/java/virtue/VirtueTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"/** Represents a task that can be handled by the chatbot. */","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"public abstract class VirtueTask {","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"    /** The description of the task. */","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"    private String description;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"    /** An indicator whether the task is done or not. */","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"     * Creates a new task, by default, it is not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"    public VirtueTask(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"     * Retrieves the status icon of the task, X if done, none if not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"     * @return Status icon of task.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"    /** Marks the task as done. */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"    /** Marks the task as not done. */","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"sarjinius"},"content":"     * Checks if the task\u0027s description contains a keyword or not.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"sarjinius"},"content":"     * @param keyword The keyword to be searched in the description.","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"sarjinius"},"content":"     * @return True if the description contains the keyword, and false if not.","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"sarjinius"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"sarjinius"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"sarjinius"},"content":"     * Retrieves the string representation of this task","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"sarjinius"},"content":"     * to be used for printing the list.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"sarjinius"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"sarjinius"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"sarjinius"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"sarjinius"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"sarjinius"},"content":"     * Retrieves the string representation of this task","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"sarjinius"},"content":"     * to be used for saving the task in a file.","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"sarjinius"},"content":"     * @return The file format of this task.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"sarjinius"},"content":"    public String fileFormat() {","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"sarjinius"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"sarjinius"},"content":"            return \"1 | \" + description;","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"sarjinius"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"sarjinius"},"content":"            return \"0 | \" + description;","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":74}},{"path":"src/main/java/virtue/VirtueTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"import java.util.List;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"/** A task list used in this chatbot. */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"public class VirtueTaskList {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"    private List\u003cVirtueTask\u003e tasks;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"    /** Creates a new task list. */","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"    public VirtueTaskList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"    protected int numTasks() {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"     * Gets the i-th task in the task list, where i is the index input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"     * @param index The index input by the user (starts from 1 and not 0).","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"     * @return The i-th task in the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"    private VirtueTask getTask(int index) {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"     * Adds a todo task to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"     * @param description The description of the todo task to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"sarjinius"},"content":"     * @return The message to be sent to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"sarjinius"},"content":"    private String addTodo(String description) {","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"sarjinius"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"sarjinius"},"content":"        tasks.add(todo);","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"sarjinius"},"content":"        int numTasks \u003d numTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"sarjinius"},"content":"        String sOrNone \u003d numTasks \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"sarjinius"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"   \" + todo + \"\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Now you have \" + numTasks + \" task\" + sOrNone + \" in the list.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"sarjinius"},"content":"        return message;","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"sarjinius"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"sarjinius"},"content":"     * @param description The description of the deadline task to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"sarjinius"},"content":"     * @param by The date/time for the task to be completed.","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"sarjinius"},"content":"     * @return The message to be sent to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"sarjinius"},"content":"    private String addDeadline(String description, VirtueDateTime by) {","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"sarjinius"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"sarjinius"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"sarjinius"},"content":"        int numTasks \u003d numTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"sarjinius"},"content":"        String sOrNone \u003d numTasks \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"sarjinius"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"   \" + deadline + \"\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Now you have \" + numTasks + \" task\" + sOrNone + \" in the list.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"sarjinius"},"content":"        return message;","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"sarjinius"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"sarjinius"},"content":"     * @param description The description of the event task to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"sarjinius"},"content":"     * @param from The date/time of the start of the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"sarjinius"},"content":"     * @param to The date/time of the end of the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"sarjinius"},"content":"     * @return The message to be sent to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"sarjinius"},"content":"    private String addEvent(String description, VirtueDateTime from, VirtueDateTime to) {","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"sarjinius"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"sarjinius"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"sarjinius"},"content":"        int numTasks \u003d numTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"sarjinius"},"content":"        String sOrNone \u003d numTasks \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"sarjinius"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"   \" + event + \"\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Now you have \" + numTasks + \" task\" + sOrNone + \" in the list.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"sarjinius"},"content":"        return message;","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"sarjinius"},"content":"     * Marks the i-th task in the task list as done, where i is the index input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"sarjinius"},"content":"     * @param index The index input by the user (starts from 1 and not 0).","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"sarjinius"},"content":"     * @return The message to be sent to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"sarjinius"},"content":"    private String markTaskAsDone(int index) {","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"sarjinius"},"content":"        VirtueTask task \u003d getTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"sarjinius"},"content":"        task.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"sarjinius"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"   \" + task;","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"sarjinius"},"content":"        return message;","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"sarjinius"},"content":"     * Marks the i-th task in the task list as not done, where i is the index input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"sarjinius"},"content":"     * @param index The index input by the user (starts from 1 and not 0).","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"sarjinius"},"content":"     * @return The message to be sent to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"sarjinius"},"content":"    private String markTaskAsNotDone(int index) {","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"sarjinius"},"content":"        VirtueTask task \u003d getTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"sarjinius"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"sarjinius"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"   \" + task;","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"sarjinius"},"content":"        return message;","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"sarjinius"},"content":"     * Prints out the task list with all the tasks contained in it.","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"sarjinius"},"content":"     * @return The message to be sent to the user, including the task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"sarjinius"},"content":"    protected String printOut() {","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"sarjinius"},"content":"        int numOfTasks \u003d tasks.size();","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"sarjinius"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"sarjinius"},"content":"        for (int index \u003d 1; index \u003c\u003d numOfTasks; index++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"sarjinius"},"content":"            message +\u003d \" \" + index + \".\" + tasks.get(index - 1);","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"sarjinius"},"content":"            if (index \u003c numOfTasks) {","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"sarjinius"},"content":"                message +\u003d \"\\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"sarjinius"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"sarjinius"},"content":"        return message;","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"sarjinius"},"content":"     * Deletes the i-th task in the task list, where i is the index input by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"sarjinius"},"content":"     * @param index The index input by the user (starts from 1 and not 0).","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"sarjinius"},"content":"     * @return The message to be sent to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"sarjinius"},"content":"    private String deleteTask(int index) {","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"sarjinius"},"content":"        VirtueTask deletedTask \u003d tasks.remove(index - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"sarjinius"},"content":"        int numTasks \u003d numTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"sarjinius"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":154,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"   \" + deletedTask + \"\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":155,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Now you have \" + numTasks + \" tasks in the list.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":156,"author":{"gitId":"sarjinius"},"content":"        return message;","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":160,"author":{"gitId":"sarjinius"},"content":"     * Prints the tasks in the list that contains a certain keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":161,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"sarjinius"},"content":"     * @param keyword The keyword to filter the list with.","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"sarjinius"},"content":"     * @return The message to be sent to the user, including the tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":164,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"sarjinius"},"content":"    private String printTasksWithWord(String keyword) {","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"sarjinius"},"content":"        int numOfTasks \u003d tasks.size();","lastModifiedDate":"2024-02-16"},{"lineNumber":167,"author":{"gitId":"sarjinius"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"sarjinius"},"content":"        message +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":169,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":170,"author":{"gitId":"sarjinius"},"content":"        for (int index \u003d 1; index \u003c\u003d numOfTasks; index++) {","lastModifiedDate":"2024-02-16"},{"lineNumber":171,"author":{"gitId":"sarjinius"},"content":"            if (getTask(index).hasKeyword(keyword)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":172,"author":{"gitId":"sarjinius"},"content":"                message +\u003d \" \" + index + \".\" + tasks.get(index - 1);","lastModifiedDate":"2024-02-25"},{"lineNumber":173,"author":{"gitId":"sarjinius"},"content":"                if (index \u003c numOfTasks) {","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"sarjinius"},"content":"                    message +\u003d \"\\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"sarjinius"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":176,"author":{"gitId":"sarjinius"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":177,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":178,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":179,"author":{"gitId":"sarjinius"},"content":"        return message;","lastModifiedDate":"2024-02-20"},{"lineNumber":180,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":181,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":182,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"sarjinius"},"content":"     * Executes the command on this task list and","lastModifiedDate":"2024-02-25"},{"lineNumber":184,"author":{"gitId":"sarjinius"},"content":"     * loads the result message into the command.","lastModifiedDate":"2024-02-25"},{"lineNumber":185,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":186,"author":{"gitId":"sarjinius"},"content":"     * @param command The command to be executed on this task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":187,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"sarjinius"},"content":"    public void applyCommand(Command command) {","lastModifiedDate":"2024-02-25"},{"lineNumber":189,"author":{"gitId":"sarjinius"},"content":"        String message;","lastModifiedDate":"2024-02-20"},{"lineNumber":190,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":191,"author":{"gitId":"sarjinius"},"content":"        switch (command.type) {","lastModifiedDate":"2024-02-12"},{"lineNumber":192,"author":{"gitId":"sarjinius"},"content":"        case LIST:","lastModifiedDate":"2024-02-12"},{"lineNumber":193,"author":{"gitId":"sarjinius"},"content":"            message \u003d printOut();","lastModifiedDate":"2024-02-20"},{"lineNumber":194,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":195,"author":{"gitId":"sarjinius"},"content":"        case MARK:","lastModifiedDate":"2024-02-12"},{"lineNumber":196,"author":{"gitId":"sarjinius"},"content":"            message \u003d markTaskAsDone(command.index);","lastModifiedDate":"2024-02-20"},{"lineNumber":197,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":198,"author":{"gitId":"sarjinius"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-12"},{"lineNumber":199,"author":{"gitId":"sarjinius"},"content":"            message \u003d markTaskAsNotDone(command.index);","lastModifiedDate":"2024-02-20"},{"lineNumber":200,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":201,"author":{"gitId":"sarjinius"},"content":"        case DELETE:","lastModifiedDate":"2024-02-12"},{"lineNumber":202,"author":{"gitId":"sarjinius"},"content":"            message \u003d deleteTask(command.index);","lastModifiedDate":"2024-02-20"},{"lineNumber":203,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":204,"author":{"gitId":"sarjinius"},"content":"        case TODO:","lastModifiedDate":"2024-02-12"},{"lineNumber":205,"author":{"gitId":"sarjinius"},"content":"            message \u003d addTodo(command.description);","lastModifiedDate":"2024-02-20"},{"lineNumber":206,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":207,"author":{"gitId":"sarjinius"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-12"},{"lineNumber":208,"author":{"gitId":"sarjinius"},"content":"            message \u003d addDeadline(command.description, command.by);","lastModifiedDate":"2024-02-20"},{"lineNumber":209,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":210,"author":{"gitId":"sarjinius"},"content":"        case EVENT:","lastModifiedDate":"2024-02-12"},{"lineNumber":211,"author":{"gitId":"sarjinius"},"content":"            message \u003d addEvent(command.description, command.from, command.to);","lastModifiedDate":"2024-02-20"},{"lineNumber":212,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":213,"author":{"gitId":"sarjinius"},"content":"        default: // case FIND:","lastModifiedDate":"2024-02-16"},{"lineNumber":214,"author":{"gitId":"sarjinius"},"content":"            message \u003d printTasksWithWord(command.description);","lastModifiedDate":"2024-02-20"},{"lineNumber":215,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":216,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":217,"author":{"gitId":"sarjinius"},"content":"        assert message !\u003d null : \"message should not be null\";","lastModifiedDate":"2024-02-24"},{"lineNumber":218,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":219,"author":{"gitId":"sarjinius"},"content":"        command.setResultMessage(message);","lastModifiedDate":"2024-02-25"},{"lineNumber":220,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":221,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":222,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":223,"author":{"gitId":"sarjinius"},"content":"     * Adds a task to the task list from a line in the saved file.","lastModifiedDate":"2024-02-15"},{"lineNumber":224,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":225,"author":{"gitId":"sarjinius"},"content":"     * @param str A specific line from the saved file.","lastModifiedDate":"2024-02-15"},{"lineNumber":226,"author":{"gitId":"sarjinius"},"content":"     * @throws VirtueDateTimeException If dates in a deadline/event file are not in the correct format.","lastModifiedDate":"2024-02-15"},{"lineNumber":227,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":228,"author":{"gitId":"sarjinius"},"content":"    public void addFromFile(String str) throws VirtueDateTimeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":229,"author":{"gitId":"sarjinius"},"content":"        String taskType \u003d str.split(\" \\\\| \")[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":230,"author":{"gitId":"sarjinius"},"content":"        String description \u003d str.split(\" \\\\| \")[2];","lastModifiedDate":"2024-02-12"},{"lineNumber":231,"author":{"gitId":"sarjinius"},"content":"        int marked \u003d Integer.parseInt(str.split(\" \\\\| \")[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":232,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":233,"author":{"gitId":"sarjinius"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-12"},{"lineNumber":234,"author":{"gitId":"sarjinius"},"content":"        case \"T\":","lastModifiedDate":"2024-02-12"},{"lineNumber":235,"author":{"gitId":"sarjinius"},"content":"            tasks.add(new Todo(description));","lastModifiedDate":"2024-02-15"},{"lineNumber":236,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":237,"author":{"gitId":"sarjinius"},"content":"        case \"D\":","lastModifiedDate":"2024-02-12"},{"lineNumber":238,"author":{"gitId":"sarjinius"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":239,"author":{"gitId":"sarjinius"},"content":"                VirtueDateTime dateTime \u003d new VirtueDateTime(str.split(\" \\\\| \")[3]);","lastModifiedDate":"2024-02-14"},{"lineNumber":240,"author":{"gitId":"sarjinius"},"content":"                tasks.add(new Deadline(description, dateTime));","lastModifiedDate":"2024-02-15"},{"lineNumber":241,"author":{"gitId":"sarjinius"},"content":"                break;","lastModifiedDate":"2024-02-12"},{"lineNumber":242,"author":{"gitId":"sarjinius"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":243,"author":{"gitId":"sarjinius"},"content":"                throw new VirtueDateTimeException(\"by\", \"deadline\");","lastModifiedDate":"2024-02-14"},{"lineNumber":244,"author":{"gitId":"sarjinius"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":245,"author":{"gitId":"sarjinius"},"content":"        default: // case \"E\":","lastModifiedDate":"2024-02-16"},{"lineNumber":246,"author":{"gitId":"sarjinius"},"content":"            VirtueDateTime fromDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":247,"author":{"gitId":"sarjinius"},"content":"            VirtueDateTime toDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":248,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":249,"author":{"gitId":"sarjinius"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":250,"author":{"gitId":"sarjinius"},"content":"                fromDateTime \u003d new VirtueDateTime(str.split(\" \\\\| \")[3]);","lastModifiedDate":"2024-02-14"},{"lineNumber":251,"author":{"gitId":"sarjinius"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":252,"author":{"gitId":"sarjinius"},"content":"                throw new VirtueDateTimeException(\"from\", \"event\");","lastModifiedDate":"2024-02-14"},{"lineNumber":253,"author":{"gitId":"sarjinius"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":254,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":255,"author":{"gitId":"sarjinius"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":256,"author":{"gitId":"sarjinius"},"content":"                toDateTime \u003d new VirtueDateTime(str.split(\" \\\\| \")[4]);","lastModifiedDate":"2024-02-14"},{"lineNumber":257,"author":{"gitId":"sarjinius"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":258,"author":{"gitId":"sarjinius"},"content":"                throw new VirtueDateTimeException(\"to\", \"event\");","lastModifiedDate":"2024-02-14"},{"lineNumber":259,"author":{"gitId":"sarjinius"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":260,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":261,"author":{"gitId":"sarjinius"},"content":"            tasks.add(new Event(description, fromDateTime, toDateTime));","lastModifiedDate":"2024-02-15"},{"lineNumber":262,"author":{"gitId":"sarjinius"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":263,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":264,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":265,"author":{"gitId":"sarjinius"},"content":"        if (marked \u003d\u003d 1) {","lastModifiedDate":"2024-02-12"},{"lineNumber":266,"author":{"gitId":"sarjinius"},"content":"            getTask(numTasks()).markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":267,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":268,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":269,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":270,"author":{"gitId":"sarjinius"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":271,"author":{"gitId":"sarjinius"},"content":"     * Creates the string to be saved in a file.","lastModifiedDate":"2024-02-15"},{"lineNumber":272,"author":{"gitId":"sarjinius"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":273,"author":{"gitId":"sarjinius"},"content":"     * @return The concatenation of all fileFormat strings of all tasks in the list","lastModifiedDate":"2024-02-16"},{"lineNumber":274,"author":{"gitId":"sarjinius"},"content":"     *     with each task separated by a line break.","lastModifiedDate":"2024-02-15"},{"lineNumber":275,"author":{"gitId":"sarjinius"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":276,"author":{"gitId":"sarjinius"},"content":"    public String fileFormat() {","lastModifiedDate":"2024-02-12"},{"lineNumber":277,"author":{"gitId":"sarjinius"},"content":"        String str \u003d \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":278,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":279,"author":{"gitId":"sarjinius"},"content":"        if (numTasks() \u003d\u003d 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":280,"author":{"gitId":"sarjinius"},"content":"            return str;","lastModifiedDate":"2024-02-12"},{"lineNumber":281,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":282,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":283,"author":{"gitId":"sarjinius"},"content":"        for (int i \u003d 1; i \u003c\u003d numTasks() - 1; i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":284,"author":{"gitId":"sarjinius"},"content":"            str +\u003d getTask(i).fileFormat();","lastModifiedDate":"2024-02-12"},{"lineNumber":285,"author":{"gitId":"sarjinius"},"content":"            str +\u003d System.lineSeparator();","lastModifiedDate":"2024-02-12"},{"lineNumber":286,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":287,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":288,"author":{"gitId":"sarjinius"},"content":"        str +\u003d getTask(numTasks()).fileFormat();","lastModifiedDate":"2024-02-12"},{"lineNumber":289,"author":{"gitId":"sarjinius"},"content":"        return str;","lastModifiedDate":"2024-02-12"},{"lineNumber":290,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":291,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"sarjinius":291}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"sarjinius":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"virtue.MainWindow\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"sarjinius":19}},{"path":"src/test/java/virtue/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"    public void todoToStringTest() {","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"        Todo todo \u003d new Todo(\"Finish this.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"        assertEquals(todo.toString(), \"[T][ ] Finish this.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"        assertEquals(todo.toString(), \"[T][X] Finish this.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"    public void fileFormatTest() {","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"        Todo todo \u003d new Todo(\"Do your job.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"        assertEquals(todo.fileFormat(), \"T | 0 | Do your job.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"        assertEquals(todo.fileFormat(), \"T | 1 | Do your job.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"sarjinius":23}},{"path":"src/test/java/virtue/VirtueTaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"package virtue;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"public class VirtueTaskListTest {","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"    public void numTasksTest() {","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"        VirtueTaskList taskList \u003d new VirtueTaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"        assertEquals(taskList.numTasks(), 0);","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"        Command command;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"sarjinius"},"content":"            command \u003d new Command(\"event Possible /from 2024-08-23T12:00:00 /to 2024-08-24T08:24:00\");","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"sarjinius"},"content":"            taskList.applyCommand(command);","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"sarjinius"},"content":"            assertEquals(taskList.numTasks(), 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"sarjinius"},"content":"            command \u003d new Command(\"delete 1\");","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"sarjinius"},"content":"            taskList.applyCommand(command);","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"sarjinius"},"content":"            assertEquals(taskList.numTasks(), 0);","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"sarjinius"},"content":"        } catch (VirtueException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"sarjinius"},"content":"            fail();","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"sarjinius"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"sarjinius"},"content":"    public void addFromFileTest() {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"sarjinius"},"content":"        VirtueTaskList taskList \u003d new VirtueTaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"sarjinius"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"sarjinius"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"sarjinius"},"content":"            taskList.addFromFile(\"D | 1 | Bring the goods  | 2025-02-13T12:00\");","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"sarjinius"},"content":"            String expectedFileFormat \u003d \"D | 1 | Bring the goods  | 2025-02-13T12:00\";","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"sarjinius"},"content":"            assertEquals(taskList.fileFormat(), expectedFileFormat);","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"sarjinius"},"content":"        } catch (VirtueException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"sarjinius"},"content":"            fail();","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"sarjinius"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"sarjinius"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"sarjinius"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"sarjinius":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sarjinius"},"content":"todo read book","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sarjinius"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sarjinius"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sarjinius"},"content":"mark 1","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"sarjinius"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"sarjinius"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"sarjinius"},"content":"unmark 1","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"sarjinius"},"content":"mark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"sarjinius"},"content":"todo join sports club","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"sarjinius"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"sarjinius"},"content":"mark 4","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"sarjinius"},"content":"todo borrow book","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"sarjinius"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"sarjinius"},"content":"bye","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"sarjinius":14}}]
