[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"# edgar.Duke project template","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"3. After that, locate the `src/main/java/edgar.Duke.java` file, right-click it, and choose `Run edgar.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"h4ow3i":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"checkstyle {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"h4ow3i":21,"-":41}},{"path":"data/duke/.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"T| 0 | ","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"T| 0 | ","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"T| 0 | ","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"T| 0 | ","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":4}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"     * Executes the command to exit the program.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     * @param storage The storage component.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * @return A user command indicating the program is exiting.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"        ui.printByeMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"        return new UserCommand(\"Exiting the program...\");","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":25}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":" * The Command abstract class represents a command in the chatbot application.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" * All specific commands should extend this class and provide their implementation of the execute method.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     * @param ui      The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * @param storage The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    public abstract UserCommand execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":21}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" * Extends the Command class and implements the execute method to execute the command.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    private String taskDescription;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    private LocalDateTime due;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a DeadlineCommand object with the given task description and due date.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"     * @param taskDescription The description of the deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"     * @param due             The due date and time of the deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    public DeadlineCommand(String taskDescription, LocalDateTime due) {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"        this.due \u003d due;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * Executes the deadline command by creating a new Deadline task with the given description and due date,","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     * adding it to the task list, and saving the updated task list to storage.","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing the current tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"     * @param ui       The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"     * @param storage  The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"     * @return A UserCommand indicating the addition of the deadline task and its summary.","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        Deadline deadline \u003d new Deadline(this.taskDescription, this.due);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"        return new UserCommand(\"\\tGot it. I\u0027ve added this task: \",","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"                \"\\t\" + deadline, taskList.getTaskSummary());","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":47}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import exceptions.ChatBotException;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" * Extends the Command class and implements the execute method to execute the command.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    private int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a DeleteCommand object with the given index.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"     * Executes the delete command by deleting the task at the specified index from the task list,","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"     * and saving the updated task list to storage. Handles any exceptions that may occur during the process.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing the current tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     * @param ui       The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"     * @param storage  The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"     * @return A UserCommand indicating the success or failure of the deletion operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"            Task task \u003d taskList.deleteTask(this.index);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"            storage.saveToFile(taskList);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"            return new UserCommand(\"\\tNoted. I\u0027ve removed this task: \" + \"\\n\" + \"\\t\"","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"                    + task, taskList.getTaskSummary());","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        } catch (ChatBotException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"            return new UserCommand(\"\\tOops! Number entered does not exist in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":46}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" * Extends the Command class and implements the execute method to execute the command.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    private String event;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     * Constructs an EventCommand object with the given event description, start date and time, and end date and time.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"     * @param event Description of the event task.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"     * @param start Start date and time of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"     * @param end   End date and time of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    public EventCommand(String event, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"        this.event \u003d event;","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"     * Executes the event command by creating an Event object with the specified details,","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"     * adding it to the task list, and saving the updated task list to storage.","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing the current tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"     * @param ui       The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"     * @param storage  The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"     * @return A UserCommand indicating the success of the event addition operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"        Event event \u003d new Event(this.event, this.start, this.end);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"        return new UserCommand(\"\\tGot it. I\u0027ve added this task: \"","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"                , \"\\t\" + event, taskList.getTaskSummary());","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":49}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import exceptions.ChatBotException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" * Represents a command to find tasks with a specific description.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" * Extends the Command class and implements the execute method to execute the command.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    private String taskDescription;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a FindCommand object with the specified task description to search for.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * @param taskDescription The description of the task to search for.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    public FindCommand(String taskDescription) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     * Executes the find command to search for tasks with the specified description.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing the current tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"     * @param ui       The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"     * @param storage  The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * @return A UserCommand containing the list of tasks matching the description, or an error message if no matches are found.","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"            TaskList matchingTasks \u003d taskList.findTasks(this.taskDescription);","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"            return new UserCommand(\"\\tHere are the matching tasks in your list: \", matchingTasks.listTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"        } catch (ChatBotException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"            return new UserCommand(\"\\tOops! No matching tasks found.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":41}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":" * Represents a command that is invalid or not recognized by the chatbot.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" * Extends the Command class and implements the execute method to handle the invalid command.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    public String message;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * Constructs an InvalidCommand object with the specified error message.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * @param message The error message indicating the reason for the invalid command.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    public InvalidCommand(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     * Executes the invalid command by printing the error message to the user interface.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing the current tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"     * @param ui       The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"     * @param storage  The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * @return A UserCommand containing the error message.","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"        ui.printMessage(this.message);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        return new UserCommand(\"\\t\" + this.message);","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":38}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":" * Represents a command to list all tasks stored in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" * Extends the Command class and implements the execute method to perform the listing operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"     * Executes the command to list all tasks stored in the task list by calling the listTasks method of TaskList.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing the current tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     * @param ui       The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * @param storage  The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     * @return A UserCommand containing the list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"        return new UserCommand(\"\\tHere are the tasks in your list: \\n\" + taskList.listTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":26}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import exceptions.ChatBotException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" * Extends the Command class and implements the execute method to perform the marking operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    private int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a MarkCommand with the specified task index to mark as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     * Executes the command to mark the task at the specified index as done by calling the markTask method of TaskList.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     * If an error occurs during the marking process, it catches the ChatBotException and prints an error message.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing the current tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"     * @param ui       The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * @param storage  The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     * @return A UserCommand indicating the result of the marking operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"            taskList.markTask(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"            storage.saveToFile(taskList);","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"            return new UserCommand(\"\\tNice! I\u0027ve marked this task as done:\", \"\\t\"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"                    + taskList.getTaskIndex(this.index - 1));","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        } catch (ChatBotException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"            return new UserCommand(\"\\tOops! Number entered does not exist in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":44}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" * Represents a command to add a new ToDo task to the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" * Extends the Command class and implements the execute method to perform the addition operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    private String taskDescription;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a TodoCommand with the specified description for the ToDo task.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * @param taskDescription The description of the ToDo task to be added.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    public TodoCommand(String taskDescription) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     * Executes the command to add a new ToDo task to the task list by creating a new ToDo object,","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     * adding it to the TaskList, and then saving the updated task list to the storage.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing the current tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"     * @param ui       The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * @param storage  The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     * @return A UserCommand indicating the result of the addition operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        ToDo todo \u003d new ToDo(this.taskDescription);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"        return new UserCommand(\"\\tGot it. I\u0027ve added this task: \",","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"                \"\\t\" + todo, taskList.getTaskSummary());","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":41}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import exceptions.ChatBotException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" * Represents a command to mark a task as not done in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" * Extends the Command class and implements the execute method to perform the unmarking operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    private int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * Constructs an UnmarkCommand with the specified index of the task to be unmarked.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     * Executes the command to mark a task as not done in the task list by calling the unmarkTask method","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     * in the TaskList, then saving the updated task list to the storage.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing the current tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"     * @param ui       The Ui instance for user interaction and output.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * @param storage  The Storage instance for saving tasks or loading data.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     * @return A UserCommand indicating the result of the unmarking operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"            taskList.unmarkTask(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"            storage.saveToFile(taskList);","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"            return new UserCommand(\"\\tOK, I\u0027ve marked this task as not done yet:\", \"\\t\"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"                    + taskList.getTaskIndex(this.index - 1));","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        } catch (ChatBotException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"            return new UserCommand(\"\\tOops! Number entered does not exist in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":44}},{"path":"src/main/java/commands/UserCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":" * Represents a command response intended for the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"public class UserCommand {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"    private final String messageToUser;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a UserCommand object with the given message arguments.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"     * @param args The message arguments to be concatenated.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand(String... args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"        String concatenatedArgs \u003d \"\";","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"        for (String arg : args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"            concatenatedArgs +\u003d arg + \"\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"        this.messageToUser \u003d concatenatedArgs;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"     * Gets the message intended for the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     * @return The message to be displayed to the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    public String getMessageToUser() {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"        return this.messageToUser;","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":30}},{"path":"src/main/java/edgar/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package edgar;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"    private void flip() {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"    public static DialogBox getEdgarDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"h4ow3i"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"h4ow3i"},"content":"        db.flip();","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"h4ow3i"},"content":"        return db;","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":60}},{"path":"src/main/java/edgar/EdgarChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package edgar;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import commands.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import util.Parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import util.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import util.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import commands.UserCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":" * The EdgarChatBot class represents a simple chatbot application that manages tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":" * It utilizes TaskList, Storage, Ui, and Parser for various functionalities.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"public class EdgarChatBot {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a new EdgarChatBot object.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"     * Initializes the task list, storage, user interface, and parser.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"    public EdgarChatBot() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"            storage.loadFromFile(this.taskList);","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"            System.out.println(\"Oops! There was an error loading the task list from file.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"     * Processes the user input and returns the corresponding UserCommand.","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"     * @return The UserCommand representing the response to the user input.","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"    public UserCommand commandResult(String userInput) {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"        Command command \u003d this.parser.parseCommand(userInput);","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"        return command.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":47}},{"path":"src/main/java/edgar/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package edgar;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":" * The Launcher class provides a main method to launch the JavaFX application.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":" * It starts the application by calling the start method of the Main class.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"public class Launcher {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"     * The main entry point for launching the JavaFX application.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"     * @param args Command-line arguments passed to the application (not used).","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":19}},{"path":"src/main/java/edgar/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package edgar;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" * A JavaFX application class representing the GUI for Edgar using FXML.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    private EdgarChatBot edgar \u003d new EdgarChatBot();","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * The main entry point for the JavaFX application.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEdgarChatBot(edgar);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"            stage.show();","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":35}},{"path":"src/main/java/edgar/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package edgar;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"import commands.UserCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":" * The MainWindow class serves as the controller for the main window of the chatbot application.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":" * It provides the layout for the various controls and handles user input.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    private EdgarChatBot edgar;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Brawl_Leon.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    private Image edgarImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Edgar_Portrait.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"     * Initializes the main window controller.","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"     * Sets up the initial dialog in the dialog container.","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"                DialogBox.getEdgarDialog(\"\\tWelcome! What do you want to do today?\", edgarImage)","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        );","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"     * Sets the EdgarChatBot instance for the controller.","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"     * @param edgar The EdgarChatBot instance to be set.","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"    public void setEdgarChatBot(EdgarChatBot edgar) {","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"        this.edgar \u003d edgar;","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"     * Handles the user input by processing it and displaying the corresponding responses.","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"     * Clears the user input field after processing.","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"h4ow3i"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"h4ow3i"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"            String input \u003d userInput.getText() + \" \\t\"; // Adding space to prevent empty input","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"            UserCommand userCommand \u003d this.edgar.commandResult(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"h4ow3i"},"content":"            String response \u003d userCommand.getMessageToUser();","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"h4ow3i"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"                    DialogBox.getEdgarDialog(response, edgarImage)","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"h4ow3i"},"content":"            );","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"h4ow3i"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"h4ow3i"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"h4ow3i"},"content":"            DialogBox.getEdgarDialog(e.getMessage(), edgarImage);","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":71}},{"path":"src/main/java/exceptions/ChatBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package exceptions;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":" * Represents an exception specific to the chatbot application.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"public class ChatBotException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a ChatBotException with the specified error message.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"     * @param errorMessage The error message describing the exception.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    public ChatBotException(String errorMessage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"        super(\"____________________________________________________________\" + \"\\n\"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"                + \"\\t\" + errorMessage + \"\\n\" + \"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"h4ow3i":17}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":" * It extends the Task class and adds functionality to store and format the deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"     * @return A string containing the task type, description, and deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"                deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy | hh:mm a\")) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"     * Returns a string representation of the Deadline object for saving to file.","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"     * @return A string containing the task type, description, and deadline in a format suitable for file storage.","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"    public String toStringForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        return \"D\" + super.toStringForFile() + \" | \" + this.deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"h4ow3i":44}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":" * The Event class represents a task with a start and end time.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":" * It extends the Task class and adds functionality to store and format the event details.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"     * Constructs an Event object with the specified event description, start time, and end time.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     * @param event The description of the event task.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * @param start The start time of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     * @param end   The end time of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    public Event(String event, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"        super(event);","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * @return A string containing the task type, description, start time, and end time.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"        return \"[E]\" + super.toString() + \" (from: \" +","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"                start.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy | hh:mm a\")) +","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"                \" to: \" + end.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy | hh:mm a\")) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"     * Returns a string representation of the Event object for saving to file.","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"     * @return A string containing the task type, description, start time, and end time in a format suitable for file storage.","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"    public String toStringForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"        return \"E\" + super.toStringForFile() + \" | \" + this.start + \" to \" + this.end;","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"h4ow3i":48}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":" * Represents a task with a description and a status of completion.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"     * @return The status icon, \"X\" if task is done, \" \" if not.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        return this.description;","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"h4ow3i"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"     * Returns a string representation of the task for storing in a file.","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"h4ow3i"},"content":"     * @return A string representing the task for file storage.","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"h4ow3i"},"content":"    public String toStringForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"h4ow3i"},"content":"        return \"| \" + (this.isDone ? \"1\": \"0\") + \" | \" + this.description;","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"h4ow3i":70}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":" * The ToDo class represents a task without any specific deadline or time requirement.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":" * It extends the Task class and inherits its methods to manipulate and represent the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a ToDo object with the specified name.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"     * @param name The name or description of the ToDo task.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"        super(name);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"     * @return A string containing the task\u0027s status icon and description, prefixed with \"[T]\".","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"     * Returns a string representation of the ToDo task for saving to file.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     * @return A string containing the task\u0027s status (0 for not done, 1 for done) and description, prefixed with \"T\".","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"    public String toStringForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        return \"T\" + super.toStringForFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"h4ow3i":37}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package util;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import commands.*;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import exceptions.ChatBotException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":" * Parses user input to create commands for executing various actions in the task manager.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"public class Parser {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     * Parses the first word of the input to determine the command to execute.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"     * @return A command object corresponding to the input.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"        String[] sections \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"        String commandWord \u003d sections[0].toUpperCase();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"        case \"BYE\":","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"        case \"TODO\":","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"            return parseTodo(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"        case \"MARK\":","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"            return parseMark(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"        case \"UNMARK\":","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"            return parseUnmark(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"        case \"LIST\":","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        case \"DELETE\":","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"            return parseDelete(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"            return parseDeadline(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"        case \"EVENT\":","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"            return parseEvent(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"        case \"FIND\":","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"            return parseFind(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a valid command.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"     * Parses the input string to create a command for adding a Todo task.","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"h4ow3i"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"h4ow3i"},"content":"     * @return A command object for adding a Todo task based on the input.","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"    public static Command parseTodo(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"        String[] sections \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"h4ow3i"},"content":"            if (sections.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"h4ow3i"},"content":"                return new InvalidCommand(\"Oops! You have not entered a task.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"        String taskDescription \u003d sections[1].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"h4ow3i"},"content":"        return new TodoCommand(taskDescription);","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"h4ow3i"},"content":"     * Parses the input string to create a command for marking a task as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"h4ow3i"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"h4ow3i"},"content":"     * @return A command object for marking a task as done based on the input.","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"h4ow3i"},"content":"    public static Command parseMark(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"h4ow3i"},"content":"        String[] sections \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"h4ow3i"},"content":"        if (sections.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a task number to mark.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"h4ow3i"},"content":"        int index \u003d Integer.parseInt(sections[1].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"h4ow3i"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Task number cannot be zero or negative.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"h4ow3i"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"h4ow3i"},"content":"     * Parses the input string to create a command for unmarking a task as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"h4ow3i"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"h4ow3i"},"content":"     * @return A command object for unmarking a task as done based on the input.","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"h4ow3i"},"content":"    public static Command parseUnmark(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"h4ow3i"},"content":"        String[] sections \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"h4ow3i"},"content":"        if (sections.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a task number to mark.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"h4ow3i"},"content":"        int index \u003d Integer.parseInt(sections[1].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"h4ow3i"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Task number cannot be zero or negative.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"h4ow3i"},"content":"        return new UnmarkCommand(index);","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"h4ow3i"},"content":"     * Parses the input string to create a command for deleting a task.","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"h4ow3i"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"h4ow3i"},"content":"     * @return A command object for deleting a task based on the input.","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"h4ow3i"},"content":"    public static Command parseDelete(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"h4ow3i"},"content":"        String[] sections \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"h4ow3i"},"content":"        if (sections.length \u003c\u003d 1 || sections[1].isEmpty()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a task number to delete.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"h4ow3i"},"content":"        int index \u003d Integer.parseInt(sections[1].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"h4ow3i"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Task number cannot be zero or negative.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"h4ow3i"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"h4ow3i"},"content":"     * Parses the input string to create a command for adding a deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"h4ow3i"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"h4ow3i"},"content":"     * @return A command object for adding a deadline task based on the input.","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"h4ow3i"},"content":"    public static Command parseDeadline(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"h4ow3i"},"content":"        String[] sections \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"h4ow3i"},"content":"        if (sections.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a task description.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"h4ow3i"},"content":"        String taskDescriptionPlusDue \u003d sections[1].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"h4ow3i"},"content":"        String[] parseTaskDescriptionPlusDue \u003d taskDescriptionPlusDue.split(\" /by \");","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"h4ow3i"},"content":"        if (parseTaskDescriptionPlusDue.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a valid deadline format.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"h4ow3i"},"content":"        String taskDescription \u003d parseTaskDescriptionPlusDue[0].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"h4ow3i"},"content":"        LocalDateTime due;","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"h4ow3i"},"content":"            due \u003d parseDate(parseTaskDescriptionPlusDue[1].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"h4ow3i"},"content":"        } catch (ChatBotException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a valid date/time format.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":145,"author":{"gitId":"h4ow3i"},"content":"        return new DeadlineCommand(taskDescription, due);","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"h4ow3i"},"content":"     * Parses the input string to create a command for adding an event task.","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":151,"author":{"gitId":"h4ow3i"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"h4ow3i"},"content":"     * @return A command object for adding an event task based on the input.","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"h4ow3i"},"content":"    public static Command parseEvent(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"h4ow3i"},"content":"        String[] sections \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"h4ow3i"},"content":"        if (sections.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a task description.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":158,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":159,"author":{"gitId":"h4ow3i"},"content":"        String eventPlusStartAndEnd \u003d sections[1].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":160,"author":{"gitId":"h4ow3i"},"content":"        String[] parseEventPlusStartAndEnd \u003d eventPlusStartAndEnd.split(\" /from | /to \");","lastModifiedDate":"2024-02-06"},{"lineNumber":161,"author":{"gitId":"h4ow3i"},"content":"        if (parseEventPlusStartAndEnd.length \u003c\u003d 2) {","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a valid event format.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":163,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":164,"author":{"gitId":"h4ow3i"},"content":"        String event \u003d parseEventPlusStartAndEnd[0].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"h4ow3i"},"content":"        LocalDateTime start;","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"h4ow3i"},"content":"        LocalDateTime end;","lastModifiedDate":"2024-02-06"},{"lineNumber":167,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":168,"author":{"gitId":"h4ow3i"},"content":"            start \u003d parseDate(parseEventPlusStartAndEnd[1].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":169,"author":{"gitId":"h4ow3i"},"content":"            end \u003d parseDate(parseEventPlusStartAndEnd[2].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":170,"author":{"gitId":"h4ow3i"},"content":"        } catch (ChatBotException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":171,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a valid date/time format.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":172,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"h4ow3i"},"content":"        return new EventCommand(event, start, end);","lastModifiedDate":"2024-02-06"},{"lineNumber":174,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":175,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":176,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":177,"author":{"gitId":"h4ow3i"},"content":"     * Parses the input string to create a command for finding tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":178,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":179,"author":{"gitId":"h4ow3i"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":180,"author":{"gitId":"h4ow3i"},"content":"     * @return A command object for finding tasks based on the input.","lastModifiedDate":"2024-02-06"},{"lineNumber":181,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":182,"author":{"gitId":"h4ow3i"},"content":"    public static Command parseFind(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":183,"author":{"gitId":"h4ow3i"},"content":"        String[] sections \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":184,"author":{"gitId":"h4ow3i"},"content":"        if (sections.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":185,"author":{"gitId":"h4ow3i"},"content":"            return new InvalidCommand(\"Oops! Please enter a task to find.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":186,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":187,"author":{"gitId":"h4ow3i"},"content":"        String tasktoFind \u003d sections[1].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":188,"author":{"gitId":"h4ow3i"},"content":"        return new FindCommand(tasktoFind);","lastModifiedDate":"2024-02-06"},{"lineNumber":189,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":190,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":191,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":192,"author":{"gitId":"h4ow3i"},"content":"     * Parses a date string to LocalDateTime.","lastModifiedDate":"2024-02-06"},{"lineNumber":193,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":194,"author":{"gitId":"h4ow3i"},"content":"     * @param dateString The date string to parse.","lastModifiedDate":"2024-02-06"},{"lineNumber":195,"author":{"gitId":"h4ow3i"},"content":"     * @return The LocalDateTime object parsed from the date string.","lastModifiedDate":"2024-02-06"},{"lineNumber":196,"author":{"gitId":"h4ow3i"},"content":"     * @throws ChatBotException If the date string is in an invalid format.","lastModifiedDate":"2024-02-06"},{"lineNumber":197,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":198,"author":{"gitId":"h4ow3i"},"content":"    public static LocalDateTime parseDate(String dateString) throws ChatBotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":199,"author":{"gitId":"h4ow3i"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-06"},{"lineNumber":200,"author":{"gitId":"h4ow3i"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-06"},{"lineNumber":201,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":202,"author":{"gitId":"h4ow3i"},"content":"            return LocalDateTime.parse(dateString, dateTimeFormatter);","lastModifiedDate":"2024-02-06"},{"lineNumber":203,"author":{"gitId":"h4ow3i"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":204,"author":{"gitId":"h4ow3i"},"content":"            try {","lastModifiedDate":"2024-02-06"},{"lineNumber":205,"author":{"gitId":"h4ow3i"},"content":"                return LocalDate.parse(dateString, dateFormatter).atStartOfDay();","lastModifiedDate":"2024-02-06"},{"lineNumber":206,"author":{"gitId":"h4ow3i"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-02-06"},{"lineNumber":207,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":208,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":209,"author":{"gitId":"h4ow3i"},"content":"        throw new ChatBotException(\"Oops! Invalid date and time format. \" +","lastModifiedDate":"2024-02-06"},{"lineNumber":210,"author":{"gitId":"h4ow3i"},"content":"                \"Please enter in yyyy-MM-dd HHmm format, you may leave HHmm empty.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":211,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":212,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":213,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":214,"author":{"gitId":"h4ow3i"},"content":"     * Parses a string representing a task from a file and returns the corresponding Task object.","lastModifiedDate":"2024-02-06"},{"lineNumber":215,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":216,"author":{"gitId":"h4ow3i"},"content":"     * @param tasksFromFile The string representing the task from the file.","lastModifiedDate":"2024-02-06"},{"lineNumber":217,"author":{"gitId":"h4ow3i"},"content":"     * @return The Task object parsed from the string.","lastModifiedDate":"2024-02-06"},{"lineNumber":218,"author":{"gitId":"h4ow3i"},"content":"     * @throws ChatBotException If the string representation of the task is invalid.","lastModifiedDate":"2024-02-06"},{"lineNumber":219,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":220,"author":{"gitId":"h4ow3i"},"content":"    public static Task parseTasksFromFile(String tasksFromFile) throws ChatBotException {","lastModifiedDate":"2024-02-06"},{"lineNumber":221,"author":{"gitId":"h4ow3i"},"content":"        String[] sections \u003d tasksFromFile.split(\"\\\\|\");","lastModifiedDate":"2024-02-06"},{"lineNumber":222,"author":{"gitId":"h4ow3i"},"content":"        if (sections.length \u003c 3 || sections.length \u003e 4) {","lastModifiedDate":"2024-02-06"},{"lineNumber":223,"author":{"gitId":"h4ow3i"},"content":"            throw new ChatBotException(\"Oops! tasks.Task format is invalid.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":224,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":225,"author":{"gitId":"h4ow3i"},"content":"        String taskType \u003d sections[0];","lastModifiedDate":"2024-02-06"},{"lineNumber":226,"author":{"gitId":"h4ow3i"},"content":"        boolean isDone \u003d sections[1].trim().equals(\"1\");","lastModifiedDate":"2024-02-06"},{"lineNumber":227,"author":{"gitId":"h4ow3i"},"content":"        String taskDescription \u003d sections[2].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":228,"author":{"gitId":"h4ow3i"},"content":"        String dateOrTime \u003d sections.length \u003e 3 ? sections[3].trim() : null;","lastModifiedDate":"2024-02-06"},{"lineNumber":229,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":230,"author":{"gitId":"h4ow3i"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-06"},{"lineNumber":231,"author":{"gitId":"h4ow3i"},"content":"        case \"T\":","lastModifiedDate":"2024-02-06"},{"lineNumber":232,"author":{"gitId":"h4ow3i"},"content":"            ToDo todo \u003d new ToDo(taskDescription);","lastModifiedDate":"2024-02-06"},{"lineNumber":233,"author":{"gitId":"h4ow3i"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":234,"author":{"gitId":"h4ow3i"},"content":"                todo.markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":235,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":236,"author":{"gitId":"h4ow3i"},"content":"            return todo;","lastModifiedDate":"2024-02-06"},{"lineNumber":237,"author":{"gitId":"h4ow3i"},"content":"        case \"D\":","lastModifiedDate":"2024-02-06"},{"lineNumber":238,"author":{"gitId":"h4ow3i"},"content":"            if (dateOrTime \u003d\u003d null) {","lastModifiedDate":"2024-02-06"},{"lineNumber":239,"author":{"gitId":"h4ow3i"},"content":"                throw new ChatBotException(\"Oops! tasks.Deadline format is invalid.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":240,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":241,"author":{"gitId":"h4ow3i"},"content":"            LocalDateTime due \u003d LocalDateTime.parse(dateOrTime);","lastModifiedDate":"2024-02-06"},{"lineNumber":242,"author":{"gitId":"h4ow3i"},"content":"            Deadline deadline \u003d new Deadline(taskDescription, due);","lastModifiedDate":"2024-02-06"},{"lineNumber":243,"author":{"gitId":"h4ow3i"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":244,"author":{"gitId":"h4ow3i"},"content":"                deadline.markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":245,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":246,"author":{"gitId":"h4ow3i"},"content":"            return deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":247,"author":{"gitId":"h4ow3i"},"content":"        case \"E\":","lastModifiedDate":"2024-02-06"},{"lineNumber":248,"author":{"gitId":"h4ow3i"},"content":"            String[] startAndEnd \u003d dateOrTime.split(\"to\");","lastModifiedDate":"2024-02-06"},{"lineNumber":249,"author":{"gitId":"h4ow3i"},"content":"            if (startAndEnd.length \u003c 2) {","lastModifiedDate":"2024-02-06"},{"lineNumber":250,"author":{"gitId":"h4ow3i"},"content":"                throw new ChatBotException(\"Oops! tasks.Event format is invalid.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":251,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":252,"author":{"gitId":"h4ow3i"},"content":"            LocalDateTime eventStart \u003d LocalDateTime.parse(startAndEnd[0].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":253,"author":{"gitId":"h4ow3i"},"content":"            LocalDateTime eventEnd \u003d LocalDateTime.parse(startAndEnd[1].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":254,"author":{"gitId":"h4ow3i"},"content":"            Event event \u003d new Event(taskDescription, eventStart, eventEnd);","lastModifiedDate":"2024-02-06"},{"lineNumber":255,"author":{"gitId":"h4ow3i"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":256,"author":{"gitId":"h4ow3i"},"content":"                event.markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":257,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":258,"author":{"gitId":"h4ow3i"},"content":"            return event;","lastModifiedDate":"2024-02-06"},{"lineNumber":259,"author":{"gitId":"h4ow3i"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":260,"author":{"gitId":"h4ow3i"},"content":"            throw new ChatBotException(\"Oops! Unknown task type\");","lastModifiedDate":"2024-02-06"},{"lineNumber":261,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":262,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":263,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":264,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":265,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":265}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package util;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import exceptions.ChatBotException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import java.io.File;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" * The Storage class is responsible for saving tasks to a file and loading tasks from a file.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"public class Storage {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"    private static final String FILE_PATH \u003d \"./data/duke/.txt\";","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    public Storage() {};","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     * Saves the tasks from the task list to a file.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList containing tasks to be saved.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    public void saveToFile(TaskList taskList) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"            for (Task task: taskList.getTasks()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"                fw.write(task.toStringForFile() + \"\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"            fw.close();","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"            System.out.println(\"Oops! There was an error saving to file.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"     * Loads tasks from a file into the task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"     * @param taskList The TaskList where loaded tasks will be stored.","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"     * @throws IOException       If an I/O error occurs.","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"     * @throws ChatBotException If there is an error parsing the file.","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"    public void loadFromFile(TaskList taskList) throws IOException {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"                String taskString \u003d scanner.nextLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"h4ow3i"},"content":"                Task task \u003d Parser.parseTasksFromFile(taskString);","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"h4ow3i"},"content":"                taskList.getTasks().add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"            System.out.println(\"Oops! There was an error loading the file.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"h4ow3i"},"content":"        } catch (ChatBotException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"h4ow3i"},"content":"            System.out.println(\"Oops! There was an error parsing the file.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":66}},{"path":"src/main/java/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package util;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import exceptions.ChatBotException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" * Manages the list of tasks and provides operations to manipulate the tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"public class TaskList {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a new TaskList object.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a new TaskList object with the given list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"    public Task getTaskIndex(int index) {","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"h4ow3i"},"content":"        if (this.tasks.size() \u003c MAX_TASKS) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"h4ow3i"},"content":"            this.tasks.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"h4ow3i"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"     * @param number The index of the task to be deleted.","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"h4ow3i"},"content":"     * @return The deleted task.","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"h4ow3i"},"content":"     * @throws ChatBotException If the task list is empty or the specified index is invalid.","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"h4ow3i"},"content":"    public Task deleteTask(int number) throws ChatBotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"h4ow3i"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"h4ow3i"},"content":"            throw new ChatBotException(\"Oops! There are no tasks in the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"h4ow3i"},"content":"        return this.tasks.remove(number - 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"h4ow3i"},"content":"     * Retrieves a summary message about the number of tasks in the list.","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"h4ow3i"},"content":"     * @return A summary message about the number of tasks in the list.","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"h4ow3i"},"content":"    public String getTaskSummary() {","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"h4ow3i"},"content":"        return \"\\tNow you have \" + this.tasks.size() + \" task\"","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"h4ow3i"},"content":"                + (this.tasks.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list\";","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"h4ow3i"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"h4ow3i"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"h4ow3i"},"content":"     * @throws ChatBotException If the specified index is invalid (zero or negative).","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"h4ow3i"},"content":"    public void markTask(int index) throws ChatBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"h4ow3i"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"h4ow3i"},"content":"            throw new ChatBotException(\"Oops! Number entered cannot be zero or negative.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"h4ow3i"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"h4ow3i"},"content":"            throw new ChatBotException(\"Oops! There are no tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"h4ow3i"},"content":"        Task currTask \u003d this.tasks.get(index - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"h4ow3i"},"content":"        currTask.markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"h4ow3i"},"content":"     * Marks a task in the task list as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"h4ow3i"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"h4ow3i"},"content":"     * @throws ChatBotException If the specified index is invalid (zero or negative).","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"h4ow3i"},"content":"    public void unmarkTask(int index) throws ChatBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"h4ow3i"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"h4ow3i"},"content":"            throw new ChatBotException(\"Oops! Number entered cannot be zero or negative.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"h4ow3i"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"h4ow3i"},"content":"            throw new ChatBotException(\"Oops! There are no tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"h4ow3i"},"content":"        Task currTask \u003d this.tasks.get(index - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"h4ow3i"},"content":"        currTask.markAsNotDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"h4ow3i"},"content":"     * Retrieves a string representation of all tasks in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"h4ow3i"},"content":"     * @return A string representation of all tasks in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"h4ow3i"},"content":"    public String listTasks() {","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"h4ow3i"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"h4ow3i"},"content":"            return \"\\tThe task list is empty.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"h4ow3i"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"h4ow3i"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"h4ow3i"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"h4ow3i"},"content":"                Task currTask \u003d this.tasks.get(i);","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"h4ow3i"},"content":"                result.append(\"\\t\").append(i + 1).append(\".\").append(currTask.toString()).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"h4ow3i"},"content":"            return result.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"h4ow3i"},"content":"     * Finds tasks containing a specified keyword in their descriptions.","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"h4ow3i"},"content":"     * @param keyWord The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"h4ow3i"},"content":"     * @return A TaskList containing tasks matching the keyword.","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"h4ow3i"},"content":"     * @throws ChatBotException If no tasks match the keyword.","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"h4ow3i"},"content":"    public TaskList findTasks(String keyWord) throws ChatBotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"h4ow3i"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"h4ow3i"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"h4ow3i"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"h4ow3i"},"content":"            if (task.getDescription().contains(keyWord)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"h4ow3i"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"h4ow3i"},"content":"                isFound \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":151,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"h4ow3i"},"content":"        if (!isFound) {","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"h4ow3i"},"content":"            throw new ChatBotException(\"No matching tasks found.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"h4ow3i"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":157,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":158,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":159}},{"path":"src/main/java/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package util;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":" * The Ui class handles user interaction by providing methods for printing messages and reading user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"public class Ui {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a Ui object with a Scanner for user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"    public Ui() {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     * Prints a horizontal divider line to separate different sections of output.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    public void printDivider() {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     * Prints a greeting message when the chatbot starts.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"    public void printGreetings() {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"        printDivider();","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"        System.out.println(\"Hello! I\u0027m Edgar.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"        printDivider();","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"     * Prints a farewell message when the chatbot exits.","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"    public String printByeMessage() {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"     * Reads the next line of user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"    public String nextCommand() {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"     * Prints a message to the console with an indentation.","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"h4ow3i"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"h4ow3i"},"content":"        System.out.println(\"\\t\" + message);","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"         prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"false\" minHeight\u003d\"200.0\" prefHeight\u003d\"200.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"            prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"edgar.MainWindow\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"758.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"757.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"752.0\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"h4ow3i":21}},{"path":"src/test/java/commands/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"    public void deadlineTask_InTaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"        Deadline deadline \u003d new Deadline(\"Eat\",","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2023, 5, 11, 14, 0));","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"        assertEquals(\"[D][ ] Eat (by: May 11 2023 | 02:00 PM)\", deadline.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    public void deadlineTask_InHardDisk() {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"        Deadline deadline \u003d new Deadline(\"do homework\",","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2023, 5, 11, 14, 0));","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"        assertEquals(\"D| 0 | do homework | 2023-05-11T14:00\", deadline.toStringForFile());","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    public void markAsDone_InTaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"        Deadline deadline  \u003d new Deadline(\"go jim\",","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 11, 12, 30));","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"        deadline.markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"        assertEquals(\"[D][X] go jim (by: Feb 11 2024 | 12:30 PM)\", deadline.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"    public void markAsDone_InHardDisk() {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"        Deadline deadline  \u003d new Deadline(\"submit week 3 ip\",","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 2, 23, 59));","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        deadline.markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"        assertEquals(\"D| 1 | submit week 3 ip | 2024-02-02T23:59\", deadline.toStringForFile());","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":38}},{"path":"src/test/java/commands/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"public class EventCommandTest {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"    public void event_InTaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"        Event event \u003d new Event(\"team meeting\",","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 9, 20, 0),","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 9, 21, 30));","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"        assertEquals(\"[E][ ] team meeting (from: 09 Feb 2024 | 08:00 PM to: 09 Feb 2024 | 09:30 PM)\",","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"                event.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"    public void event_InHardDisk() {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"        Event event \u003d new Event(\"team meeting\",","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 9, 20, 0),","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 9, 21, 30));","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"        assertEquals(\"E| 0 | team meeting | 2024-02-09T20:00 to 2024-02-09T21:30\", event.toStringForFile());","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    public void markAsDone_InTaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"        Event event \u003d new Event(\"team meeting\",","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 9, 20, 0),","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 9, 21, 30));","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"        event.markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"        assertEquals(\"[E][X] team meeting (from: 09 Feb 2024 | 08:00 PM to: 09 Feb 2024 | 09:30 PM)\",","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"                event.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"    public void markAsDone_InHardDisk() {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"        Event event  \u003d new Event(\"team meeting\",","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 9, 20, 0),","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"                LocalDateTime.of(2024, 2, 9, 21, 30));","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"        event.markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        assertEquals(\"E| 1 | team meeting | 2024-02-09T20:00 to 2024-02-09T21:30\", event.toStringForFile());","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"h4ow3i":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"todo watch lecture","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"deadline eat dinner /by 6pm","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"test wrong input","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"mark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"mark 2","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"unmark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"unmark 2","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"delete 2","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"event","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"event test","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"mark 60","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"unmark -4","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"delete -1","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"bye","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"h4ow3i":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"java -classpath ..\\bin edgar.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"h4ow3i":1,"-":20}}]
