[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"plugins {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"    id \u0027java\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"    id \u0027application\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"repositories {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"    jcenter()","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    mavenCentral()","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"dependencies {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    String javaFxVersion \u003d \u002717.0.10\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"checkstyle {","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"test {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"    useJUnitPlatform()","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"application {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"    mainClassName \u003d \"duke.ui.Launcher\"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"    mainClass.set(\"duke.ui.Launcher\")","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"shadowJar {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"amanzainal":48}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"[T] | [ ] | test123","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"[D] | [ ] | DO WORK | 2024-02-27 13:05","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"[E] | [ ] | tutorial | 2022-08-12 00:00 | 2024-08-15 15:15","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"[D] | [ ] | lecture | 2024-08-15 15:15","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"[T] | [ ] | submit ip","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"[D] | [ ] | submit IP | 2024-02-27 15:30","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"[D] | [ ] | job interview | 2024-02-27 16:30","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"[D] | [ ] | eat food | 2024-02-27 19:30","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"amanzainal":8}},{"path":"plugin/src/functionalTest/java/org/example/IpPluginFunctionalTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"package org.example;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import java.io.Writer;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import org.gradle.testkit.runner.GradleRunner;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"import org.gradle.testkit.runner.BuildResult;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":" * A simple functional test for the \u0027org.example.greeting\u0027 plugin.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"class IpPluginFunctionalTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    @TempDir","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    File projectDir;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    private File getBuildFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        return new File(projectDir, \"build.gradle\");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    private File getSettingsFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        return new File(projectDir, \"settings.gradle\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"    @Test void canRunTask() throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"        writeString(getSettingsFile(), \"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        writeString(getBuildFile(),","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"            \"plugins {\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"            \"  id(\u0027org.example.greeting\u0027)\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"            \"}\");","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        // Run the build","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        GradleRunner runner \u003d GradleRunner.create();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        runner.forwardOutput();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        runner.withPluginClasspath();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        runner.withArguments(\"greeting\");","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        runner.withProjectDir(projectDir);","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        BuildResult result \u003d runner.build();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        // Verify the result","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"        assertTrue(result.getOutput().contains(\"Hello from plugin \u0027org.example.greeting\u0027\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"    private void writeString(File file, String string) throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"        try (Writer writer \u003d new FileWriter(file)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"            writer.write(string);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":56}},{"path":"plugin/src/main/java/org/example/IpPlugin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"package org.example;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import org.gradle.api.Project;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import org.gradle.api.Plugin;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * A simple \u0027hello world\u0027 plugin.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"public class IpPlugin implements Plugin\u003cProject\u003e {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    public void apply(Project project) {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"        // Register a task","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"        project.getTasks().register(\"greeting\", task -\u003e {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"            task.doLast(s -\u003e System.out.println(\"Hello from plugin \u0027org.example.greeting\u0027\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"        });","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":19}},{"path":"plugin/src/test/java/org/example/IpPluginTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"package org.example;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import org.gradle.testfixtures.ProjectBuilder;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import org.gradle.api.Project;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * A simple unit test for the \u0027org.example.greeting\u0027 plugin.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"class IpPluginTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    @Test void pluginRegistersATask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"        // Create a test project and apply the plugin","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"        Project project \u003d ProjectBuilder.builder().build();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        project.getPlugins().apply(\"org.example.greeting\");","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"        // Verify the result","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        assertNotNull(project.getTasks().findByName(\"greeting\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * The main class representing the Duke chatbot application.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Duke} class serves as the entry point for the Duke chatbot application.","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":" * It handles user input, parsing, command execution, and storage operations.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"public class Duke {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"     * Constructs a Duke object","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    public Duke() {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"            this.tasks \u003d this.storage.load();","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"     * Gets the response from Duke","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"     * @param input User input","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"     * @return Response from Duke","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"            ui.clear();","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"            // Parse the input","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"            Command command \u003d Parser.parseInput(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"            // Execute the command","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"            command.execute(this.tasks, this.ui);","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"            // For debugging purposes.","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"\\n------------\\nInput: %s\\nOutput: %s\\n-----------\", input, this.ui.getResponse());","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"            return this.ui.getResponse();","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"            this.ui.appendResponse(e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"            return this.ui.getResponse();","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"amanzainal":69}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * An instruction class that encapsulates the action of adding a task","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * into a TaskList.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    private Task task;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     * Represents a command to add a task to the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"     * \u003cp\u003eThe {@code AddCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"     * required to add a task to the task list. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"     * class and implements the behavior specific to adding a task.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        super(\"add\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        assert task !\u003d null : \"Task to be added cannot be null\";","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"     * Executes the add task command.","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"     * \u003cp\u003eThis method adds the specified task to the task list and prints a confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"     * It then returns the updated task list.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"     * @param tasks The task list to which the task is added.","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"     * @return The updated task list after adding the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        Integer count \u003d tasks.getNoOfTasks();","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"        String message \u003d String.format(Messages.ADD_SUCCESS.getMessage(),","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"            task, count);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"        ui.appendResponse(message);","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":52}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of ending the chatbot session.","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code ByeCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * required to end the chatbot session gracefully. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to ending the session.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    protected String command;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    protected List\u003cString\u003e arguments;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        super(\"bye\", List.of());","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"     * Prints out bye.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        ui.appendResponse(Messages.EXIT.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" * An abstract class representing a command in the Duke application.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Command} class serves as the base class for all specific command classes","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * in the Duke application. It provides common functionality and structure for executing","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * different commands.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    protected String command;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    protected List\u003cString\u003e arguments;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    * Constructs a command object with the specified command keyword and arguments.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    *","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    * @param command   The command keyword representing the type of command.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    * @param arguments The list of arguments associated with the command.","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    */","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    public Command(String command, List\u003cString\u003e arguments) {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        assert command !\u003d null : \"Command keyword cannot be null\";","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        assert arguments !\u003d null : \"Argument list cannot be null\";","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        ","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    public abstract TaskList execute(TaskList tasks, Ui ui);","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    public String getCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        return this.command;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"            return true;","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"            return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        if (obj instanceof Command) {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"            Command other \u003d (Command) obj;","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"            return command.equals(other.command)","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"                \u0026\u0026 (arguments \u003d\u003d null ? other.arguments \u003d\u003d null : arguments.equals(other.arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"        } else if (obj instanceof String) {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"            String otherString \u003d (String) obj;","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"            return command.equals(otherString);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":57}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of deleting a task from the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code DeleteCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * required to delete a task from the task list. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to deleting a task.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    public DeleteCommand(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"        super(\"delete\", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(Messages.DELETE_ERROR.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"            int index \u003d Integer.parseInt(arguments.get(0)) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.getNoOfTasks()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"                tasks.deleteTask(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"                ui.appendResponse(String.format(Messages.DELETE_SUCCESS.getMessage(), index + 1));","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(String.format(Messages.INDEX_ERROR.getMessage(),","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"                    arguments.get(0)));","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"            String message \u003d String.format(\"%s\", e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(message);","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"            return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(Messages.DELETE_INVALID_INDEX_ERROR.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"            return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":49}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    private String keyword;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        super(\"find\", List.of(keyword));","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        TaskList matchingTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        ui.appendResponse(Messages.FIND_SUCCESS.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        ui.appendResponse(matchingTasks.toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"amanzainal":32}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of displaying a list of available commands.","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code HelpCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * required to display a list of available commands to the user. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to displaying the help message.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        super(\"help\", List.of());","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        String helpMessage \u003d Messages.HELP_SUCCESS.getMessage();","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        ui.appendResponse(helpMessage);","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"amanzainal":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of listing all tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code ListCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * required to list all tasks stored in the task list. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to listing tasks.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    private static final String TASKS_MESSAGE \u003d \"Here\u0027s your list!\";","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"        super(\"list\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        ui.appendResponse(TASKS_MESSAGE);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        for (int i \u003d 0; i \u003c tasks.getNoOfTasks(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(String.format(\"\\n%d. %s\", i + 1, tasks.getTask(i)));","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":30}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of marking a task as done.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code MarkCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" * required to mark a task in the task list as done. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to marking a task as done.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    public MarkCommand(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        super(\"mark\", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(String.format(Messages.MARK_NO_INDEX_ERROR.getMessage()));","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            return tasks;","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"            int index \u003d Integer.parseInt(arguments.get(0)) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.getNoOfTasks()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(String.format(Messages.MARK_INDEX_OOR_ERROR.getMessage(), arguments.get(0)));","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"            if (task.isDone()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(String.format(Messages.MARK_TASKMARKED_ERROR.getMessage(), index + 1));","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(String.format(Messages.MARK_SUCCESS.getMessage(), index + 1, task.getDescription()));","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(String.format(Messages.MARK_INVALID_INDEX_ERROR.getMessage()));","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(String.format(\"%s\", e.getMessage()));","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":53}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * A command class representing an unknown / undefined command.","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code UnknownCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * required to handle an unknown command. It inherits from the {@code Command} class","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * and represents a command that is not recognized by the Duke chatbot.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    public UnknownCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        super(\"\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"     * Appends a user-friendly error message to the output.","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"     * @param  tasks The task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"     * @param  ui    The UI Stringbuilder","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"     * @return       Tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        ui.appendResponse(Messages.INPUT_ERROR.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":31}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of marking a task as undone.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code UnmarkCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" * required to mark a task in the task list as undone. It inherits from the {@code Command}","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to marking a task as undone.\u003c/p\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    public UnmarkCommand(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"        super(\"unmark\", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(Messages.UNMARK_MISSING_INDEX_ERROR.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            return tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"            int index \u003d Integer.parseInt(arguments.get(0)) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.getNoOfTasks()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(String.format(Messages.UNMARK_INDEX_OUT_OF_RANGE_ERROR.getMessage(),","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"                        arguments.get(0)));","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"            if (task.isDone()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"                task.markUndone();","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"                ui.appendResponse(String.format(Messages.UNMARK_SUCCESS.getMessage(), index + 1,","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"                    task.getDescription()));","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(String.format(Messages.UNMARK_ALREADY_UNDONE_ERROR.getMessage(), index + 1));","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(Messages.UNMARK_INVALID_NUMBER_ERROR.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse(e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":53}},{"path":"src/main/java/duke/command/ViewByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of viewing tasks by date.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code ViewByDateCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" * required to view tasks based on a specified date. It inherits from the {@code Command} class","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":" * and implements the behavior specific to displaying tasks that occur on a particular date.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"public class ViewByDateCommand extends Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    private LocalDate date;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"     * Constructs a {@code ViewByDateCommand} object with the specified date.","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"     * @param date The date for which tasks should be viewed.","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    public ViewByDateCommand(LocalDate date) {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        super(\"viewbydate\", null);","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        List\u003cTask\u003e tasksByDate \u003d tasks.getTasksByDate(date);","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        // Displaying the date header","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"        ui.appendResponse(String.format(\"Here are your tasks on %s:\\n\", formatDate(date)));","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        // Displaying tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        for (int i \u003d 0; i \u003c tasksByDate.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"            ui.appendResponse((i + 1) + \". \" + tasksByDate.get(i));","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        return new TaskList(tasksByDate);","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"d\u0027\"","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"            + getDayOfMonthSuffix(date.getDayOfMonth()) + \"\u0027 MMMM, yyyy\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    private String getDayOfMonthSuffix(int day) {","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"        if (day \u003e\u003d 11 \u0026\u0026 day \u003c\u003d 13) {","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"            return \"th\";","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"        switch (day % 10) {","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"        case 1:","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"            return \"st\";","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"        case 2:","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"            return \"nd\";","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"        case 3:","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"            return \"rd\";","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"        default:","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"            return \"th\";","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"amanzainal":67}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.exception;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * A custom runtime exception class for Duke-specific errors.","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code DukeException} class extends {@code RuntimeException} and is used to represent","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * runtime errors specific to the Duke chatbot application. It provides a way to handle and propagate","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * exceptions related to Duke\u0027s functionality.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":14}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"import duke.command.ViewByDateCommand;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":" * A utility class for parsing user input and generating corresponding commands.","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Parser} class provides static methods for parsing user input strings","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":" * and generating corresponding command objects to perform specific actions in the Duke chatbot.","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":" * It handles the parsing of various command types, such as adding tasks, marking tasks as done,","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":" * listing tasks, and more.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"     * Parses the user input string and generates the corresponding command object.","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"     * @param userInput The user input string to parse.","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"     * @return A {@link Command} object representing the parsed command.","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"     * @throws DukeException If there is an error parsing the input or generating the command.","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"    public static Command parseInput(String userInput) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"            String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"            String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"            List\u003cString\u003e arguments \u003d parts.length \u003e 1 ? List.of(parts[1].split(\"\\\\s+\")) : List.of();","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"            switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"            case \"f\":","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"            case \"fi\":","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"            case \"fin\":","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"            case \"find\":","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"                return new FindCommand(String.join(\" \", arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"            case \"h\":","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"            case \"help\":","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"            case \"l\":","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"            case \"list\":","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"                return new ListCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"            case \"m\":","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"                return new MarkCommand(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"            case \"b\":","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"            case \"exit\":","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"            case \"u\":","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"            case \"un\":","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"                return new UnmarkCommand(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"            case \"d\":","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"            case \"del\":","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"            case \"remove\":","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"                return new DeleteCommand(arguments);","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"            case \"t\":","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"                return new AddCommand(new ToDo(extractTaskDescription(arguments)));","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"            case \"dl\":","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"                return parseDeadline(arguments);","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"            case \"e\":","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"            case \"event\":","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"                return parseEvent(arguments);","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"            case \"v\":","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"            case \"view\":","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"            case \"viewbydate\":","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"                return parseViewByDate(arguments);","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"            default:","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"                return new UnknownCommand();","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"\\n%s\", e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"            return new UnknownCommand();","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"amanzainal"},"content":"    private static Command parseDeadline(List\u003cString\u003e arguments) throws DukeException {","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"amanzainal"},"content":"        String taskDescription \u003d extractTaskDescription(arguments, \"/by\");","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"amanzainal"},"content":"        LocalDateTime deadlineDateTime \u003d parseDateTime(getDateTimeString(arguments, \"/by\"));","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"amanzainal"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"amanzainal"},"content":"            throw new DukeException(Messages.PARSER_DEADLINE_DESCRIPTION_ERROR.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"amanzainal"},"content":"        if (deadlineDateTime \u003d\u003d null) {","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"amanzainal"},"content":"            throw new DukeException(Messages.PARSER_DEADLINE_DATE_TIME_ERROR.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"amanzainal"},"content":"        return new AddCommand(new Deadline(taskDescription, deadlineDateTime));","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"amanzainal"},"content":"    private static Command parseEvent(List\u003cString\u003e arguments) throws DukeException {","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"amanzainal"},"content":"        String taskDescription \u003d extractTaskDescription(arguments, \"/from\", \"/to\");","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"amanzainal"},"content":"        LocalDateTime startDateTime \u003d parseDateTime(getDateTimeString(arguments, \"/from\"));","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"amanzainal"},"content":"        LocalDateTime endDateTime \u003d parseDateTime(getDateTimeString(arguments, \"/to\"));","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"amanzainal"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"amanzainal"},"content":"            throw new DukeException(Messages.PARSER_EVENT_DESCRIPTION_ERROR.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"amanzainal"},"content":"        if (startDateTime \u003d\u003d null || endDateTime \u003d\u003d null) {","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"amanzainal"},"content":"            throw new DukeException(Messages.PARSER_EVENT_DATE_TIME_ERROR.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"amanzainal"},"content":"        return new AddCommand(new Event(taskDescription, startDateTime, endDateTime));","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"amanzainal"},"content":"    private static Command parseViewByDate(List\u003cString\u003e arguments) throws DukeException {","lastModifiedDate":"2024-02-25"},{"lineNumber":130,"author":{"gitId":"amanzainal"},"content":"        LocalDate viewDate \u003d LocalDate.parse(extractTaskDescription(arguments), DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"amanzainal"},"content":"        return new ViewByDateCommand(viewDate);","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"amanzainal"},"content":"    private static LocalDateTime parseDateTime(String dateTimeString) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"amanzainal"},"content":"            return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"amanzainal"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"amanzainal"},"content":"            throw new DukeException(Messages.PARSER_INVALID_DATE_TIME_FORMAT.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":139,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"amanzainal"},"content":"    private static String extractTaskDescription(List\u003cString\u003e arguments, String... keywords) {","lastModifiedDate":"2024-02-25"},{"lineNumber":143,"author":{"gitId":"amanzainal"},"content":"        int keywordIndex \u003d findKeywordIndex(arguments, keywords);","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"amanzainal"},"content":"        if (keywordIndex !\u003d -1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"amanzainal"},"content":"            return String.join(\" \", arguments.subList(0, keywordIndex));","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"amanzainal"},"content":"        return String.join(\" \", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"amanzainal"},"content":"    private static String getDateTimeString(List\u003cString\u003e arguments, String keyword) throws DukeException {","lastModifiedDate":"2024-02-25"},{"lineNumber":151,"author":{"gitId":"amanzainal"},"content":"        int index \u003d arguments.indexOf(keyword);","lastModifiedDate":"2024-02-25"},{"lineNumber":152,"author":{"gitId":"amanzainal"},"content":"        if (index !\u003d -1 \u0026\u0026 index \u003c arguments.size() - 1) {","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"amanzainal"},"content":"            return String.join(\" \", arguments.subList(index + 1, arguments.size()));","lastModifiedDate":"2024-02-25"},{"lineNumber":154,"author":{"gitId":"amanzainal"},"content":"        } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":155,"author":{"gitId":"amanzainal"},"content":"            throw new DukeException(String.format(Messages.PARSER_MISSING_KEYWORD_ERROR.getMessage(), keyword));","lastModifiedDate":"2024-02-27"},{"lineNumber":156,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":157,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":158,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":159,"author":{"gitId":"amanzainal"},"content":"    private static int findKeywordIndex(List\u003cString\u003e arguments, String... keywords) {","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"amanzainal"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"amanzainal"},"content":"            if (arguments.contains(keyword)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"amanzainal"},"content":"                return arguments.indexOf(keyword);","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"amanzainal"},"content":"        return -1;","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":167}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.io.File;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":" * A utility class for handling storage operations, such as loading and saving tasks to a file.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Storage} class provides methods for reading tasks from a file and writing tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":" * to a file. It handles the conversion between task objects and their string representations","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":" * suitable for storage in a file. It also defines the file path where tasks are stored.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"public class Storage {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    private static final String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"/tasks.txt\";","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    private final Path folder;","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"    private final File storageFile;","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    public Storage() {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"        this(FILE_PATH);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"     * Constructor of that takes a path of the file and specify the file for","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"     * storage of the given path.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"     * @param filePath The path of the storage file","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        // Get the absolute path of the root directory","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"        String rootPath \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        // Create the full path to the storage file by concatenating the root path and the file path","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"        this.filePath \u003d Paths.get(rootPath, filePath).toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"        // Get the path of the file","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"        // Get the number of elements in the path","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"        int len \u003d path.getNameCount();","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"        // Get the parent folder of the storage file by getting the path of all elements except the last one","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"        this.folder \u003d Paths.get(rootPath, path.subpath(0, len - 1).toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"        // Create a new file object for the storage file","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"        this.storageFile \u003d new File(this.filePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"     * Loads tasks from the storage file into a TaskList object.","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"     * @return A {@link TaskList} containing tasks loaded from the storage file.","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"     * @throws FileNotFoundException If the storage file is not found.","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"    public TaskList load() throws FileNotFoundException {","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"        // Check if directory exists, if not, create it","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"        // Check if file exists, if not, return empty task list","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"            return list;","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"                list.addTask(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"            sc.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"            // Handle the FileNotFoundException if it occurs","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"            System.err.println(\"Error: Unable to read tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"        return list;","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"amanzainal"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"amanzainal"},"content":"        String[] parts \u003d line.split(\"\\\\s\\\\|\\\\s\");","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"amanzainal"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"amanzainal"},"content":"        boolean isDone \u003d parts[1].equals(\"[X]\");","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"amanzainal"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"amanzainal"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"amanzainal"},"content":"        case \"[T]\":","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"amanzainal"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"amanzainal"},"content":"        case \"[D]\":","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"amanzainal"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parts[3], DATE_TIME_FORMATTER);","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"amanzainal"},"content":"            return new Deadline(description, by, isDone);","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"amanzainal"},"content":"        case \"[E]\":","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"amanzainal"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(parts[3], DATE_TIME_FORMATTER);","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"amanzainal"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(parts[4], DATE_TIME_FORMATTER);","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"amanzainal"},"content":"            return new Event(description, from, to, isDone);","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"amanzainal"},"content":"        default:","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"amanzainal"},"content":"            throw new IllegalArgumentException(\"Invalid task type found in storage file.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"amanzainal"},"content":"     * Saves tasks from a TaskList object to the storage file.","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"amanzainal"},"content":"     * @param list The {@link TaskList} containing tasks to be saved.","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"amanzainal"},"content":"     * @throws IOException If an I/O error occurs while writing to the storage file.","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"amanzainal"},"content":"    public void save(TaskList list) throws IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"amanzainal"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"amanzainal"},"content":"        for (Task task : list.getAllTasks()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"amanzainal"},"content":"            sb.append(task.storageString()).append(System.lineSeparator());","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"amanzainal"},"content":"        writeToFile(FILE_PATH, sb.toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"amanzainal"},"content":"    private void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"amanzainal"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"amanzainal"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"amanzainal":140}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Deadline} class extends the {@link Task} class and represents a task with a","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * specific deadline. It contains methods to retrieve the deadline and convert the task to its","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * string representation for storage.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     * Constructs a deadline task with the given description and deadline.","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        super(description, TaskType.Deadline);","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"     * Constructs a deadline task with status isDone.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    public Deadline(String description, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"        super(description, TaskType.Deadline);","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    public String storageString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"        // Format the task status, task information, and deadline into a single string","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        String isCompleted \u003d this.isDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[D] | %s | %s | %s\", isCompleted, this.getDescription().trim(),","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        return this.deadline;","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"            this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * Represents an event task with start and end timings.","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Event} class extends the {@link Task} class and represents an event task with","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * specific start and end timings. It contains methods to retrieve the start and end timings and","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * convert the task to its string representation for storage.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     * Constructs an event task with the given description, start, and end timings.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"     * @param from        The start timing of the event.","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"     * @param to          The end timing of the event.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        super(description, TaskType.Event);","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"     * Constructs an event task with status isDone.","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    public Event(String description, LocalDateTime from,","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        LocalDateTime to, boolean isDone) {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"        super(description, TaskType.Event);","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"    public String storageString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        // Format the task status, task information, from, and end into a single string","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        String isCompleted \u003d this.isDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[E] | %s | %s | %s | %s\", isCompleted, this.getDescription().trim(),","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"        return this.from;","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"        return this.to;","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":64}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * Represents a generic task.","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Task} class is an abstract class representing a generic task. It contains","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * properties and methods common to all types of tasks, such as descriptions and status (done or","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * undone).\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    protected String description;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    protected final TaskType type;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"     * Constructs a task with the given description and type.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     * @param type        The type of the task, represented by {@link TaskType}.","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        return isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"    public abstract String storageString();","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":49}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" * A TaskList class that encapsulates the information and actions of a task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"public class TaskList {","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d list;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    public TaskList(TaskList other) {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(other.tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"        assert task !\u003d null : \"Task to be added cannot be null\";","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"     * @param  taskIndex Index of the task to be deleted.","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"     * @return           The deleted task.","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        Task taskToDelete \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        this.tasks.remove(taskIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        return taskToDelete;","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"    public int getNoOfTasks() {","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"    public void clearTasks() {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"    public List\u003cTask\u003e getTasksByDate(LocalDate date) {","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"        return tasks.stream()","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"                .filter(task -\u003e task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy().toLocalDate().equals(date))","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"                .filter(task -\u003e task instanceof Event \u0026\u0026 (((Event) task).getFrom().toLocalDate().equals(date)","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"                        || ((Event) task).getTo().toLocalDate().equals(date)))","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"     * Finds tasks in the task list whose description contains a specified keyword.","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"     * @return A TaskList containing tasks whose descriptions contain the specified keyword.","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"        String lowerCaseKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.stream()","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(lowerCaseKeyword))","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"        return new TaskList(new ArrayList\u003c\u003e(matchingTasks));","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"        // Creating a string builder to append task index and details","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"amanzainal"},"content":"        StringBuilder listContent \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"amanzainal"},"content":"        // Iterating through the task list","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"amanzainal"},"content":"        for (int i \u003d 0; i \u003c this.getNoOfTasks(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"amanzainal"},"content":"            // Appending task index and task details","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"amanzainal"},"content":"            listContent.append(i + 1).append(\".\").append(this.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"amanzainal"},"content":"        // Return the final string representation of the task list","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"amanzainal"},"content":"        return String.valueOf(listContent);","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"amanzainal"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"amanzainal"},"content":"        return List.copyOf(this.tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"amanzainal":111}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * Represents the type of a task.","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code TaskType} enum defines the possible types of tasks, such as Todo, Deadline, and","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * Event.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"    ToDo,","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    Deadline,","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    Event","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":13}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code ToDo} class extends the {@link Task} class and represents a todo task. It contains","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * methods to convert the task to its string representation for storage.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"        super(description, TaskType.ToDo);","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     * Constructs a ToDo task with status isDone.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"        super(description, TaskType.ToDo);","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    public String storageString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        // Format the task status, task information, and deadline into a single string","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        String isCompleted \u003d this.isDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[T] | %s | %s\", isCompleted, this.getDescription().trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":35}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":" * face and a label containing text from the speaker.","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    private static final int IMAGE_RADIUS \u003d 20;","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    private static final String userDialogStyle \u003d \"-fx-background-color: #0084ff;\"","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            + \" -fx-background-radius: 20 5 20 20;\";","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    private static final String sylviaDialogStyle \u003d \"-fx-background-color: #f0f0f0;\"","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"            + \" -fx-background-radius: 5 20 20 20;\";","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    private Text dialog;","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"        Circle clip \u003d new Circle(displayPicture.getLayoutX() + IMAGE_RADIUS, displayPicture.getLayoutY() + IMAGE_RADIUS,","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"                IMAGE_RADIUS);","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"        HBox.setMargin(dialogContainer, new Insets(0, 10, 0, 10));","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"        // when text overflows, wrap it to the next line","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"        if (dialog.getLayoutBounds().getWidth() \u003e 300) {","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"            dialog.setWrappingWidth(275);","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"     * Returns a dialog box representing the user\u0027s input.","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"     * @param text The user\u0027s input.","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"     * @param img  The user\u0027s image.","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"     * @return The dialog box representing the user\u0027s input.","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"        db.dialogContainer.setStyle(userDialogStyle);","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"        db.dialog.setFill(Paint.valueOf(\"#FFFFFF\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"        return db;","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"     * right.","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"    private void flip() {","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"     * Returns a dialog box representing the bot\u0027s response.","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"     * @param text The bot\u0027s response.","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"     * @param img  The bot\u0027s image.","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"     * @return The dialog box representing the bot\u0027s response.","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"        db.flip();","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"        db.dialogContainer.setStyle(sylviaDialogStyle);","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"amanzainal"},"content":"        db.dialog.setFill(Paint.valueOf(\"#000000\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"amanzainal"},"content":"        return db;","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"amanzainal":101}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"public class Launcher {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"amanzainal":12}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            stage.setTitle(\"Coat the Chatbot\");","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"            stage.getIcons().add(new Image(Main.class.getResourceAsStream(\"/images/icon.jpg\")));","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"            stage.show();","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"amanzainal":37}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Coat.png\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    private Image sendIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/send.png\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"     * Initializes the DialogBox and display the welcome message.","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        sendButton.getStylesheets().add(getClass().getResource(\"/css/MainWindow.css\").toExternalForm());","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        sendButton.setGraphic(new ImageView(sendIcon));","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        this.duke \u003d d;","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"            return;","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"        );","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"        // To-do: Exit command","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"amanzainal":69}},{"path":"src/main/java/duke/ui/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * This enum contains all messages used in the Parser class.","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"public enum Messages {","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"    INDEX_ERROR(\"I can\u0027t do that.. Task index %s is out of range!\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"    INPUT_ERROR(\"Sorry.. I don\u0027t know what that means! Do you need \u0027help\u0027?\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    EXIT(\"Aw, see you soon!\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    ADD_SUCCESS(\"Got it! I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"        + \"- %s\\n\\nYou have %d task(s) in the list.\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    DELETE_ERROR(\"Hey, you need to tell me which one to delete! Try \u0027delete \u003cINDEX\u003e.\u0027\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    DELETE_INVALID_INDEX_ERROR(\"Sigh.. That\u0027s not a valid number! Try \u0027delete \u003cNUMBER\u003e\u0027.\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    DELETE_SUCCESS(\"Deleted task %d\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    FIND_SUCCESS(\"Here are the matching tasks in your list:\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    HELP_SUCCESS(","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"            \"Here\u0027s all the things I can do for you!\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"            + \"1. todo \u003cdescription\u003e - Add a reminder to do something!\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"            + \"2. deadline \u003cdescription\u003e /by \u003cdeadline\u003e - Add a reminder.. with a deadline!\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"            + \"3. event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e - Add an event to your calendar\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            + \"4. list - List all your tasks and events\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"            + \"5. viewbydate \u003cdate\u003e - List all your tasks and events on a specific date\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            + \"6. find \u003ckeyword\u003e - List all your tasks and events with \u003ckeyword\u003e\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            + \"7. mark \u003cindex\u003e - Mark a task as done\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"            + \"8. unmark \u003cindex\u003e - Mark a task as undone\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"            + \"9. delete \u003cindex\u003e - Delete a task. Warning! I can\u0027t restore deleted tasks\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"            + \"10. help - Displays this list of commands\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"            + \"11. bye - Leave..\"","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    ),","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    MARK_NO_INDEX_ERROR(\"I can\u0027t do that.. You need to specify a task index! Try \\\"mark \u003cindex\u003e\\\"..\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"    MARK_INDEX_OOR_ERROR(\"I can\u0027t do that.. Task index %s is out of range!\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    MARK_TASKMARKED_ERROR(\"I can\u0027t do that.. Task %d is already done!\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"    MARK_SUCCESS(\"Marked task %d as done: %s\\nGood job!\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"    MARK_INVALID_INDEX_ERROR(\"Sigh.. That\u0027s not a valid number! Try \u0027mark \u003cNUMBER\u003e\u0027.\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"    UNMARK_INDEX_OUT_OF_RANGE_ERROR(\"I can\u0027t do that.. Task index %s is out of range!\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"    UNMARK_ALREADY_UNDONE_ERROR(\"I can\u0027t do that.. Task %d is already undone!\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"    UNMARK_INVALID_NUMBER_ERROR(\"Sigh.. That\u0027s not a valid number! Try \u0027unmark \u003cNUMBER\u003e\u0027.\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"    UNMARK_MISSING_INDEX_ERROR(\"I can\u0027t do that.. You need to specify a task index! Try \\\"mark \u003cindex\u003e\\\"..\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"    UNMARK_SUCCESS(\"Oh no.. Marked task %d as undone: %s\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"    PARSER_DEADLINE_DESCRIPTION_ERROR(\"Error: Deadline description cannot be empty.\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    PARSER_DEADLINE_DATE_TIME_ERROR(\"Error: Deadline date/time cannot be empty.\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"    PARSER_EVENT_DESCRIPTION_ERROR(\"Error: Event description cannot be empty.\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"    PARSER_EVENT_DATE_TIME_ERROR(\"Error: Both start and end times are required for the event command. \"","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"            + \"Correct format: /from \u003cstart\u003e /to \u003cend\u003e\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    PARSER_VIEW_DATE_ERROR(\"Please specify a date for viewing tasks!\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"    PARSER_INVALID_DATE_FORMAT(\"Invalid date format! Please enter the date in YYYY-MM-DD format.\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"    PARSER_INVALID_DATE_TIME_FORMAT(\"Invalid date/time format. Please use yyyy-MM-dd HH:mm format.\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"    PARSER_MISSING_KEYWORD_ERROR(\"Error: Missing %s after command.\");","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"    private final String message;","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"    Messages(String message) {","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"        return message;","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":66}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * A utility class to temporarily store the results of Duke\u0027s responses.","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"public class Ui {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"    private StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    public Ui() {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"     * Clears the response.","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    public void clear() {","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"        this.response \u003d new StringBuilder();","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"     * Get the final response in String format","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"     * @return the final response in String format","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    public String getResponse() {","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        return String.valueOf(this.response);","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"     * Appends a message to the existing response.","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"     * @param message the message to be appended","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    public void appendResponse(String message) {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        assert message !\u003d null : \"Response message cannot be null\";","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"        this.response.append(message);","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"amanzainal":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"      \u003cVBox fx:id\u003d\"dialogContainer\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"          \u003cText fx:id\u003d\"dialog\" text\u003d\"Text\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"               \u003cfont\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"                  \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"               \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"13.0\" right\u003d\"13.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"amanzainal":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"359.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"359.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"41.0\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #FFFFFF;\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"amanzainal":23}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * A test class for the Duke class.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public class DukeTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"amanzainal":20}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * Test class for the {@code DeleteCommand} class.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of deleting a valid task.","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    public void testDeleteValidTask() {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 2\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(\"1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d deleteCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        assertEquals(1, updatedTasks.getNoOfTasks());","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of deleting a task with an index out of range.","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    public void testDeleteIndexOutOfRange() {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 2\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(\"0\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        // Execute the command","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d deleteCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        // Verify that the tasks list remains unchanged","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        assertEquals(tasks, updatedTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of deleting a task with invalid input.","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    public void testDeleteInvalidInput() {","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 2\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(\"abc\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"        // Execute the command","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d deleteCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"        // Verify that the tasks list remains unchanged","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"        assertEquals(tasks, updatedTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of deleting a task in an empty task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"    public void testDeleteTaskInEmptyList() {","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(\"1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"        // Execute the command","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d deleteCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"        // Verify that the tasks list remains unchanged","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"        assertEquals(tasks, updatedTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of deleting a task when no index is provided.","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"    public void testDeleteNoIndexProvided() {","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 2\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of());","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"        // Execute the command","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d deleteCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"        // Verify that the tasks list remains unchanged","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"        assertEquals(tasks, updatedTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"amanzainal":99}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * Test class for the {@code MarkCommand} class.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of marking a valid task as done.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    public void testMarkValidTask() {","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 2\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        MarkCommand markCommand \u003d new MarkCommand(List.of(\"1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d markCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        assertTrue(updatedTasks.getTask(0).isDone());","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of marking a task with an index out of range.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    public void testMarkIndexOutOfRange() {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 2\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        MarkCommand markCommand \u003d new MarkCommand(List.of(\"0\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        // Execute the command","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d markCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        // Verify that the tasks list remains unchanged","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"        assertEquals(tasks, updatedTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of marking a task with invalid input.","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"    public void testMarkInvalidInput() {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 2\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"        MarkCommand markCommand \u003d new MarkCommand(List.of(\"abc\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"        // Execute the command","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d markCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"        // Verify that the tasks list remains unchanged","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"        assertEquals(tasks, updatedTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of marking a task in an empty task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"    public void testMarkTaskInEmptyList() {","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"        MarkCommand markCommand \u003d new MarkCommand(List.of(\"1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"        // Execute the command","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d markCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"        // Verify that the tasks list remains unchanged","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"        assertEquals(tasks, updatedTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"     * Tests the behavior of marking a task when no index is provided.","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"    public void testMarkNoIndexProvided() {","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(new ToDo(\"Task 2\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"        MarkCommand markCommand \u003d new MarkCommand(List.of());","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"        // Execute the command","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"        TaskList updatedTasks \u003d markCommand.execute(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"        // Verify that the tasks list remains unchanged","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"amanzainal"},"content":"        assertEquals(tasks, updatedTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"amanzainal":100}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"Hello","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"java -classpath ..\\bin Coat \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"amanzainal":1}}]
