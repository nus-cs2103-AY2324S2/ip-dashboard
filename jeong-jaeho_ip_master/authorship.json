[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"T | 0 | read books","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"jeong-jaeho":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"    protected String by;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"        return this.by;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"        System.out.println(\"Hello! I\u0027m Linus!\\nWhat can I do for you?\\n\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"        ArrayList\u003cTask\u003e tasks \u003d FileManager.loadTasksFromFile(); // Load tasks from file","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"        // while loop to repeat printing of multiple Scanner inputs","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"        // adapted with help of AI","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"        while (true) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"                // Check if the user wants to exit.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"                // When comparing strings for equality, you should use the equals() method, not the \u003d\u003d operator.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"                if (input.equals(\"bye\")) { // exit chat","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Bye. It\u0027s been a pleasure chatting with you!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"                    FileManager.saveTasksToFile(tasks); // Save tasks to file before exiting","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.equals(\"list\")) { // list tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"                        Task currTask \u003d tasks.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"                        System.out.println((i + 1) + \". \" + currTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"                    Integer indexOfTask \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"                    Task currTask \u003d tasks.get(indexOfTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"                    currTask.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(currTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"                    Integer indexOfTask \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"                    Task currTask \u003d tasks.get(indexOfTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"                    currTask.markAsNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(currTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"                    // Check if the input string is long enough","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"                    if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new DukeException(\"Please specify the description of the todo task, \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"                                \"starting from one whitespace away from the keyword \u0027todo\u0027\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"                                \" (e.g. todo borrow book)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"                    String description \u003d input.substring(5);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"jeong-jaeho"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new DukeException(\"Please specify the description of the todo task, \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"jeong-jaeho"},"content":"                                \"starting from one whitespace away from the keyword \u0027todo\u0027\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"jeong-jaeho"},"content":"                                \" (e.g. todo borrow book)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"jeong-jaeho"},"content":"                    Task todo \u003d new Todo(description, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jeong-jaeho"},"content":"                    tasks.add(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"jeong-jaeho"},"content":"                    String[] substrings \u003d input.split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"jeong-jaeho"},"content":"                    if (substrings[0].length() \u003c\u003d 9) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new DukeException(\"Please specify the description of the deadline task \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"jeong-jaeho"},"content":"                                \"(e.g. deadline return book /by Sunday)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"jeong-jaeho"},"content":"                    String description \u003d substrings[0].substring(9);","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"jeong-jaeho"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new DukeException(\"Please specify the description of the deadline task \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"jeong-jaeho"},"content":"                                \"(e.g. deadline return book /by Sunday)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"jeong-jaeho"},"content":"                    if (!input.contains(\" /by \") || substrings[1].isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new DukeException(\"Please state the deadline period \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"jeong-jaeho"},"content":"                                \"(e.g. deadline return book /by Sunday)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"jeong-jaeho"},"content":"                    String by \u003d substrings[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"jeong-jaeho"},"content":"                    Task deadline \u003d new Deadline(description, by, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"jeong-jaeho"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"jeong-jaeho"},"content":"                    if (!input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new DukeException(\"Please state the event period by using \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"jeong-jaeho"},"content":"                                \" /from and /to with correct spacing (eg. event team meeting /from Mon 2pm /to 4pm)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"jeong-jaeho"},"content":"                    String[] substrings \u003d input.split(\" /from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"jeong-jaeho"},"content":"                    String description \u003d substrings[0].substring(6);","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"jeong-jaeho"},"content":"                    String[] substrings2 \u003d substrings[1].split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"jeong-jaeho"},"content":"                    if (substrings2.length \u003c 2 || description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new DukeException(\"Please specify the description of the deadline task \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"jeong-jaeho"},"content":"                                \"(eg. event team meeting /from Mon 2pm /to 4pm)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"jeong-jaeho"},"content":"                    String from \u003d substrings2[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"jeong-jaeho"},"content":"                    String to \u003d substrings2[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"jeong-jaeho"},"content":"                    Task event \u003d new Event(description, from, to, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"jeong-jaeho"},"content":"                    tasks.add(event);","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + event);","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"jeong-jaeho"},"content":"                    if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new DukeException(\"Please state the index of the task you want to delete with correct spacing\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"jeong-jaeho"},"content":"                                \" (e.g. delete 3)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"jeong-jaeho"},"content":"                    int indexOfTask \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"jeong-jaeho"},"content":"                    if (indexOfTask \u003c 0 || indexOfTask \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new DukeException(\"The task index is out of range.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"jeong-jaeho"},"content":"                    tasks.remove(indexOfTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"jeong-jaeho"},"content":"                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"jeong-jaeho"},"content":"                    throw new DukeException(\"Please give commands that start with any of the following:\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"jeong-jaeho"},"content":"                            \" [todo, deadline, event, mark, unmark, list, bye, delete]\");","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"jeong-jaeho"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"jeong-jaeho"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"jeong-jaeho"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"jeong-jaeho"},"content":"        // Close the scanner","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"jeong-jaeho"},"content":"        sc.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":131,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"    protected String from;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"    protected String to;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"    public String getFrom() {","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"        return this.from;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"    public String getTo() {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"        return this.to;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":24}},{"path":"src/main/java/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"import java.io.File;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"public class FileManager {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"    // Referenced HusseinSafwan02\u0027s code and AI","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"    public static ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"            if (file.exists()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"                    Task task \u003d parseTask(line);","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"                scanner.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"            System.out.println(\"File not found. Creating a new file!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"        return tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"    private static Task parseTask(String line) {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"        String[] splitParts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"        String taskType \u003d splitParts[0];","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"        boolean isDone \u003d splitParts[1].equals(\"1\");","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"        String description \u003d splitParts[2];","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"        case \"T\":","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"            task \u003d new Todo(description, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"        case \"D\":","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jeong-jaeho"},"content":"            task \u003d new Deadline(description, splitParts[3], isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"jeong-jaeho"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jeong-jaeho"},"content":"        case \"E\": // Event format in File is E | (isDone) | (Name) | (From) | (To)","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jeong-jaeho"},"content":"            task \u003d new Event(description, splitParts[3], splitParts[4], isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jeong-jaeho"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jeong-jaeho"},"content":"        return task;","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jeong-jaeho"},"content":"    public static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jeong-jaeho"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jeong-jaeho"},"content":"            File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"jeong-jaeho"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"jeong-jaeho"},"content":"                directory.mkdirs(); // Create directory if it doesn\u0027t exist","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"jeong-jaeho"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"jeong-jaeho"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"jeong-jaeho"},"content":"                writer.write(taskToFileString(task) + \"\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"jeong-jaeho"},"content":"            writer.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"jeong-jaeho"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"jeong-jaeho"},"content":"            System.out.println(\"Error saving tasks to the file: \" + e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"jeong-jaeho"},"content":"    private static String taskToFileString(Task task) {","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"jeong-jaeho"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"jeong-jaeho"},"content":"            return \"T | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"jeong-jaeho"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"jeong-jaeho"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"jeong-jaeho"},"content":"            return \"D | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + deadline.getBy();","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"jeong-jaeho"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"jeong-jaeho"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"jeong-jaeho"},"content":"            return \"E | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + event.getFrom() + \" | \" + event.getTo();","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"jeong-jaeho"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"jeong-jaeho"},"content":"            throw new IllegalArgumentException(\"Invalid task type!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"jeong-jaeho":95}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"    // instead of toString(), express description as String explicitly","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"        return this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"    public Boolean isDone() {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jeong-jaeho":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"    public Todo(String name, Boolean isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"todo finish lecture videos","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"todo borrow book","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"list","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"deadline return book /by Monday","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"event team meeting /from Wed 6pm /to 8pm","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"bye","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":6}}]
