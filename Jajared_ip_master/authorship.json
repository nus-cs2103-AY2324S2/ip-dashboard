[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"# \u003cimg src\u003d\"https://media.giphy.com/media/WUlplcMpOCEmTGBtBW/giphy.gif\" width\u003d\"40\"\u003e GeePeeTee: Your Java Task Manager ‚ú® ","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"\u003e The only Java I love is Java Chip Frappuccino ‚òï  - Jared","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"Manage your tasks efficiently with **GeePeeTee**, the Java-based task manager that keeps you organized and productive.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"## Features:","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"- **Ease of Use**: Simply intuitive","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"- **Cross-Platform**: Works on multiple platforms","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"- **Open Source**: Dive into the code","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"## Upcoming Features:","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"- [ ] Add JavaFx GUI","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"- [ ] :tada: Celebrate the first release!","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"\u003e ## How to Get Started","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"1. Clone the repository:","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"```bash","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"git clone https://github.com/Jajared/ip.git","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"```","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"2. Navigate to the project directory","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"```bash","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"cd src/main/java","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"```","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"3. Compile the source code and run the application","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"```bash","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"javac Main.java \u0026\u0026 java Main","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"```","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"This project was forked from [CS2103T ip Repo](https://github.com/nus-cs2103-AY2324S2/ip/). Many thanks to the awesome CS2103T Teaching Team! üëç üèÖ üíØ ","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jajared":33,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"  toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"    archiveBaseName \u003d \"java\"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"    archiveFileName \u003d \"GeePeeTee.jar\"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":42,"Jajared":21}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"# GeePeeTee User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"GeePeeTee is a desktop application for users to manage their tasks using a Command Line Interface (CLI) based input with the visuals of a Graphical User Interface (GUI) to improve ease of use. Manage your tasks efficiently with GeePeeTee, the Java-based task manager that keeps you organized and productive!","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"- [Features](#features)","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"  - [Adding a Todo Task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"  - [Adding a Deadline Task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"  - [Adding an Event Task: `event`](#adding-an-event-task-event)","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"  - [Listing All Tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"  - [Marking a Task as Done: `mark`](#marking-a-task-as-done-mark)","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"  - [Unmarking a Task as Not Done: `unmark`](#unmarking-a-task-as-not-done-unmark)","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"  - [Deleting a Task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"  - [Finding Tasks by Keyword: `find`](#finding-tasks-by-keyword-find)","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"  - [Tagging a Task with Priority: `tag`](#tagging-a-task-with-priority-tag)","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"- [FAQ](#faq)","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"## Quick Start","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"  1. Ensure that you have Java `11` installed in your computer.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"  2. Download the latest `GeePeetee.jar` from [here](https://github.com/Jajared/ip/releases/download/v1.0/GeePeeTee.jar).","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"  3. Copy the file to the folder you want to use as the home folder for the GeePeeTee task manager.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"  4. Open a command terminal, `cd` into the folder you just put the jar file in, and use the `java -jar GeePeeTee.jar` command to run the application. A GUI similar to the below should appear in a few seconds. \u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"  \u003cimg src\u003d\"./Ui.png\" alt\u003d\"GeePeeTee\" height\u003d\"800\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"  \u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"  5. Type the command in the input box at the bottom of the GUI and press Send to execute it. Here are some example commands that you can try: \u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    - `help`: Displays the list of all possible commands \u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    - `list`: Lists all existing tasks \u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    - `event Upcoming meeting /from 2024-03-01 /to 2024-03-02`: Adds an event to the task list with the description `Upcoming meeting`, a start date `2024-03-01` and end date `2024-03-02` \u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    - `delete 1`: Deletes the 1st item on the task list","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"## Features","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eAdding a Todo Task: `todo`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `todo DESCRIPTION`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"üåü **Example**: `todo read book`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"‚úÖ **Expected Outcome**: The application will add a Todo task with the description \"read book\" to the task list and display a confirmation message along with the updated number of tasks in your list.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eAdding a Deadline Task: `deadline`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"Adds a task with a deadline to the task list, with a specified by date.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `deadline DESCRIPTION /by DATE`\u003cbr\u003e ","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"    - The `DATE` specified must be the \u003cstrong\u003eYYYY-MM-DD\u003c/strong\u003e format \u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"üåü **Example**: `deadline return book /by 2023-03-15`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"‚úÖ **Expected Outcome**: The application will add a Deadline task with the description \"return book\" and deadline date of \"2023-03-15\" to the task list and display a confirmation message along with the updated number of tasks in your list.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eAdding an Event Task: `event`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"Adds an event task to the task list, with a specified from and to date.","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `event DESCRIPTION /from DATE /to DATE`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"    - The `DATE` specified must be the \u003cstrong\u003eYYYY-MM-DD\u003c/strong\u003e format \u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"üåü **Example**: `event team meeting /from 2023-03-20 /to 2023-03-21`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"‚úÖ **Expected Outcome**: The application will add an Event task with the description \"team meeting, start date of \"2023-03-20\" and end date of \"2023-03-21\" to the task list and display a confirmation message along with the updated number of tasks in your list.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eListing All Tasks: `list`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"Displays all tasks in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `list`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"‚úÖ **Expected Outcome**: The application will display all tasks in your task list, ordered by priority (if tasks are tagged with a priority level) and order of addition of tasks.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eMarking a Task as Done: `mark`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"Marks an index-specified task as completed.","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `mark INDEX`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"    - The `INDEX` specified refers to the index number shown in the displayed task list. The index must be a positive integer and a valid index.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"üåü **Example**: `mark 2`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"‚úÖ **Expected Outcome**: The application will mark a task as completed, denoted by the [X] symbol on the task.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eUnmarking a Task as Not Done: `unmark`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"Marks an index-specified task as not completed.","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `unmark INDEX`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"    - The `INDEX` specified refers to the index number shown in the displayed task list. The index must be a positive integer and a valid index.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"üåü **Example**: `unmark 2`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"‚úÖ **Expected Outcome**: The application will mark the specified task as completed, denoted by the [ ] symbol on the task.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eDeleting a Task: `delete`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"Removes a specified task from the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `delete INDEX`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"    - The `INDEX` specified refers to the index number shown in the displayed task list. The index must be a positive integer and a valid index.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"üåü **Example**: `delete 3`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"‚úÖ **Expected Outcome**: The application will remove the specified task from the task list and display a confirmation message along with the updated number of tasks in your list.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eFinding Tasks by Keyword: `find`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"Finds tasks by a keyword.","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `find KEYWORD`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"    - The search is case-insensitive, e.g `meeting` will match `Meeting`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"    - Only full words will be matched, e.g `meet` will not match `meeting`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"üåü **Example**: `find book`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"‚úÖ **Expected Outcome**: The application will search through the the task list for any tasks which description contains the specified keyword and displays the list of matching tasks.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eTagging a Task With Priority: `tag`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"Tags an index-specified task with a specified priority level","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `tag INDEX TAG`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"Jajared"},"content":"    - The `INDEX` specified refers to the index number shown in the displayed task list. The index must be a positive integer and a valid index.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"Jajared"},"content":"    - The `TAG` must be one of these 3 supported options (case-insensitive): `high`, `medium`, `low`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"Jajared"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"Jajared"},"content":"üåü **Example**: `tag 1 high`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"Jajared"},"content":"‚úÖ **Expected Outcome**: The application will tag the specified task with a priority level.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"Jajared"},"content":"### \u003cspan style\u003d\"color: #0B6E4F;\"\u003eExiting the Application: `bye`\u003c/span\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"Jajared"},"content":"Exits the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"Jajared"},"content":"üîπ **Format**: `bye`\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"Jajared"},"content":"## FAQ","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"Jajared"},"content":"**Q:** How do i transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"Jajared"},"content":"**A:** Install the app in the other computer and overwrite the **GeePeeTee.txt** data file that it creates with the existing **GeePeeTee.txt** data file in your current folder.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"Jajared"},"content":"## Command Summary ","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"Jajared"},"content":"| Action        | Format                                                  | Examples |","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"Jajared"},"content":"|---------------|---------------------------------------------------------|-----------------|","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"Jajared"},"content":"| Add Todo      | `todo \u003cdescription\u003e`                                    | `todo read book`|","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"Jajared"},"content":"| Add Deadline  | `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e`               | `deadline return book /by 2023-03-15` |","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"Jajared"},"content":"| Add Event     | `event \u003cdescription\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dd\u003e` | `event team meeting /from 2023-03-20 /to 2023-03-21` |","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"Jajared"},"content":"| List Tasks    | `list`                                                  | `list`|","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"Jajared"},"content":"| Mark Done     | `mark \u003ctaskNumber\u003e`                                     | `mark 2`|","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"Jajared"},"content":"| Unmark Done   | `unmark \u003ctaskNumber\u003e`                                   | `unmark 2`|","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"Jajared"},"content":"| Delete Task   | `delete \u003ctaskNumber\u003e`                                   | `delete 3`|","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"Jajared"},"content":"| Find Tasks    | `find \u003ckeyword\u003e`                                        | `find book`|","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"Jajared"},"content":"| Tag Task      | `tag \u003ctaskNumber\u003e \u003ctag\u003e`                                | `tag 1 high`|","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"Jajared"},"content":"| Exit App      | `bye`                                                   | `bye`|","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Jajared":135,"-":19}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":" * Represents a dialog box to display a message.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":" * This class is used to represent a dialog box to display a message. It","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":" * provides","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":" * methods to create a dialog box for the user and for GeePeeTee.","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    private static final double DEFAULT_MIN_WIDTH \u003d 200;","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    private static final double DEFAULT_MIN_HEIGHT \u003d 200;","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    private static final double CHAR_WIDTH \u003d 7;","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    private static final double HEIGHT_MULTIPLIER \u003d 1.5;","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    private double charInterval \u003d 20;","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        setMinWidth(DEFAULT_MIN_WIDTH);","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        setMinHeight(DEFAULT_MIN_HEIGHT);","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"        double textLength \u003d text.length() * CHAR_WIDTH;","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"        double width \u003d Math.max(textLength, DEFAULT_MIN_WIDTH);","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"        setPrefWidth(width);","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        int numLines \u003d (int) Math.ceil(textLength / width);","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"        double height \u003d numLines * CHAR_WIDTH * HEIGHT_MULTIPLIER;","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"        height \u003d Math.max(height, DEFAULT_MIN_HEIGHT);","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"        setPrefHeight(height);","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"        HBox.setMargin(dialog, new Insets(0, 10, 0, 10));","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"        dialog.setStyle(\"-fx-text-fill: #33FF00; -fx-font-family: \u0027Monospaced\u0027; -fx-font-size: 12pt;\");","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"     * right.","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"    private void flip() {","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"     * Returns a dialog box for the user with the specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"     * @return A dialog box for the user with the specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"     * Returns a dialog box for GeePeeTee with the specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"     * @return A dialog box for GeePeeTee with the specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"    public static DialogBox getGeePeeTeeDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"        db.displayTextWithTypingAnimation(text);","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"        db.flip();","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"        return db;","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"     * Displays the specified text with a typing animation.","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"     * @param text The text to be displayed with a typing animation.","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"    public void displayTextWithTypingAnimation(String text) {","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"        StringBuilder displayText \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"        Timeline timeline \u003d new Timeline();","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"        for (int i \u003d 0; i \u003c text.length(); i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"            char c \u003d text.charAt(i);","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"            KeyFrame keyFrame \u003d new KeyFrame(Duration.millis(i * charInterval), e -\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"                displayText.append(c);","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"                dialog.setText(displayText.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"            });","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"Jajared"},"content":"            timeline.getKeyFrames().add(keyFrame);","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"Jajared"},"content":"        timeline.play();","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"Jajared":125}},{"path":"src/main/java/GeePeeTee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import command.CommandResponse;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import exception.GeePeeTeeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import parser.Parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * Represents the main class of the GeePeeTee application.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * This class is responsible for initializing the application and running the","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" * main","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":" * loop of the application, which processes user input and executes the","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":" * corresponding commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"public class GeePeeTee {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    private TaskList listOfTask;","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    private String initializationErrorMessage \u003d null; // Field to store initialization error message","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code GeePeeTee} instance with the specified file path.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"     * @param filePath The file path to be associated with the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"    public GeePeeTee(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"            assert storage !\u003d null : \"Storage was not initialised correctly\";","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"            listOfTask \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"            assert listOfTask !\u003d null : \"Task list was not initialised correctly\";","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"            parser \u003d new Parser(listOfTask, storage, ui);","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"            assert parser !\u003d null : \"Parser was not initialised correctly\";","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"            initializationErrorMessage \u003d ui.getFileNotFoundErrorMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"            initializationErrorMessage \u003d ui.getLoadingErrorMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"            initializationErrorMessage \u003d ui.getErrorMessage(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     * Gets the error message that occurred during initialization.","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     * @return The error message that occurred during initialization","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"    public String getInitializationErrorMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"        return initializationErrorMessage;","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"     * Processes the user input and returns the response.","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"     * @return The response to the user input","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"    public CommandResponse getResponse(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"        return parser.parseInput(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jajared":70}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Jajared":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    private static final String applicationTitle \u003d \"GeePeeTee\";","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    private GeePeeTee geepeetee \u003d new GeePeeTee(\"GeePeeTee.txt\");","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    ","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * Starts the application.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * @param stage The stage to be used to start the application","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"            fxmlLoader.setLocation(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"            AnchorPane.setLeftAnchor(ap, 0.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"            AnchorPane.setRightAnchor(ap, 0.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"            AnchorPane.setTopAnchor(ap, 0.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"            AnchorPane.setBottomAnchor(ap, 0.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"            assert ap !\u003d null : \"FXMLLoader failed to load AnchorPane\";","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"            stage.setTitle(applicationTitle);","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"            assert stage.getScene() !\u003d null : \"Scene was not set correctly\";","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"            MainWindow controller \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"            assert controller !\u003d null : \"FXMLLoader failed to load MainWindow controller\";","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"            assert geepeetee !\u003d null : \"GeePeeTee was not initialised correctly\";","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"            controller.setGeePeeTee(geepeetee);","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"            String errorMessage \u003d geepeetee.getInitializationErrorMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"            if (errorMessage !\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"                fxmlLoader.\u003cMainWindow\u003egetController().handleInitializationError(errorMessage);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"            stage.show();","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":54}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"import command.CommandResponse;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    private GeePeeTee geepeetee;","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    private Image neutralImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot_neutral.jpeg\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    private Image happyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot_happy.jpeg\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    private Image unhappyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot_unhappy.jpeg\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"     * Initializes the main window.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"        scrollPane.setVvalue(0.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        // Styling","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"        scrollPane.setStyle(\"-fx-background: #010101;\");","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"        dialogContainer.setStyle(\"-fx-background-color: #010101;\");","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"        userInput.setStyle(","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"                \"-fx-background-color: #010101; \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"                \"-fx-text-fill: #ffffff; \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"                \"-fx-font-family: \u0027Monospaced\u0027; \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"                \"-fx-font-size: 12pt\"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"                .add(DialogBox.getGeePeeTeeDialog(\"Hello! I\u0027m GeePeeTee. How can I help you?\", neutralImage));","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     * Sets the GeePeeTee instance for the main window.","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     * @param geepeetee The GeePeeTee instance to be set","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"    public void setGeePeeTee(GeePeeTee geepeetee) {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"        this.geepeetee \u003d geepeetee;","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"     * If the user input is \"bye\", the application will exit.","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"                    DialogBox.getGeePeeTeeDialog(\"Bye. Hope to see you again soon!\", happyImage));","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"            pause.setOnFinished(event -\u003e System.exit(0));","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"            pause.play();","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"            CommandResponse response \u003d geepeetee.getResponse(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"            String responseString \u003d response.getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"            Boolean isError \u003d response.isError();","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"                    isError ? DialogBox.getGeePeeTeeDialog(responseString, unhappyImage)","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"                            : DialogBox.getGeePeeTeeDialog(responseString, happyImage));","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"     * Adds a dialog box to the dialog container to display an error message when","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"     * an error occurs during initialization.","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"     * @param errorMessage The error message to be displayed","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"    public void handleInitializationError(String errorMessage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"        dialogContainer.getChildren().add(DialogBox.getGeePeeTeeDialog(errorMessage, unhappyImage));","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Jajared":99}},{"path":"src/main/java/command/CommandResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents a response to a command.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * This class is used to represent a response to a command. It provides methods","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * to get the message and error status of the response.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"public class CommandResponse {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"    private final String message;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"    private final boolean isError;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code CommandResponse} instance with the specified message","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * and error status.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * @param message The message to be associated with the response.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * @param isError The error status of the response.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    public CommandResponse(String message, boolean isError) {","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"        this.isError \u003d isError;","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * Returns the message associated with the response.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"     * @return The message associated with the response.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"        return message;","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * Returns the error status of the response.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     * @return The error status of the response.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    public boolean isError() {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"        return isError;","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"     * Returns a new {@code CommandResponse} instance that represents an erroneous","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"     * response.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"     * @param message The message to be associated with the response.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"     * @return A new {@code CommandResponse} instance with the specified message and","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"     *         error status.","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"    public static CommandResponse error(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        return new CommandResponse(message, true);","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"     * Returns a new {@code CommandResponse} instance that represents a successful","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"     * response.","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"     * @param message The message to be associated with the response.","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"     * @return A new {@code CommandResponse} instance with the specified message and","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"     *         success status.","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"    public static CommandResponse success(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"        return new CommandResponse(message, false);","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"Jajared":67}},{"path":"src/main/java/exception/GeePeeTeeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents exceptions specific to the GeePeeTee application.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Exception} class and provides a","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * mechanism to handle errors that are specific to the GeePeeTee","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * application\u0027s operations.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * The class allows for the creation of {@code GeePeeTeeException} instances","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * with custom messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"public class GeePeeTeeException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code GeePeeTeeException} instance with the specified","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    public GeePeeTeeException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     * Returns the error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     * @return The error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        return super.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jajared":33}},{"path":"src/main/java/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents an exception that is thrown to indicate that an operation","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * involving date validation has failed due to an invalid date format or value.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Exception} class, allowing","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * {@code InvalidDateException} to be caught and handled specifically for cases","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * related to date validation failures.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code InvalidDateException} instance with the specified","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"     * error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    public InvalidDateException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * Returns the error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     * @return The error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":31}},{"path":"src/main/java/exception/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents an exception that is thrown when an attempt to create","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * a task fails due to an incorrectly formatted input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Exception} class and is used to indicate errors","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * encountered due to incorrect formatting of task input or data. It provides a","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * constructor to create exception instances with a custom message that can","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * describe","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * the specific formatting issue encountered.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"public class InvalidTaskFormatException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code InvalidTaskFormatException} instance with the","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * specified","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    public InvalidTaskFormatException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * Returns the error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"     * @return The error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":34}},{"path":"src/main/java/exception/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents an exception that occurs when an invalid task index is provided to","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * This class extends {@link Exception} to provide detailed information about","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * the error","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * related to task index operations, such as accessing or modifying a task at an","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * index","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * that does not exist or is otherwise deemed invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * The purpose of this exception is to facilitate error handling specific to","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * task index","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * operations, enabling more precise feedback and actions to be taken when such","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" * errors occur.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"public class InvalidTaskIndexException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code InvalidTaskIndexException} instance with the","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"     * specified error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    public InvalidTaskIndexException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"     * Returns the error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"     * @return The error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":38}},{"path":"src/main/java/parser/DeadlineParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * Represents a parser that is used to parse deadline tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * This class is used to parse deadline tasks from the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"public class DeadlineParser {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * Parses the user input and returns a deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     * @param input The user input","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"     * @return The deadline task","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskFormatException If the user input is in an invalid format","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidDateException       If the date in the user input is invalid","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    public static Deadline parseDeadline(String input) throws InvalidTaskFormatException, InvalidDateException {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"        String[] parts \u003d input.substring(\"deadline \".length()).split(\" /by \", -1);","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskFormatException(","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"                    \"Invalid deadline format. Please use \u0027deadline description /by yyyy-MM-dd\u0027.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskFormatException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        LocalDate parsedBy;","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"            parsedBy \u003d LocalDate.parse(parts[1].trim(), formatter);","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"            throw new InvalidDateException(\"Unable to parse date. Ensure the date is in \u0027yyyy-MM-dd\u0027 format.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"        if (parsedBy.isBefore(LocalDate.now())) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"            throw new InvalidDateException(\"The deadline date cannot be in the past.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        return new Deadline(description, parsedBy);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Jajared":49}},{"path":"src/main/java/parser/EventParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import task.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * Represents a parser that is used to parse event tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * This class is used to parse event tasks from the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"public class EventParser {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * Parses the user input and returns an event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     * @param input The user input","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"     * @return The event task","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskFormatException If the user input is in an invalid format","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidDateException       If the date in the user input is invalid","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    public static Event parseEvent(String input) throws InvalidTaskFormatException, InvalidDateException {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"        String[] parts \u003d input.substring(\"event \".length()).split(\" /from | /to \", -1);","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"        if (parts.length !\u003d 3 || parts[0].isEmpty() || parts[1].isEmpty() || parts[2].isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskFormatException(","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"                    \"Invalid event format. Please use \u0027event description /from yyyy-MM-dd /to yyyy-MM-dd\u0027.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskFormatException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"        LocalDate parsedFrom;","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        LocalDate parsedTo;","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"            parsedFrom \u003d LocalDate.parse(parts[1].trim(), formatter);","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"            parsedTo \u003d LocalDate.parse(parts[2].trim(), formatter);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"            throw new InvalidDateException(\"Unable to parse date. Ensure the date is in \u0027yyyy-MM-dd\u0027 format.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        if (parsedFrom.isBefore(LocalDate.now())) {","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"            throw new InvalidDateException(\"The start date of an event cannot be in the past.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"        if (parsedTo.isBefore(LocalDate.now())) {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"            throw new InvalidDateException(\"The end date of an event cannot be in the past.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        if (parsedTo.isBefore(parsedFrom)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"            throw new InvalidDateException(\"The end date of an event cannot be before the start date.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"        return new Event(description, parsedFrom, parsedTo);","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Jajared":58}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import command.CommandResponse;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import exception.GeePeeTeeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskIndexException;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"import task.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"import task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"import utils.EnumConverter;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":" * Represents a parser that processes user input and executes the corresponding","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":" * commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":" * This class is responsible for parsing user input and executing the","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":" * corresponding commands, such as adding, deleting, or marking tasks, as well","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":" * as","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":" * providing help and exiting the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Parser} instance with the specified task list,","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     * storage","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"     * and user interface.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"     * @param taskList The task list to be associated with the parser.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"     * @param storage  The storage to be associated with the parser.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"     * @param ui       The user interface to be associated with the parser.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"    public Parser(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     * Parses the user input and executes the corresponding command.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be parsed and executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"    public CommandResponse parseInput(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"        switch (command.toLowerCase()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        case \"help\":","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(ui.getListOfCommandsMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"        case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(taskList.printList());","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"            return processMarkCommand(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"            return processUnmarkCommand(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"            return processDeleteCommand(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"        case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"            return processEventCommand(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"            return processDeadlineCommand(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"            return processToDoCommand(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"        case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"            return processFindCommand(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"        case \"tag\":","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"            return processTagCommand(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(\"I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"     * Processes the mark command by attempting to mark the task at the specified","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"     * index.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskIndexException If the index of the task is invalid or does","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"     *                                   not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException        If an error occurs while marking the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"    private CommandResponse processMarkCommand(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"            if (input.trim().equals(\"mark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"            int markIndex \u003d parseTaskIndex(input.split(\" \")[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"            Task taskToMark \u003d taskList.getTask(markIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(ui.getTaskMarkedMessage(taskToMark));","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"mark\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"mark\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"     * Processes the unmark command by attempting to unmark the task at the","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"     * specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskIndexException If the index of the task is invalid or does","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"     *                                   not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException        If an error occurs while unmarking the","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"     *                                   task.","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"    private CommandResponse processUnmarkCommand(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Jajared"},"content":"            if (input.trim().equals(\"unmark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Jajared"},"content":"            int unmarkIndex \u003d parseTaskIndex(input.split(\" \")[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"Jajared"},"content":"            Task taskToUnmark \u003d taskList.getTask(unmarkIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Jajared"},"content":"            taskToUnmark.unmarkAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(ui.getTaskUnmarkedMessage(taskToUnmark));","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Jajared"},"content":"            return CommandResponse","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"Jajared"},"content":"                    .error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"unmark\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Jajared"},"content":"            return CommandResponse","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"Jajared"},"content":"                    .error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"unmark\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"Jajared"},"content":"     * Processes the delete command by attempting to delete the task at the","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"Jajared"},"content":"     * specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskIndexException If the index of the task is invalid or does","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Jajared"},"content":"     *                                   not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException        If an error occurs while deleting the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Jajared"},"content":"    private CommandResponse processDeleteCommand(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Jajared"},"content":"            if (input.trim().equals(\"delete\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"Jajared"},"content":"            int deleteIndex \u003d parseTaskIndex(input.split(\" \")[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":154,"author":{"gitId":"Jajared"},"content":"            Task taskToDelete \u003d taskList.getTask(deleteIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"Jajared"},"content":"            taskList.removeTask(deleteIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(ui.getDeleteTaskMessage(taskToDelete, taskList.getTaskCount()));","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"Jajared"},"content":"            return CommandResponse","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"Jajared"},"content":"                    .error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"delete\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":161,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"Jajared"},"content":"            return CommandResponse","lastModifiedDate":"2024-02-14"},{"lineNumber":163,"author":{"gitId":"Jajared"},"content":"                    .error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"delete\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":164,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":168,"author":{"gitId":"Jajared"},"content":"     * Processes the event command by attempting to create and add a new event task","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"Jajared"},"content":"     * to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":171,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidDateException       If the date of the event is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskFormatException If the input format of the event is","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"Jajared"},"content":"     *                                    incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException         If an error occurs while adding the event","lastModifiedDate":"2024-02-06"},{"lineNumber":176,"author":{"gitId":"Jajared"},"content":"     *                                    task.","lastModifiedDate":"2024-02-06"},{"lineNumber":177,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"Jajared"},"content":"    private CommandResponse processEventCommand(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":179,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":180,"author":{"gitId":"Jajared"},"content":"            Event newEvent \u003d EventParser.parseEvent(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"Jajared"},"content":"            taskList.addTask(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(ui.getAddTaskMessage(newEvent, taskList.getTaskCount()));","lastModifiedDate":"2024-02-14"},{"lineNumber":184,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidDateException | InvalidTaskFormatException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"event\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":186,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":187,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage()));","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":192,"author":{"gitId":"Jajared"},"content":"     * Processes the deadline command by attempting to create and add a new deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"Jajared"},"content":"     * task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":195,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":196,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidDateException       If the date of the deadline is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskFormatException If the input format of the deadline is","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"Jajared"},"content":"     *                                    incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException         If an error occurs while adding the","lastModifiedDate":"2024-02-06"},{"lineNumber":200,"author":{"gitId":"Jajared"},"content":"     *                                    deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":201,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"Jajared"},"content":"    private CommandResponse processDeadlineCommand(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":203,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":204,"author":{"gitId":"Jajared"},"content":"            Deadline newDeadline \u003d DeadlineParser.parseDeadline(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"Jajared"},"content":"            taskList.addTask(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(ui.getAddTaskMessage(newDeadline, taskList.getTaskCount()));","lastModifiedDate":"2024-02-14"},{"lineNumber":208,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidDateException | InvalidTaskFormatException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":209,"author":{"gitId":"Jajared"},"content":"            return CommandResponse","lastModifiedDate":"2024-02-14"},{"lineNumber":210,"author":{"gitId":"Jajared"},"content":"                    .error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"deadline\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":211,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":212,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage()));","lastModifiedDate":"2024-02-19"},{"lineNumber":213,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":217,"author":{"gitId":"Jajared"},"content":"     * Processes the todo command by attempting to create and add a new todo task to","lastModifiedDate":"2024-02-03"},{"lineNumber":218,"author":{"gitId":"Jajared"},"content":"     * the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":219,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":220,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":221,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskFormatException If the input format of the todo is","lastModifiedDate":"2024-02-03"},{"lineNumber":222,"author":{"gitId":"Jajared"},"content":"     *                                    incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":223,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException         If an error occurs while adding the todo","lastModifiedDate":"2024-02-06"},{"lineNumber":224,"author":{"gitId":"Jajared"},"content":"     *                                    task.","lastModifiedDate":"2024-02-06"},{"lineNumber":225,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"Jajared"},"content":"    private CommandResponse processToDoCommand(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":227,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":228,"author":{"gitId":"Jajared"},"content":"            ToDo newToDo \u003d ToDoParser.parseToDo(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":229,"author":{"gitId":"Jajared"},"content":"            taskList.addTask(newToDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":230,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":231,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(ui.getAddTaskMessage(newToDo, taskList.getTaskCount()));","lastModifiedDate":"2024-02-13"},{"lineNumber":232,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":233,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"todo\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":234,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":235,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage()));","lastModifiedDate":"2024-02-19"},{"lineNumber":236,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":239,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":240,"author":{"gitId":"Jajared"},"content":"     * Processes the find command.","lastModifiedDate":"2024-02-03"},{"lineNumber":241,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":242,"author":{"gitId":"Jajared"},"content":"     * @param input The user input","lastModifiedDate":"2024-02-03"},{"lineNumber":243,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":244,"author":{"gitId":"Jajared"},"content":"    private CommandResponse processFindCommand(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":245,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":246,"author":{"gitId":"Jajared"},"content":"            if (input.trim().split(\" \").length \u003c 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":247,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskFormatException(\"Please provide a keyword to find.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":248,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":249,"author":{"gitId":"Jajared"},"content":"            String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":250,"author":{"gitId":"Jajared"},"content":"            ArrayList\u003cTask\u003e result \u003d taskList.findTasks(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":251,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(ui.getMatchingTasksMessage(result));","lastModifiedDate":"2024-02-13"},{"lineNumber":252,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":253,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"find\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":254,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":255,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":256,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":257,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":258,"author":{"gitId":"Jajared"},"content":"     * Processes the tag command to set priority to a task.","lastModifiedDate":"2024-02-14"},{"lineNumber":259,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-14"},{"lineNumber":260,"author":{"gitId":"Jajared"},"content":"     * @param input The user input","lastModifiedDate":"2024-02-14"},{"lineNumber":261,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":262,"author":{"gitId":"Jajared"},"content":"    private CommandResponse processTagCommand(String input) {","lastModifiedDate":"2024-02-14"},{"lineNumber":263,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":264,"author":{"gitId":"Jajared"},"content":"            if (input.trim().split(\" \").length \u003c 3) {","lastModifiedDate":"2024-02-14"},{"lineNumber":265,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskFormatException(\"Please provide a task index and a priority to tag.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":266,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":267,"author":{"gitId":"Jajared"},"content":"            int tagIndex \u003d parseTaskIndex(input.split(\" \")[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":268,"author":{"gitId":"Jajared"},"content":"            Task taskToTag \u003d taskList.getTask(tagIndex);","lastModifiedDate":"2024-02-14"},{"lineNumber":269,"author":{"gitId":"Jajared"},"content":"            String priorityInput \u003d input.split(\" \")[2];","lastModifiedDate":"2024-02-14"},{"lineNumber":270,"author":{"gitId":"Jajared"},"content":"            Priority priority \u003d EnumConverter.convertStringToPriority(priorityInput);","lastModifiedDate":"2024-02-14"},{"lineNumber":271,"author":{"gitId":"Jajared"},"content":"            taskToTag.setPriority(priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":272,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-02-14"},{"lineNumber":273,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.success(ui.getTagTaskMessage(taskToTag));","lastModifiedDate":"2024-02-14"},{"lineNumber":274,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":275,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"tag\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":276,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":277,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage() + ui.getCommandDescriptionMessage(\"tag\")));","lastModifiedDate":"2024-02-14"},{"lineNumber":278,"author":{"gitId":"Jajared"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":279,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(\"Invalid priority. Please use \u0027high\u0027, \u0027medium\u0027 or \u0027low\u0027.\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":280,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":281,"author":{"gitId":"Jajared"},"content":"            return CommandResponse.error(ui.getErrorMessage(e.getMessage()));","lastModifiedDate":"2024-02-19"},{"lineNumber":282,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":283,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":284,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":285,"author":{"gitId":"Jajared"},"content":"    private int parseTaskIndex(String input) throws InvalidTaskIndexException {","lastModifiedDate":"2024-02-14"},{"lineNumber":286,"author":{"gitId":"Jajared"},"content":"        int index;","lastModifiedDate":"2024-02-14"},{"lineNumber":287,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":288,"author":{"gitId":"Jajared"},"content":"            index \u003d Integer.parseInt(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":289,"author":{"gitId":"Jajared"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":290,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskIndexException(\"The index of a task must be a number.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":291,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":292,"author":{"gitId":"Jajared"},"content":"        return index;","lastModifiedDate":"2024-02-14"},{"lineNumber":293,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":294,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":294}},{"path":"src/main/java/parser/ToDoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * Represents a parser that is used to parse todo tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * This class is used to parse todo tasks from the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"public class ToDoParser {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"     * Parses the user input and returns a todo task.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * @param input The user input","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * @return The todo task","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskFormatException If the user input is in an invalid format","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    public static ToDo parseToDo(String input) throws InvalidTaskFormatException {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"        String description \u003d input.substring(\"todo \".length()).trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskFormatException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"        return new ToDo(description);","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Jajared":27}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"import exception.GeePeeTeeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"import task.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"import task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"import utils.EnumConverter;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":" * Represents a storage class that handles the loading and saving of task lists","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":" * to","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":" * the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":" * This class is responsible for loading and saving task lists to the hard disk,","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":" * allowing the task list to be persisted across multiple sessions of the","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":" * application.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    public static final String BASE_PATH \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    private String filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Storage} instance with the specified file name.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     * @param fileName The name of the file to be associated with the storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"     * @throws FileNotFoundException If the file specified by the file name does not","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"     *                               exist and cannot be created.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"     * @throws IOException           If an I/O error occurs while creating the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"    public Storage(String fileName) throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"        assert fileName !\u003d null : \"File name cannot be null.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"            this.filePath \u003d BASE_PATH + \"/\" + fileName;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"            assert Paths.get(this.filePath).isAbsolute() : \"File path must be absolute.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"            throw new IOException();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"     * Loads the task list from the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"     * @return The task list loaded from the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"     * @throws FileNotFoundException If the file specified by the file name does not","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"     *                               exist and cannot be created.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException    If the file contains an invalid task type.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"     * @throws IOException           If an I/O error occurs while reading the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() throws FileNotFoundException, GeePeeTeeException, IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"        try (Scanner s \u003d new Scanner(f)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"                Task task \u003d parseTaskFromLine(line);","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"                result.add(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"        return result;","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"     * Parses a task from a line in the task list file.","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"     * @param line The line in the task list file","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"     * @return The task parsed from the line","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If the file contains an invalid task type.","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"    private Task parseTaskFromLine(String line) throws GeePeeTeeException {","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"        validateParts(parts);","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"        Priority priority \u003d EnumConverter.convertStringToPriority(parts[2]);","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"        String description \u003d parts[3];","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"        Task task;","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"        switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"        case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"            task \u003d createToDoTask(description, priority);","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"        case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(parts[4]);","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"            task \u003d createDeadlineTask(description, priority, deadlineDate);","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"        case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"            LocalDate startDate \u003d LocalDate.parse(parts[4]);","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"            LocalDate endDate \u003d LocalDate.parse(parts[5]);","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"            task \u003d createEventTask(description, priority, startDate, endDate);","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"            throw new GeePeeTeeException(\"File contains invalid task type.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"            task.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"        return task;","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"Jajared"},"content":"     * Validates the parts of a line in the task list file.","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"Jajared"},"content":"     * @param parts The parts of a line in the task list file","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If the number of parts in the line is invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"Jajared"},"content":"    private void validateParts(String[] parts) throws GeePeeTeeException {","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"Jajared"},"content":"        if (parts.length \u003c 4 || parts.length \u003e 6) {","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"Jajared"},"content":"            throw new GeePeeTeeException(\"Invalid number of parts in task line.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"Jajared"},"content":"     * Creates a todo task with the specified description and priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"Jajared"},"content":"     * @param priority    The priority of the todo task","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"Jajared"},"content":"     * @return The todo task","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"Jajared"},"content":"    private Task createToDoTask(String description, Priority priority) {","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"Jajared"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"Jajared"},"content":"        todo.setPriority(priority);","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"Jajared"},"content":"        return todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"Jajared"},"content":"     * Creates a deadline task with the specified description, priority and deadline","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"Jajared"},"content":"     * date.","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"Jajared"},"content":"     * @param description  The description of the deadline task","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"Jajared"},"content":"     * @param priority     The priority of the deadline task","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"Jajared"},"content":"     * @param deadlineDate The deadline date of the deadline task","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"Jajared"},"content":"     * @return The deadline task","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"Jajared"},"content":"    private Task createDeadlineTask(String description, Priority priority, LocalDate deadlineDate) {","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"Jajared"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"Jajared"},"content":"        deadline.setPriority(priority);","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"Jajared"},"content":"        return deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"Jajared"},"content":"     * Creates an event task with the specified description, priority, start date","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"Jajared"},"content":"     * and end date.","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the event task","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"Jajared"},"content":"     * @param priority    The priority of the event task","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"Jajared"},"content":"     * @param startDate   The start date of the event task","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"Jajared"},"content":"     * @param endDate     The end date of the event task","lastModifiedDate":"2024-02-19"},{"lineNumber":169,"author":{"gitId":"Jajared"},"content":"     * @return The event task","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"Jajared"},"content":"    private Task createEventTask(String description, Priority priority, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"Jajared"},"content":"        Event event \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"Jajared"},"content":"        event.setPriority(priority);","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"Jajared"},"content":"        return event;","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"Jajared"},"content":"     * Saves the task list to the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"Jajared"},"content":"     * @param inputList The task list to be saved to the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If an error occurs while saving the task list to","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"Jajared"},"content":"     *                            the","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"Jajared"},"content":"     *                            hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"Jajared"},"content":"    public void saveTaskList(ArrayList\u003cTask\u003e inputList) throws GeePeeTeeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"Jajared"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"Jajared"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"Jajared"},"content":"            for (Task task : inputList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"Jajared"},"content":"                fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"Jajared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"Jajared"},"content":"            throw new GeePeeTeeException(\"Error saving the task list file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":196}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Task} class and is used to represent tasks that","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * have a deadline. It provides a constructor to create a new deadline task with","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * a description and a deadline date.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Deadline} instance with the specified description and","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * deadline date.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     * @param by          The deadline date of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    public Deadline(String description, LocalDate deadlineDate) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"     * Returns the deadline date of the deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"     * @return The deadline date of the deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    public LocalDate getDeadlineDate() {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        return deadlineDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"     * Returs the string representation of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        String deadlineDateString \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        return super.getPriorityString() + \"[D]\" + super.toString() + \" (by: \" + deadlineDateString + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the deadline task to be saved in the","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     * hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the deadline task to be saved in the","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     *         hard disk.","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        return \"D | \" + super.toFileString() + \" | \" + deadlineDate;","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":61}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Task} class and is used to represent tasks that","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * have a start and end date. It provides a constructor to create a new event","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * task with a description, start date and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Event} instance with the specified description, start","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     * date and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * @param from        The start date of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     * @param by          The end date of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    public Event(String description, LocalDate startDate, LocalDate deadlineDate) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     * Returns the start date of the event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * @return The start date of the event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        return startDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"     * Returns the end date of the event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"     * @return The end date of the event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"    public LocalDate getDeadlineDate() {","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"        return deadlineDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     * Returs the string representation of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"        String startDateString \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        String deadlineDateString \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"        return super.getPriorityString() + \"[E]\" + super.toString() + \" (from: \" + startDateString + \" to: \"","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"                + deadlineDateString + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the event task to be saved in the hard","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"     * disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the event task to be saved in the hard","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"     *         disk.","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"        return \"E | \" + super.toFileString() + \" | \" + startDate + \" | \" + deadlineDate;","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":75}},{"path":"src/main/java/task/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents the priority of a task.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * This enum is used to represent the priority of a task. It provides a set of","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * priority levels that can be used to categorize tasks based on their","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * importance","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * or urgency.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"public enum Priority {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    HIGH,","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    MEDIUM,","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    LOW,","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    NONE","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Jajared":17}},{"path":"src/main/java/task/PriorityComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * Represents a comparator to compare tasks based on their priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * This class is used to compare tasks based on their priority. It provides a","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * method to compare two tasks based on their priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"public class PriorityComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"     * Compares two tasks based on their priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * @param t1 The first task to be compared.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * @param t2 The second task to be compared.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * @return A negative integer, zero, or a positive integer as the first task has","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     *         a higher, equal, or lower priority than the second task.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"        if (t1.getPriority() \u003d\u003d null \u0026\u0026 t2.getPriority() \u003d\u003d null) {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"            return 0;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"        } else if (t1.getPriority() \u003d\u003d null) {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"            return 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"        } else if (t2.getPriority() \u003d\u003d null) {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"            return -1;","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"            return t1.getPriority().compareTo(t2.getPriority());","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Jajared":33}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import utils.EnumConverter;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * Represents a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * This class is used to represent tasks that have a description and a status","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * indicating whether the task is done or not. It provides a constructor to","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * create a new task with a description.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    protected Priority priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Task} instance with the specified description.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"        this.priority \u003d Priority.NONE;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        return this.description;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     * Returns the status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * @return The status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"     * Returns the priority of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"     * @return The priority of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"    public Priority getPriority() {","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"        return this.priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     * Sets the priority of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * @param priority The priority of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"     * Removes the priority of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"    public void removePriority() {","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"        this.priority \u003d null;","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"     * Returns the priority string representation of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"     * @return The priority string representation of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"    public String getPriorityString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"        if (priority \u003d\u003d Priority.NONE) {","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"            return \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"        return \"[\" + EnumConverter.convertPriorityToString(priority) + \"] \";","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the task to be saved in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the task to be saved in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + EnumConverter.convertPriorityToFileString(priority) + \" | \" + description;","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":112}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Task} class and is used to represent tasks that","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * have no specific deadline or start and end date. It provides a constructor to","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * create a new to-do task with a description.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code ToDo} instance with the specified description.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     * Returs the string representation of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"        return super.getPriorityString() + \"[T]\" + super.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the to-do task to be saved in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the to-do task to be saved in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":41}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package tasklist;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskIndexException;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import task.PriorityComparator;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * This class is used to represent a list of tasks. It provides methods to add,","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * remove and get tasks from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    private ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code TaskList} instance with an empty list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"        this.tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code TaskList} instance with the specified list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"     * @param tasksList The list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"     * @return The number of tasks in the list","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"        return this.tasksList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"     * @return The list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        return this.tasksList;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"     * @param index The index of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"     * @return The task at the specified index","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"    public Task getTask(int index) throws InvalidTaskIndexException {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskIndexException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"        if (index \u003e this.getTaskCount()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskIndexException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"        Task task \u003d this.tasksList.get(index - 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskIndexException(\"The task at index \" + index + \" does not exist.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"        return task;","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"     * Prints the list of tasks, sorted by priority.","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"    public String printList() {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"        if (this.tasksList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"        this.tasksList.sort(new PriorityComparator());","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"        String listOutput \u003d this.tasksList.stream()","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"                .map(task -\u003e (this.tasksList.indexOf(task) + 1) + \". \" + task + \"\\n\")","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"        return \"Here are the tasks in your list:\\n\" + listOutput;","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be added","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"        this.tasksList.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"     * @param index The index of the task to be removed","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"        this.tasksList.remove(index - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"     * Finds tasks that match the keyword","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"     * @param keyword The keyword to be matched","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"        final String lowerCaseKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"        return this.tasksList.stream()","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"                .filter(task -\u003e Arrays.asList(task.getDescription().toLowerCase().split(\"\\\\s+\"))","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"                        .contains(lowerCaseKeyword))","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":120}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.util.Map;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * This class is used to display messages to the user, such as welcome and","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * goodbye messages, error messages, and messages related to tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    private static final Map\u003cString, String\u003e commandDescriptions \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    static {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"todo\", \"Add a todo task: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"deadline\", \"Add a deadline task: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"event\", \"Add an event task: event \u003cdescription\u003e /at \u003cdate\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"list\", \"List all tasks: list\");","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"mark\", \"Mark a task as done: mark \u003ctaskNumber\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"unmark\", \"Mark a task as not done: unmark \u003ctaskNumber\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"delete\", \"Remove a task: delete \u003ctaskNumber\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"find\", \"Find tasks by keyword: find \u003ckeyword\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"tag\", \"Tag a task: tag \u003ctaskNumber\u003e \u003ctag\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        commandDescriptions.put(\"bye\", \"Exit the application: bye\");","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     * @return The welcome message","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"        String botName \u003d \"GeePeeTee\";","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"        return \"Hello! I\u0027m \" + botName + \"\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"     * @return The goodbye message","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * Displays an error message when loading the task list file.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"     * @return The loading error message","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"    public String getLoadingErrorMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        return \"Error loading the task list file.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"     * Displays an error message when the task list file is not found.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"     * @return The file not found error message","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"    public String getFileNotFoundErrorMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"        return \"File not found.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be displayed","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"     * @return The error message","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"    public String getErrorMessage(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"        return \"Oops! An error occurred:\\n\" + message;","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"     * Displays the task to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be displayed","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"     * @return The task message","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"    public String getTaskMessage(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"        return task.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"     * Displays the unmarking of a task as undone to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be unmarked as undone","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"     * @return The task unmarked message","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"    public String getTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + getTaskMessage(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"     * Displays the marking of a task as done to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be marked as done","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"     * @return The task marked message","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"    public String getTaskMarkedMessage(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + getTaskMessage(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"     * Displays the addition of a task to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"     * @param task      The task to be added","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"     * @param taskCount The number of tasks in the list","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"    public String getAddTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + getTaskMessage(task) + \"\\n\" + getTaskCountMessage(taskCount);","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"Jajared"},"content":"     * Displays the deletion of a task to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"Jajared"},"content":"     * @param task      The task to be deleted","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Jajared"},"content":"     * @param taskCount The number of tasks in the list","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Jajared"},"content":"     * @return The task deleted message","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Jajared"},"content":"    public String getDeleteTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"Jajared"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + getTaskMessage(task) + \"\\n\" + getTaskCountMessage(taskCount);","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"Jajared"},"content":"     * Displays the list of commands available to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"Jajared"},"content":"    public String getListOfCommandsMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":136,"author":{"gitId":"Jajared"},"content":"        return \"Here are the available commands:\\n\" + commandDescriptions.entrySet().stream()","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"Jajared"},"content":"                .map(entry -\u003e entry.getKey() + \" - \" + entry.getValue() + \"\\n\")","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"Jajared"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":142,"author":{"gitId":"Jajared"},"content":"     * Displays specific command to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-14"},{"lineNumber":144,"author":{"gitId":"Jajared"},"content":"     * @param command The command to be displayed","lastModifiedDate":"2024-02-14"},{"lineNumber":145,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"Jajared"},"content":"    public String getCommandDescriptionMessage(String command) {","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"Jajared"},"content":"        return \"\\n\\n\" + \"Format: \" + commandDescriptions.get(command);","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":151,"author":{"gitId":"Jajared"},"content":"     * Displays the list of keyword matching tasks to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"Jajared"},"content":"     * @param matchingTasks The list of tasks matching the keyword","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"Jajared"},"content":"    public String getMatchingTasksMessage(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":156,"author":{"gitId":"Jajared"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":157,"author":{"gitId":"Jajared"},"content":"            return \"There are no matching tasks in your list.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"Jajared"},"content":"        String matchingTasksOutput \u003d matchingTasks.stream()","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"Jajared"},"content":"                .map(task -\u003e (matchingTasks.indexOf(task) + 1) + \". \" + task + \"\\n\")","lastModifiedDate":"2024-02-14"},{"lineNumber":161,"author":{"gitId":"Jajared"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2024-02-14"},{"lineNumber":162,"author":{"gitId":"Jajared"},"content":"        return \"Here are the matching tasks in your list:\\n\" + matchingTasksOutput;","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"Jajared"},"content":"    public String getTagTaskMessage(Task task) {","lastModifiedDate":"2024-02-14"},{"lineNumber":166,"author":{"gitId":"Jajared"},"content":"        return \"Got it. I have tagged this task:\\n\" + getTaskMessage(task);","lastModifiedDate":"2024-02-14"},{"lineNumber":167,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":168,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":169,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":170,"author":{"gitId":"Jajared"},"content":"     * Displays the number of tasks remaining in the task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":171,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"Jajared"},"content":"     * @param taskCount The number of tasks in the list","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the number of remaining tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"Jajared"},"content":"    private String getTaskCountMessage(int taskCount) {","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"Jajared"},"content":"        if (taskCount \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"Jajared"},"content":"            return \"Now you have \" + taskCount + \" task in the list.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"Jajared"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"Jajared"},"content":"            return \"Now you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":182}},{"path":"src/main/java/utils/EnumConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package utils;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import task.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * Represents a converter that is used to convert between different types of","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * enums.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * This class is used to convert between different types of enums.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"public class EnumConverter {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"     * Converts the string representation of a priority to a {@code Priority} enum.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * @param priority The string representation of a priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * @return The {@code Priority} enum.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    public static Priority convertStringToPriority(String priority) throws IllegalArgumentException {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"        switch (priority.toLowerCase()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"        case \"high\":","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"            return Priority.HIGH;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"        case \"medium\":","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"            return Priority.MEDIUM;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"        case \"low\":","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"            return Priority.LOW;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"        case \"none\":","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"            return Priority.NONE;","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"            throw new IllegalArgumentException(\"Invalid priority input.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     * Converts the {@code Priority} enum to a string representation for file","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     * @param priority The {@code Priority} enum.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"    public static String convertPriorityToFileString(Priority priority) throws IllegalArgumentException{","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"        switch (priority) {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"        case HIGH:","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"            return \"high\";","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"        case MEDIUM:","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"            return \"medium\";","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        case LOW:","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"            return \"low\";","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"        case NONE:","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"            return \"none\";","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"            throw new IllegalArgumentException(\"Invalid priority input.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"     * Converts the {@code Priority} enum to a string representation.","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"     * @param priority The {@code Priority} enum.","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"    public static String convertPriorityToString(Priority priority) throws IllegalArgumentException{","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"        switch (priority) {","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"        case HIGH:","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"            return \"High\";","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"        case MEDIUM:","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"            return \"Medium\";","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"        case LOW:","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"            return \"Low\";","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"        case NONE:","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"            return \"None\";","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"            throw new IllegalArgumentException(\"Invalid priority input.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Jajared":76}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Jajared":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"1000.0\" prefWidth\u003d\"700.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"958.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"624.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"624.0\" layoutY\u003d\"958.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\" prefHeight\u003d\"952.0\" prefWidth\u003d\"700.0\" AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"952.0\" prefWidth\u003d\"688.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"Jajared":20}},{"path":"src/test/java/task/EventParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"import parser.EventParser;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * Tests for the EventParser class.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"public class EventParserTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * Tests the parsing of an event task from the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    public void parseEvent_correctInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"        String input \u003d \"event Description /from 2024-02-20 /to 2024-02-25\";","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"            Event event \u003d EventParser.parseEvent(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"            assertEquals(\"Description\", event.getDescription());","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"            assertEquals(LocalDate.of(2024, 2, 20), event.getStartDate());","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"            assertEquals(LocalDate.of(2024, 2, 25), event.getDeadlineDate());","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskFormatException | InvalidDateException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"            fail(\"Unexpected exception thrown: \" + e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * Tests the parsing of an event task from the user input with a different date","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     * format.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    public void parseEvent_incorrectFormat_errorThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"        String input \u003d \"event Description /from /to\";","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"            EventParser.parseEvent(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"            fail(\"Expected InvalidTaskFormatException was not thrown\");","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskFormatException | InvalidDateException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"            return;","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"     * Tests the parsing of an event task from the user input with an incorrect","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     * date.","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"    public void parseEvent_incorrectDate_errorThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"        String input \u003d \"event Description /from 2022-02-20 /to 2022-02-25\";","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"            EventParser.parseEvent(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"            fail(\"Expected InvalidDateException was not thrown\");","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskFormatException | InvalidDateException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"            return;","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Jajared":64}},{"path":"src/test/java/task/PriorityComparatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import java.util.List;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * Tests for the PriorityComparator class.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"public class PriorityComparatorTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    private PriorityComparator priorityComparator;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * Constructs a new PriorityComparatorTest instance.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    public PriorityComparatorTest() {","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"        priorityComparator \u003d new PriorityComparator();","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     * Tests the comparison of two tasks with different priorities.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    public void compareTwoTasksWithPriority() {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        Task highPriorityTask \u003d new ToDo(\"High Priority Task\");","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        highPriorityTask.setPriority(Priority.HIGH);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"        Task mediumPriorityTask \u003d new Deadline(\"Medium Priority Task\", null);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"        mediumPriorityTask.setPriority(Priority.MEDIUM);","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        int result \u003d priorityComparator.compare(highPriorityTask, mediumPriorityTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"        assertEquals(-1, result, \"High priority task should be ranked higher than medium priority task\");","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"     * Tests the comparison of two tasks without priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    public void compareTwoTasksWithoutPriority() {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"        Task task1 \u003d new ToDo(\"Task 1\");","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        Task task2 \u003d new Event(\"Task 2\", null, null);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"        int result \u003d priorityComparator.compare(task1, task2);","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"        assertEquals(0, result, \"Both tasks without priority should be considered equal\");","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     * Tests the comparison of two tasks with the same priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"    public void compareTasksWithSamePriority() {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"        Task highPriorityTask1 \u003d new ToDo(\"High Priority Task 1\");","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"        highPriorityTask1.setPriority(Priority.HIGH);","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"        Task highPriorityTask2 \u003d new Deadline(\"High Priority Task 2\", null);","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"        highPriorityTask2.setPriority(Priority.HIGH);","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"        int result \u003d priorityComparator.compare(highPriorityTask1, highPriorityTask2);","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"        assertEquals(0, result, \"Both tasks with the same priority should be considered equal\");","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"     * Tests the comparison of two tasks with null priority.","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"    public void compareTasksWithNullPriority() {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"        Task task1 \u003d new ToDo(\"Task 1\");","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"        Task task2 \u003d new Deadline(\"Task 2\", null);","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"        int result \u003d priorityComparator.compare(task1, task2);","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"        assertEquals(0, result, \"Tasks with null priority should be considered equal\");","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"     * Tests the comparison of a list of tasks with different priorities.","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"    public void sortTasksByPriority() {","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"        Task highPriorityTask \u003d new ToDo(\"High Priority Task\");","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"        highPriorityTask.setPriority(Priority.HIGH);","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"        Task mediumPriorityTask \u003d new Deadline(\"Medium Priority Task\", null);","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"        mediumPriorityTask.setPriority(Priority.MEDIUM);","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"        Task lowPriorityTask \u003d new Event(\"Low Priority Task\", null, null);","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"        lowPriorityTask.setPriority(Priority.LOW);","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"        tasks.add(mediumPriorityTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"        tasks.add(lowPriorityTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"        tasks.add(highPriorityTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"        Collections.sort(tasks, priorityComparator);","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"        assertEquals(highPriorityTask, tasks.get(0), \"High priority task should be at index 0\");","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"        assertEquals(mediumPriorityTask, tasks.get(1), \"Medium priority task should be at index 1\");","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"        assertEquals(lowPriorityTask, tasks.get(2), \"Low priority task should be at index 2\");","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Jajared":104}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * Tests for the Ui class.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"public class UiTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * Constructs a new UiTest instance.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    public UiTest() {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     * Tests the display of the welcome message.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     * The welcome message is displayed correctly.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    public void showWelcomeMessage_correctOutput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"        String expectedResult \u003d ui.getWelcomeMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"Hello! I\u0027m GeePeeTee\\nWhat can I do for you?\", expectedResult);","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     * Tests the display of an error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * The error message is displayed correctly.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"    public void showErrorMessage_correctOutput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"        String expectedResult \u003d ui.getErrorMessage(\"Test error message\");","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"Oops! An error occurred:\\nTest error message\", expectedResult);","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"     * Tests the display of a task message.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"     * A task message is displayed correctly.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"    public void showTaskMessage_correctOutput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        String expectedResult \u003d ui.getTaskMessage(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"[ ] Test task\", expectedResult);","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jajared":55}},{"path":"src/test/java/utils/EnumConverterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package utils;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import task.Priority;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * Tests for the EnumConverter class.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"public class EnumConverterTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * Tests the conversion of a string to a priority enum.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    public void testConvertStringToPriority() {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"        assertEquals(Priority.HIGH, EnumConverter.convertStringToPriority(\"high\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"        assertEquals(Priority.MEDIUM, EnumConverter.convertStringToPriority(\"medium\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"        assertEquals(Priority.LOW, EnumConverter.convertStringToPriority(\"low\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"        assertEquals(Priority.NONE, EnumConverter.convertStringToPriority(\"none\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * Tests the conversion of an invalid string to a priority enum.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    public void convertStringToPriority_invalidInput_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"            EnumConverter.convertStringToPriority(\"invalid\");","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"            fail(\"Expected IllegalArgumentException was not thrown\");","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"            // Expected exception","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"     * Tests the conversion of a priority enum to a string for file storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"    public void convertPriorityToFileString_correctInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"high\", EnumConverter.convertPriorityToFileString(Priority.HIGH));","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"medium\", EnumConverter.convertPriorityToFileString(Priority.MEDIUM));","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"low\", EnumConverter.convertPriorityToFileString(Priority.LOW));","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"none\", EnumConverter.convertPriorityToFileString(Priority.NONE));","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"     * Tests the conversion of a priority enum to a string.","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"    public void convertPriorityToString_correctInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"High\", EnumConverter.convertPriorityToString(Priority.HIGH));","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"Medium\", EnumConverter.convertPriorityToString(Priority.MEDIUM));","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"Low\", EnumConverter.convertPriorityToString(Priority.LOW));","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"None\", EnumConverter.convertPriorityToString(Priority.NONE));","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Jajared":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"java -classpath ..\\bin GeePeeTee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Jajared":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"java -classpath ../bin GeePeeTee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"Jajared":1}}]
