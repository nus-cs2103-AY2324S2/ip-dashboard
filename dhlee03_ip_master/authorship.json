[{"path":"src/main/java/CommandTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"public enum CommandTypes {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"    TODO, DEADLINE, EVENT, LIST, BYE, MARK, UNMARK, DELETE","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"dhlee03":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import java.util.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"    private boolean isActive;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"    private List\u003cTask\u003e myList;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    public Duke() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"        this.myList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        Duke ft \u003d new Duke();","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"        ft.init();","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public void init() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"                + \"    Hello! I\u0027m FriendlyTool\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"                + \"    What can I do for you?\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"                + \"    ____________________________________________________________\"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        );","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"            loadTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        } catch (ftException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        while (this.isActive) {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"                nextAction(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"            } catch (ftException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"                + \"    Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"                + \"    ____________________________________________________________\" );","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    private void nextAction(String input) throws ftException {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"Error: Please Type Command\");","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        StringTokenizer st \u003d new StringTokenizer(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"            CommandTypes command \u003d CommandTypes.valueOf(st.nextToken().toUpperCase());","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"            switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"                case BYE:","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"                    this.isActive \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"                case LIST:","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"                    showList();","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"                case MARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"                    mark(st);","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"                    unmark(st);","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"                case TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"                    addTask(st, CommandTypes.TODO);","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"                    addTask(st, CommandTypes.DEADLINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"                case EVENT:","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"                    addTask(st, CommandTypes.EVENT);","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"                case DELETE:","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"                    deleteTask(st);","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"                default:","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"                    throw new ftException(\"Unknown Command: Please use a correct command\");","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"        }catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"Unknown Command: Please use a correct command\");","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"    private void addTask(StringTokenizer st, CommandTypes ct) throws ftException {","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"        switch (ct) {","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"            case TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"                StringBuilder sbTD \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"                while (st.hasMoreTokens()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"                    String token \u003d st.nextToken().trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"                    sbTD.append(\" \").append(token);","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"                String todo \u003d sbTD.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"                if (!todo.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"                    task \u003d new ToDo(todo, false);","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"                    throw new ftException(\"Error: Please tell me what you have TO DO\");","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"                StringBuilder sbDL \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"                StringBuilder sbBy \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"                while (st.hasMoreTokens()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"                    String token \u003d st.nextToken().trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"                    if (token.equals(\"/by\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"                        while (st.hasMoreTokens()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"                            sbBy.append(\" \").append(st.nextToken());","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"                        }","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"                        break;","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"dhlee03"},"content":"                        sbDL.append(\" \").append(token);","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"                String dt \u003d sbDL.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"                String by \u003d sbBy.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"dhlee03"},"content":"                if (!dt.isEmpty() \u0026\u0026 !by.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"dhlee03"},"content":"                   task \u003d new Deadline(dt,false, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"dhlee03"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"dhlee03"},"content":"                    throw new ftException(\"Error: Please tell me your task and its deadline\");","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"dhlee03"},"content":"            case EVENT:","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"dhlee03"},"content":"                StringBuilder sbFrom \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"dhlee03"},"content":"                StringBuilder sbTo \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"dhlee03"},"content":"                while (st.hasMoreTokens()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"                    String token \u003d st.nextToken().trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"                    if (token.equals(\"/from\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"                        while (st.hasMoreTokens()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"                            String curr \u003d st.nextToken().trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"                            if (curr.equals(\"/to\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"dhlee03"},"content":"                                while (st.hasMoreTokens()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"dhlee03"},"content":"                                    sbTo.append(\" \").append(st.nextToken());","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"dhlee03"},"content":"                                }","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"dhlee03"},"content":"                            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"dhlee03"},"content":"                                sbFrom.append(\" \").append(curr);","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"dhlee03"},"content":"                            }","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"dhlee03"},"content":"                        }","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"dhlee03"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"dhlee03"},"content":"                        sb.append(\" \").append(token);","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"dhlee03"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"dhlee03"},"content":"                String name \u003d sb.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"dhlee03"},"content":"                String from \u003d sbFrom.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"dhlee03"},"content":"                String to \u003d sbTo.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"dhlee03"},"content":"                if (!name.isEmpty() \u0026\u0026 !from.isEmpty() \u0026\u0026 !to.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"dhlee03"},"content":"                    task \u003d new Event(name, false, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"dhlee03"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"dhlee03"},"content":"                    throw new ftException(\"Error: Please tell me your event and its from/to dates\");","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"dhlee03"},"content":"            default:","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"dhlee03"},"content":"                throw new ftException(\"Error: Invalid Task Type\");","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"dhlee03"},"content":"        myList.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"dhlee03"},"content":"        updateTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"dhlee03"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"dhlee03"},"content":"                + \"    Completed. I\u0027ve added this task: \\n    \"","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"dhlee03"},"content":"                + task","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"dhlee03"},"content":"                + \"\\n    Now you have \" + myList.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"dhlee03"},"content":"                + \"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"dhlee03"},"content":"    private void showList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"dhlee03"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"dhlee03"},"content":"                + \"    Here are the tasks in your list:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"dhlee03"},"content":"        for (int i \u003d 1; i \u003c myList.size() + 1; i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"dhlee03"},"content":"            Task task \u003d myList.get(i-1);","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"dhlee03"},"content":"            if (task.isDone()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"dhlee03"},"content":"                System.out.println(\"    \" + i + \".\" + task);","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"dhlee03"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"dhlee03"},"content":"                System.out.println(\"    \" + i + \".\" + task);","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"dhlee03"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"dhlee03"},"content":"    private void mark(StringTokenizer st) throws ftException {","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"dhlee03"},"content":"        if (!st.hasMoreTokens()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":181,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"Error: No index provided\");","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"dhlee03"},"content":"        int i \u003d Integer.parseInt(st.nextToken());","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"dhlee03"},"content":"        if ((0 \u003c i) \u0026\u0026 (i \u003c\u003d myList.size())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":185,"author":{"gitId":"dhlee03"},"content":"            Task task \u003d myList.get(i - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":186,"author":{"gitId":"dhlee03"},"content":"            task.mark();","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"dhlee03"},"content":"            updateTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"dhlee03"},"content":"            System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"dhlee03"},"content":"                    + \"    Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":190,"author":{"gitId":"dhlee03"},"content":"                    + \"      \" + task.toString()","lastModifiedDate":"2024-01-25"},{"lineNumber":191,"author":{"gitId":"dhlee03"},"content":"                    + \"\\n    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"dhlee03"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":193,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"Error: Please provide valid index\");","lastModifiedDate":"2024-01-25"},{"lineNumber":194,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":195,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":196,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":197,"author":{"gitId":"dhlee03"},"content":"    private void unmark(StringTokenizer st) throws ftException {","lastModifiedDate":"2024-01-25"},{"lineNumber":198,"author":{"gitId":"dhlee03"},"content":"        if (!st.hasMoreTokens()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":199,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"Error: No index provided\");","lastModifiedDate":"2024-01-25"},{"lineNumber":200,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":201,"author":{"gitId":"dhlee03"},"content":"        int i \u003d Integer.parseInt(st.nextToken());","lastModifiedDate":"2024-01-25"},{"lineNumber":202,"author":{"gitId":"dhlee03"},"content":"        if ((0 \u003c i) \u0026\u0026 (i \u003c\u003d myList.size())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":203,"author":{"gitId":"dhlee03"},"content":"            Task task \u003d myList.get(i - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":204,"author":{"gitId":"dhlee03"},"content":"            task.unmark();","lastModifiedDate":"2024-01-25"},{"lineNumber":205,"author":{"gitId":"dhlee03"},"content":"            updateTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"dhlee03"},"content":"            System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":207,"author":{"gitId":"dhlee03"},"content":"                    + \"    OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":208,"author":{"gitId":"dhlee03"},"content":"                    + \"      \" + task.toString()","lastModifiedDate":"2024-01-25"},{"lineNumber":209,"author":{"gitId":"dhlee03"},"content":"                    + \"\\n    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":210,"author":{"gitId":"dhlee03"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":211,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"Error: Please provide valid index\");","lastModifiedDate":"2024-01-25"},{"lineNumber":212,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":213,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":214,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":215,"author":{"gitId":"dhlee03"},"content":"    private void deleteTask(StringTokenizer st) throws ftException {","lastModifiedDate":"2024-01-25"},{"lineNumber":216,"author":{"gitId":"dhlee03"},"content":"        if (!st.hasMoreTokens()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":217,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"Error: No index provided\");","lastModifiedDate":"2024-01-25"},{"lineNumber":218,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":219,"author":{"gitId":"dhlee03"},"content":"        int i \u003d Integer.parseInt(st.nextToken());","lastModifiedDate":"2024-01-25"},{"lineNumber":220,"author":{"gitId":"dhlee03"},"content":"        if ((0 \u003c i) \u0026\u0026 (i \u003c\u003d myList.size())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":221,"author":{"gitId":"dhlee03"},"content":"            String task \u003d myList.remove(i - 1).toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":222,"author":{"gitId":"dhlee03"},"content":"            updateTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"dhlee03"},"content":"            System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":224,"author":{"gitId":"dhlee03"},"content":"                    + \"    Great!, You have completed the task:\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":225,"author":{"gitId":"dhlee03"},"content":"                    + \"      \" + task","lastModifiedDate":"2024-01-25"},{"lineNumber":226,"author":{"gitId":"dhlee03"},"content":"                    + \"\\n    Now you have \" + myList.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":227,"author":{"gitId":"dhlee03"},"content":"                    + \"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":228,"author":{"gitId":"dhlee03"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":229,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"Error: Please provide valid index\");","lastModifiedDate":"2024-01-25"},{"lineNumber":230,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":231,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":232,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":233,"author":{"gitId":"dhlee03"},"content":"    private void updateTask() throws ftException {","lastModifiedDate":"2024-02-02"},{"lineNumber":234,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"dhlee03"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/myTask.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":236,"author":{"gitId":"dhlee03"},"content":"            for (Task task: myList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":237,"author":{"gitId":"dhlee03"},"content":"                fw.write(task.toSaveFormat() + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":238,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":239,"author":{"gitId":"dhlee03"},"content":"            fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":240,"author":{"gitId":"dhlee03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":241,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"Error in updating the task\");","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":244,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"dhlee03"},"content":"    private void loadTask() throws ftException {","lastModifiedDate":"2024-02-02"},{"lineNumber":246,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":247,"author":{"gitId":"dhlee03"},"content":"            File save \u003d new File(\"./data/myTask.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":248,"author":{"gitId":"dhlee03"},"content":"            if (!save.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":249,"author":{"gitId":"dhlee03"},"content":"                System.out.println(\"    There was no save data.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":250,"author":{"gitId":"dhlee03"},"content":"                save.getParentFile().mkdirs();","lastModifiedDate":"2024-02-02"},{"lineNumber":251,"author":{"gitId":"dhlee03"},"content":"                boolean isSuccessful \u003d save.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":252,"author":{"gitId":"dhlee03"},"content":"                System.out.println(isSuccessful ? \"    New save data file created.\" : \"    Failed to create a new save data\");","lastModifiedDate":"2024-02-02"},{"lineNumber":253,"author":{"gitId":"dhlee03"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":254,"author":{"gitId":"dhlee03"},"content":"                System.out.println(\"    Successfully loaded the save data. \");","lastModifiedDate":"2024-02-02"},{"lineNumber":255,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":256,"author":{"gitId":"dhlee03"},"content":"            Scanner s \u003d new Scanner(save);","lastModifiedDate":"2024-02-02"},{"lineNumber":257,"author":{"gitId":"dhlee03"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":258,"author":{"gitId":"dhlee03"},"content":"                String saved \u003d s.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":259,"author":{"gitId":"dhlee03"},"content":"                String[] elements \u003d saved.split(\"\\\\|\");","lastModifiedDate":"2024-02-02"},{"lineNumber":260,"author":{"gitId":"dhlee03"},"content":"                elements \u003d Arrays.stream(elements).map(String::trim).toArray(String[]::new);","lastModifiedDate":"2024-02-02"},{"lineNumber":261,"author":{"gitId":"dhlee03"},"content":"                String taskType \u003d elements[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":262,"author":{"gitId":"dhlee03"},"content":"                switch (taskType) {","lastModifiedDate":"2024-02-02"},{"lineNumber":263,"author":{"gitId":"dhlee03"},"content":"                    case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":264,"author":{"gitId":"dhlee03"},"content":"                        myList.add(new ToDo(elements[2], Boolean.parseBoolean(elements[1])));","lastModifiedDate":"2024-02-02"},{"lineNumber":265,"author":{"gitId":"dhlee03"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":266,"author":{"gitId":"dhlee03"},"content":"                    case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":267,"author":{"gitId":"dhlee03"},"content":"                        myList.add(new Deadline(elements[2], Boolean.parseBoolean(elements[1]), elements[3]));","lastModifiedDate":"2024-02-02"},{"lineNumber":268,"author":{"gitId":"dhlee03"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":269,"author":{"gitId":"dhlee03"},"content":"                    case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":270,"author":{"gitId":"dhlee03"},"content":"                        myList.add(new Event(elements[2], Boolean.parseBoolean(elements[1]), elements[3], elements[4]));","lastModifiedDate":"2024-02-02"},{"lineNumber":271,"author":{"gitId":"dhlee03"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":272,"author":{"gitId":"dhlee03"},"content":"                    default:","lastModifiedDate":"2024-02-02"},{"lineNumber":273,"author":{"gitId":"dhlee03"},"content":"                        throw new ftException(\"    Warning: The file is corrupted. Please delete the file\");","lastModifiedDate":"2024-02-02"},{"lineNumber":274,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":275,"author":{"gitId":"dhlee03"},"content":"                s.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":276,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":277,"author":{"gitId":"dhlee03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":278,"author":{"gitId":"dhlee03"},"content":"            throw new ftException(\"File not found\");","lastModifiedDate":"2024-02-02"},{"lineNumber":279,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":280,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":283,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"dhlee03":277,"-":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"    private String name;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    public void mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    public String getName() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        return this.name;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        return \"| \" + (isDone ? \"true\" : \"false\") + \" | \" + name;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        return \"T \" + super.toSaveFormat() + \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    private String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"    public Deadline(String name, boolean isDone, String by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"        return \"[D]\" + super.toString() +\" (by: \" + by + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"        return \"D \" + super.toSaveFormat() + \" | \" + by + \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"class Event extends  Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"    private String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"    private String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"    public Event(String name, boolean isDone, String from, String to) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        return \"[E]\" + super.toString() +\" (from: \" + from + \" to: \" + to +\")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"        return \"E \" + super.toSaveFormat() + \" | \" + from + \" | \" + to + \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"dhlee03":87}},{"path":"src/main/java/ftException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"public class ftException extends  Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"    public ftException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"dhlee03":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"deadline finish homework /by Monday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"event Group project meeting /from Friday 3pm /to 6pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"dhlee03":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"l","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dhlee03":1,"-":20}}]
