[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"H4mes":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     * Instantiates Ui and Storage. Loads TaskList from filepath or makes relevant directory and file if required.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * @param filePath Filepath for loading and saving TaskList data.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"        storage \u003d new Storage (filePath);","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"            tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Couldn\u0027t read from file\");","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     * Helper function that manages the running of the chatbot.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    public void run () {","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"                Command c \u003d Parser.handleInput(scanner.nextLine());","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"     * The entry point of the Duke application.","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"     * @param args command-line arguments (not used in this application)","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"        new Duke(FILE_PATH).run();","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"H4mes":56,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"import duke.command.ToggleMarkCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"public class Parser {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    private static final String patternBye \u003d \"^bye\";","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    private static final String patternList \u003d \"^list\";","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    private static final String patternMark \u003d \"^mark \\\\d+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    private static final String patternUnmark \u003d \"^unmark \\\\d+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    private static final String patternDelete \u003d \"^delete \\\\d+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    private static final String patternTodo \u003d \"^todo .+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    private static final String patternDeadline \u003d \"^deadline .+ \\\\/by .+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    private static final String patternEvent \u003d \"^event .+ \\\\/from .+ \\\\/to .+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"    public Parser() {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"     * Helper function that checks if a string matches a regex pattern.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"     * @param input a String taken from the command line user input","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"     * @param pattern a String defining the regex pattern of a specific command type","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"     * @return a boolean value signifying if the input matches the regex pattern","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"    private static boolean matchesPattern(String input, String pattern) {","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"        Pattern p \u003d Pattern.compile(pattern);","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"        return m.matches();","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"     *  Method that handles user input and returns an appropriate Command object to be executed in the main program.","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"     * @param input a String taken from the user\u0027s command line input","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"     * @return a Command object corresponding to the user\u0027s input","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"     * @throws IllegalArgumentException if user input format is unrecognised","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"    public static Command handleInput(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"            if (matchesPattern(input, patternBye)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternList)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"                return new ListCommand();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternMark)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"                String[] wordArray \u003d input.split(\" \", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"                Integer index \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"                return new ToggleMarkCommand(index, true);","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternUnmark)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"                String[] wordArray \u003d input.split(\" \", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"H4mes"},"content":"                Integer index \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"                return new ToggleMarkCommand(index, false);","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternDelete)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"H4mes"},"content":"                String[] wordArray \u003d input.split(\" \", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"H4mes"},"content":"                Integer index \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"H4mes"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternTodo)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"H4mes"},"content":"                String tempString \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"H4mes"},"content":"                Todo todo \u003d new Todo(tempString);","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"H4mes"},"content":"                return new AddCommand(todo);","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternDeadline)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"H4mes"},"content":"                String tempString \u003d input.substring(9).trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"H4mes"},"content":"                String[] tempArray \u003d tempString.split(\"/by\", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"H4mes"},"content":"                if (tempArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"H4mes"},"content":"                    throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"H4mes"},"content":"                            \"Declare yer deadline as such: \u0027deadline * /by *\u0027, ye scurvy dog!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"H4mes"},"content":"                String description \u003d tempArray[0].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"H4mes"},"content":"                LocalDateTime by \u003d parseDate(tempArray[1].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"H4mes"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"H4mes"},"content":"                return new AddCommand(deadline);","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternEvent)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"H4mes"},"content":"                String tempString \u003d input.substring(6).trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"H4mes"},"content":"                String[] tempArray \u003d tempString.split(\"/from\", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"H4mes"},"content":"                if (tempArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"H4mes"},"content":"                    throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"H4mes"},"content":"                            \"Declare yer event as such: \u0027deadline * /from * /to *\u0027, ye scurvy dog!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"H4mes"},"content":"                String description \u003d tempArray[0].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"H4mes"},"content":"                tempString \u003d tempArray[1].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"H4mes"},"content":"                tempArray \u003d tempString.split(\"/to\", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"H4mes"},"content":"                if (tempArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"H4mes"},"content":"                    throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"H4mes"},"content":"                            \"Declare yer event as such: \u0027deadline * /from * /to *\u0027, ye scurvy dog!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"H4mes"},"content":"                LocalDateTime from \u003d parseDate(tempArray[0].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"H4mes"},"content":"                LocalDateTime to \u003d parseDate(tempArray[1].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"H4mes"},"content":"                Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"H4mes"},"content":"                return new AddCommand(event);","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"H4mes"},"content":"            } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"H4mes"},"content":"                throw new IllegalArgumentException(\"Arrr, me apologies! I cannot fathom that.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"H4mes"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"H4mes"},"content":"                    \"I be searchin\u0027 the seas but couldn\u0027t spy the task ye named, me heartie!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"H4mes"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! Declare yer dates as dd/MM/yyyy HHmm, ye scurvy dog!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"H4mes"},"content":"     * Helper function to convert a String input into a LocalDateTime object.","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"H4mes"},"content":"     * @param input a String representing a date in the format dd/MM/yyyy HHmm","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"H4mes"},"content":"     * @return a corresponding LocalDateTime object","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"H4mes"},"content":"     * @throws IllegalArgumentException if date String not in the correct format","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"H4mes"},"content":"    public static LocalDateTime parseDate(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"H4mes"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"H4mes"},"content":"        LocalDateTime time;","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"H4mes"},"content":"            time \u003d LocalDateTime.parse(input, dateTimeFormatter);","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"H4mes"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"H4mes"},"content":"                    \"The date format ye provided be as tangled as a ship\u0027s riggin\u0027.\\n\" +","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"H4mes"},"content":"                    \"Write yer dates in the format dd/MM/yyyy HHmm or dd/MM/yyyy\");","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"H4mes"},"content":"        return time;","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":134}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.io.*;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"public class Storage {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    protected static String FILE_PATH;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Storage object with the specified filePath value.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     * @param filePath a String representing the filepath where data should be read and written to","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"        FILE_PATH \u003d filePath;","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"     * Method to read existing data from file and populate task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"     * Creates missing directory and file as required using relative filepath.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"     * @return an ArrayList object containing the read tasks from the filepath","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"        try(Scanner dataScanner \u003d new Scanner(new File(FILE_PATH))) {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"            int lineNum \u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"            ArrayList\u003cInteger\u003e corruptedLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"            while (dataScanner.hasNextLine()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"                    String line \u003d dataScanner.nextLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"                    String[] data \u003d line.split(\"\\\\|\", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"                    String taskType \u003d data[0].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"                    String taskComplete \u003d data[1].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"                    String taskDescription \u003d data[2].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"                    switch (taskType) {","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"                        case \"T\":","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"                            //Check correct number of fields","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"                            if (data.length !\u003d 3) {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"                                throw new ParseException(\"Todo does not have 3 data fields.\", lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"                            Todo todo \u003d new Todo(taskDescription);","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"                            //Check completion status is a string \"1\" or \"0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"                            if (taskComplete.equals(\"0\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"                                todo.markAsNotDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"                            } else if (taskComplete.equals(\"1\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"                                todo.markAsDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"                            } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"                                throw new ParseException(\"Task completion data is corrupted.\", lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"H4mes"},"content":"                            tasks.add(todo);","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"H4mes"},"content":"                            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"H4mes"},"content":"                        case \"D\":","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"H4mes"},"content":"                            //Check correct number of fields","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"H4mes"},"content":"                            if (data.length !\u003d 4) {","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"H4mes"},"content":"                                throw new ParseException(\"Deadline does not have 4 data fields.\", lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"H4mes"},"content":"                            LocalDateTime deadlineBy \u003d Parser.parseDate(data[3].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"H4mes"},"content":"                            Deadline deadline \u003d new Deadline(taskDescription, deadlineBy);","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"H4mes"},"content":"                            //Check completion status is a string \"1\" or \"0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"H4mes"},"content":"                            if (taskComplete.equals(\"0\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"H4mes"},"content":"                                deadline.markAsNotDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"H4mes"},"content":"                            } else if (taskComplete.equals(\"1\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"H4mes"},"content":"                                deadline.markAsDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"H4mes"},"content":"                            } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"H4mes"},"content":"                                throw new ParseException(\"Task completion data is corrupted.\", lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"H4mes"},"content":"                            tasks.add(deadline);","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"H4mes"},"content":"                            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"H4mes"},"content":"                        case \"E\":","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"H4mes"},"content":"                            //check correct number of fields","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"H4mes"},"content":"                            if (data.length !\u003d 5) {","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"H4mes"},"content":"                                throw new ParseException(\"Event does not have 5 data fields.\", lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"H4mes"},"content":"                            LocalDateTime eventFrom \u003d Parser.parseDate(data[3].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"H4mes"},"content":"                            LocalDateTime eventTo \u003d Parser.parseDate(data[4].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"H4mes"},"content":"                            Event event \u003d new Event(taskDescription, eventFrom, eventTo);","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"H4mes"},"content":"                            //Check completion status is a string \"1\" or \"0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"H4mes"},"content":"                            if (taskComplete.equals(\"0\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"H4mes"},"content":"                                event.markAsNotDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"H4mes"},"content":"                            } else if (taskComplete.equals(\"1\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"H4mes"},"content":"                                event.markAsDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"H4mes"},"content":"                            } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"H4mes"},"content":"                                throw new ParseException(\"Task completion data is corrupted.\", lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"H4mes"},"content":"                            tasks.add(event);","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"H4mes"},"content":"                            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"H4mes"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"H4mes"},"content":"                    corruptedLines.add(lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"H4mes"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"H4mes"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"H4mes"},"content":"                    corruptedLines.add(lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Line \" + lineNum + \": \" + e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"H4mes"},"content":"                } finally {","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"H4mes"},"content":"                    lineNum +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"H4mes"},"content":"            if (corruptedLines.size() \u003e 0) {","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"H4mes"},"content":"                removeCorruptedData(corruptedLines);","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"H4mes"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"File not found: \" + FILE_PATH);","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"H4mes"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"H4mes"},"content":"            Path directoryPath \u003d Paths.get(file.getParent());","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"H4mes"},"content":"            if (!Files.exists(directoryPath)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"H4mes"},"content":"                    Files.createDirectories(directoryPath);","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Created missing directory: \" + directoryPath);","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"H4mes"},"content":"                } catch (IOException err) {","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Error creating directory: \" + directoryPath);","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"H4mes"},"content":"                    err.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"H4mes"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"H4mes"},"content":"                    file.createNewFile();","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Created missing file: \" + file);","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"H4mes"},"content":"                } catch (IOException err) {","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Error creating file: \" + file);","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"H4mes"},"content":"                    err.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"H4mes"},"content":"        return tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":154,"author":{"gitId":"H4mes"},"content":"     * Helper function for loadData() to delete corrupted data lines from the .txt data file by line number.","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"H4mes"},"content":"     * @param indexes an ArrayList of Integer objects signifying corrupted file lines (1-based indexing) to be deleted","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"H4mes"},"content":"    private static void removeCorruptedData(ArrayList\u003cInteger\u003e indexes) {","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"H4mes"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"H4mes"},"content":"        Collections.sort(indexes);","lastModifiedDate":"2024-02-09"},{"lineNumber":161,"author":{"gitId":"H4mes"},"content":"        int offset \u003d 0;","lastModifiedDate":"2024-02-09"},{"lineNumber":162,"author":{"gitId":"H4mes"},"content":"        try (Scanner dataScanner \u003d new Scanner(new File(FILE_PATH))) {","lastModifiedDate":"2024-02-09"},{"lineNumber":163,"author":{"gitId":"H4mes"},"content":"            int lineNum \u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":164,"author":{"gitId":"H4mes"},"content":"            while (dataScanner.hasNextLine()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":165,"author":{"gitId":"H4mes"},"content":"                String line \u003d dataScanner.nextLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":166,"author":{"gitId":"H4mes"},"content":"                if (lineNum !\u003d indexes.get(offset)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":167,"author":{"gitId":"H4mes"},"content":"                    lines.add(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":168,"author":{"gitId":"H4mes"},"content":"                } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":169,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Removing entry: \" + line);","lastModifiedDate":"2024-02-09"},{"lineNumber":170,"author":{"gitId":"H4mes"},"content":"                    if (offset \u003c indexes.size() - 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":171,"author":{"gitId":"H4mes"},"content":"                        offset +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":172,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-02-09"},{"lineNumber":173,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":174,"author":{"gitId":"H4mes"},"content":"                lineNum +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":175,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":176,"author":{"gitId":"H4mes"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":177,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"File not found: \" + FILE_PATH);","lastModifiedDate":"2024-02-09"},{"lineNumber":178,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":179,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":180,"author":{"gitId":"H4mes"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2024-02-09"},{"lineNumber":181,"author":{"gitId":"H4mes"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-09"},{"lineNumber":182,"author":{"gitId":"H4mes"},"content":"                bw.write(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":183,"author":{"gitId":"H4mes"},"content":"                bw.newLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":184,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":185,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":186,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Error writing to file: \" + FILE_PATH);","lastModifiedDate":"2024-02-09"},{"lineNumber":187,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":188,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":189,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":190,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":191,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":192,"author":{"gitId":"H4mes"},"content":"     * Solution below adapted from https://www.baeldung.com/java-write-to-file","lastModifiedDate":"2024-02-09"},{"lineNumber":193,"author":{"gitId":"H4mes"},"content":"     * Helper function that appends the input Task data as a string to the file at the FILE_PATH and starts a new line.","lastModifiedDate":"2024-02-09"},{"lineNumber":194,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":195,"author":{"gitId":"H4mes"},"content":"     * @param task a Task object signifying the Task to be appended to the file","lastModifiedDate":"2024-02-09"},{"lineNumber":196,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":197,"author":{"gitId":"H4mes"},"content":"    public void appendTaskToFile(Task task) {","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"H4mes"},"content":"        String line \u003d task.getData();","lastModifiedDate":"2024-02-09"},{"lineNumber":199,"author":{"gitId":"H4mes"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH, true))) {","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"H4mes"},"content":"            bw.write(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":201,"author":{"gitId":"H4mes"},"content":"            bw.newLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":202,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":203,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Error writing to file: \" + FILE_PATH);","lastModifiedDate":"2024-02-09"},{"lineNumber":204,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":205,"author":{"gitId":"H4mes"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"H4mes"},"content":"     * Helper function that overwrites the original file data using the updated ArrayList data.","lastModifiedDate":"2024-02-09"},{"lineNumber":210,"author":{"gitId":"H4mes"},"content":"     * Called after changes to the list are made by marking, unmarking and deleting tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":211,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":212,"author":{"gitId":"H4mes"},"content":"     * @param newTasks an ArrayList object containing Task objects from the current task list","lastModifiedDate":"2024-02-09"},{"lineNumber":213,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":214,"author":{"gitId":"H4mes"},"content":"    public void saveTaskListToFile(ArrayList\u003cTask\u003e newTasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":215,"author":{"gitId":"H4mes"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"H4mes"},"content":"            for (Task task : newTasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"H4mes"},"content":"                bw.write(task.getData());","lastModifiedDate":"2024-02-09"},{"lineNumber":218,"author":{"gitId":"H4mes"},"content":"                bw.newLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":220,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":221,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Error writing to file: \" + FILE_PATH);","lastModifiedDate":"2024-02-09"},{"lineNumber":222,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":223,"author":{"gitId":"H4mes"},"content":"        tasks \u003d newTasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":224,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":225,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":225}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"public class TaskList {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"    protected static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    protected static int taskCount \u003d 0;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"     * Constructs a TaskList and instantiates tasks as an empty ArrayList.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"        this.tasks \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     * Constructs a TaskList and instantiates tasks using the provided input ArrayList.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     * @param loadedTasks an ArrayList object containing Task objects to populate the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"        this.tasks \u003d loadedTasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"        taskCount \u003d loadedTasks.size();","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"     * A method to add the provided task to the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     * @param task a Task object to be added to the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"     * A method to remove a task at the specified index (1-indexing) from the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"     * @param taskNum an int representing the 1-indexed location of the task to be deleted","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"        if (taskNum \u003e taskCount || taskNum \u003c 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! Ye only be havin\u0027 \" + taskCount","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"                    + \" tasks on the chart, matey!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"        tasks.remove(taskNum - 1);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"        taskCount -\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"     * Method to print all current tasks in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"    public void listTasks () {","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"            System.out.println((i+1) + \".\" +tasks.get(i).toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"     * Method to mark a task at the specified 1-indexed index.","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"     * @param taskNum an int representing the 1-indexed location of the task in the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"H4mes"},"content":"    public void markTask(int taskNum) {","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"        if (taskNum \u003e taskCount || taskNum \u003c 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! Ye only be havin\u0027 \" + taskCount","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"H4mes"},"content":"                    + \" tasks on the chart, matey!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"H4mes"},"content":"        tasks.get(taskNum - 1).markAsDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"H4mes"},"content":"     * Method to unmark a task at the specified 1-indexed index.","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"H4mes"},"content":"     * @param taskNum an int representing the 1-indexed location of the task in the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"H4mes"},"content":"    public void unmarkTask(int taskNum) {","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"H4mes"},"content":"        if (taskNum \u003e taskCount || taskNum \u003c 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! Ye only be havin\u0027 \" + taskCount","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"H4mes"},"content":"                    + \" tasks on the chart, matey!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"H4mes"},"content":"        tasks.get(taskNum - 1).markAsNotDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"H4mes"},"content":"     * Method to get the String describing a task at the specified 1-indexed index.","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"H4mes"},"content":"     * @param taskNum an int representing the 1-indexed location of the task in the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"H4mes"},"content":"    public String printTask(int taskNum) {","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"H4mes"},"content":"        if (taskNum \u003e taskCount || taskNum \u003c 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! Ye only be havin\u0027 \" + taskCount","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"H4mes"},"content":"                    + \" tasks on the chart, matey!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"H4mes"},"content":"        return tasks.get(taskNum - 1).toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"H4mes"},"content":"     * Method to get the current number of tasks in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"H4mes"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"H4mes"},"content":"        return taskCount;","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"H4mes"},"content":"     * Method to return the current task list as an ArrayList object.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"H4mes"},"content":"     * @return an ArrayList object from the current task list","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"H4mes"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"H4mes"},"content":"        return tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":114}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"public class Ui {","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"    private static final String logo \u003d \" _  _   __    ____  ____ \\n\" +","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"            \"( \\\\/ ) /__\\\\  (  _ \\\\(  _ \\\\\\n\" +","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"            \" \\\\  / /(__)\\\\  )   / )   /\\n\" +","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"            \" (__)(__)(__)(_)\\\\_)(_)\\\\_)\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    private static final int dividerLength \u003d 90;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    private static final char dividerChar \u003d 0x2500;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    public Ui() {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * Method to print section dividers to the console.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    public void printDivider(){","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"        for (int i \u003d 0; i \u003c dividerLength; i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"            System.out.print(dividerChar);","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"        System.out.println();","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     * Method to print the logo and welcome message at program startup.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"        System.out.println(\"Ahoy! I be Yarr \\nWhat be yer command, me heartie?\");","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"     * Method that takes a string and prints it with section dividers above and below.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"     * @param message a String representing the message to be printed","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":47}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    protected Task task;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"     * Constructs new AddCommand object with a specified task to be added at execution.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     * @param task the task to be added when executed","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     * Adds specified task to the task list and saves to hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        super.tasks.addTask(this.task);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"        super.storage.appendTaskToFile(this.task);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        String message \u003d \"I\u0027ve appended this to yer list:\\n\" + this.task.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        super.ui.printMessage(message);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":37}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"    protected TaskList tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    protected Storage storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    protected Ui ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"    public Command() {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     * Abstract method that executes the command, performing operations on the provided","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * TaskList, Storage, and Ui objects.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    public abstract void execute(TaskList tasks, Storage storage, Ui ui);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     * Method returns false by default to keep the chatbot loop running.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     * Overridden methods should return true to end the program.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     * @return Returns false","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":34}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    protected int index;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"     * Constructs new DeleteCommand object with a specified index of the task to be deleted.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     * @param index the 1-indexed number of the task to be deleted when executed","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     * Method that deletes the task from the current task list within the program and on the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"        String tempTask \u003d super.tasks.printTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        super.tasks.deleteTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"        super.storage.saveTaskListToFile(super.tasks.getTasks());","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        String message \u003d \"As ye command, this one has walked the plank:\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"                + tempTask + \"\\nOnly \"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"                +  super.tasks.getTaskCount() + \" tasks remain, captain!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        super.ui.printMessage(message);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":39}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     * Method that prints a message signalling the closing of the program.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"        ui.printMessage(\"Fair winds to ye, me hearty! \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"                \"May the tide carry ye safely until our paths cross again.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     * Method that returns the boolean value if the main loop should be exited.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     * @return Returns true","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        return true;","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":37}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     * Method that lists the task from the current task list within the program and on the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"        super.ui.printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"        System.out.println(\"Behold, yer roster of endeavors!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"        super.tasks.listTasks();","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"        super.ui.printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":29}},{"path":"src/main/java/duke/command/ToggleMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"public class ToggleMarkCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    protected int index;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     * Constructs a command that controls if a task at the specified index should be marked or unmarked.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     * @param index an int representing the 1-indexed location of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     * @param isDone a boolean representing if a task is to be marked as completed or incomplete","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    public ToggleMarkCommand(int index, boolean isDone) {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"     * Method that executes the mark/unmark action on the task depending on the isDone variable.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        String message;","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"            super.tasks.markTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"            message \u003d \"X marks the spot. I\u0027ve crossed this task of yer list, me heartie!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"                    + super.tasks.printTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"            super.tasks.unmarkTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"            message \u003d \"The winds be shiftin\u0027, and I be lettin\u0027 this task sail with the breeze unmarked.\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"                    + super.tasks.printTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"        super.storage.saveTaskListToFile(super.tasks.getTasks());","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"        super.ui.printMessage(message);","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":48}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter dataFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter stringFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     * @param description a String representing the description of the deadline task","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     * @param by a LocalDateTime representing the deadline for the task","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"        super (description);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(stringFormat) + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"        return \"D | \" + super.getData() + \" | \" + by.format(dataFormat);","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"H4mes":31}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter dataFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter stringFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Event object with the specified description, start time and end time.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     * @param description a String representing the description of the event task","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     * @param start a LocalDateTime representing the start of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * @param end a LocalDateTime representing the end of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"        super (description);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(stringFormat) + \" to: \" + end.format(stringFormat) + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        return \"E | \" + super.getData() + \" | \" + start.format(dataFormat) + \" | \" + end.format(dataFormat);","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"H4mes":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Task with the specified description and sets the default isDone value to false.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"     * @param description a String for the task\u0027s description","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     * A method to print the task\u0027s details as a string to the console","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     * @return a String displaying if the task is completed and its description","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"        return (isDone ? \"[X] \" + description : \"[ ] \" + description); //mark done task with X","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     * A method to mark the task as completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"     * A method to mark the task as incomplete.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"     * A method that returns a string containing the task\u0027s data to be saved to the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"     * @return a String containing the task\u0027s data formatted to be saved onto the hard disk","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"        return (isDone ? \"1 | \" + description : \"0 | \" + description);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"H4mes":48}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Todo object with the specified description.","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"     * @param description a String representing the task description","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"        super (description);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"        return \"T | \" + super.getData();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"H4mes":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    public void parseDate_correctFormat_success() {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"        String input1 \u003d \"09/02/2024 1800\";","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"        LocalDateTime expectedDate \u003d LocalDateTime.of(2024, 2, 9, 18,00);","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"        LocalDateTime testDate \u003d Parser.parseDate(input1);","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"        assertEquals(testDate, expectedDate);","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":16}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"public class EventTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    public void getData_success() {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"        LocalDateTime testFrom \u003d LocalDateTime.of(2024, 2, 9, 18,00);","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"        LocalDateTime testTo \u003d LocalDateTime.of(2024, 2, 10, 9,00);","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"        Event event \u003d new Event(\"Test Event\", testFrom, testTo);","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"        String expectedData \u003d \"E | 0 | Test Event | 09/02/2024 1800 | 10/02/2024 0900\";","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"        assertEquals(event.getData(), expectedData);","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":17}}]
