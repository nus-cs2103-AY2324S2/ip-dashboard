[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"# UkeCat","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"```","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"                    /~(_)~\\.          ~ Hello!","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":" /\u003d ••\\      /~(_)~\\        \\     /\\","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"K\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d(  )\u003d\u003d\u003d]  |    (`~ o7","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":" \\\u003d ••/      \\_(~)_/        /   c\\   c\\","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"                    \\_(~)_/`    U`U_, )\u003d~~  ","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"```","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"**UkeCat** :octocat: is:","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"* text-based","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"* easy to learn","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"* ~~FAST~~ SUPER FAST to use","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"All you need to do is:","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"1. Download it from [here](https://github.com/ziiqii/ip).","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"2. Double-click to run it!","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"Features:","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"- [x] Managing tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"\u003e \"*Don\u0027t think. Just do.*\"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the `updateTasks()`","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"method from the `FileManager` class:","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"```java","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"public static void updateTasks() {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"    try (FileWriter fileWriter \u003d new FileWriter(\"data/taskData.txt\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"        for (Task task : Storage.getTasks()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"            fileWriter.write(Parser.parseTaskToCsv(task) + \"\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"    } catch (IOException ioException) {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"        System.out.println(\"IO error occurred while updating.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":5,"ziiqii":34}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"    mainClass.set(\"ukecat.UkeCat\")","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"    archiveFileName \u003d \"UkeCat.jar\"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"ziiqii":17}},{"path":"data/taskData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"T,1,buy bread","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"T,0,eat bread","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"T,0,buy egg","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"T,0,cook egg","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"T,0,eat egg","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ziiqii":5}},{"path":"src/main/java/logo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"# Ukulele","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"                    /~(_)~\\.","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":" /\u003d ••\\      /~(_)~\\        \\","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"K\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d(  )\u003d\u003d\u003d]  |","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":" \\\u003d ••/      \\_(~)_/        /","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"                    \\_(~)_/`","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"# UkeCat","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"  /\\","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":" (`~ o7","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"c\\   c\\","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"U`U_, )\u003d~~","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"# Echo cat","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":" /\\_/\\","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"\u003dO.O\u003d|","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"  \\  \\/","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"ziiqii":17}},{"path":"src/main/java/schema.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"UkeCat:","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"- Storage: to store info on user input and tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"- Parses user input","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"- Responds accordingly in the output","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"Parser:","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"- Parses the initial user input, stores info in storage","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"Ui:","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"- Based on input, respond or call for further parsing","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"- Can give default replies","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"- Can ask storage to add / remove tasks","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"- Can ask storage to mark / unmark tasks","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"Storage:","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"- Stores input","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"- Stores tasks in an ArrayList","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"- Can call parser to help with generating required info","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"- Has methods to add or give additional info on tasks","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"FileManager:","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"- Loads data on startup","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"- Updates data when add/delete/mark tasks","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"Task:","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"- ToDo","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"- Deadline","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"- Event","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"UkeCatException:","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"- Custom exceptions -\u003e Will print out my manually written messages","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziiqii":31}},{"path":"src/main/java/ukecat/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":" * Represents a Deadline task in the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":" * Inherits from the Task class and includes additional methods specific to Deadline tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"    private LocalDate by;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"     * @param by          The deadline date of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"     * Constructs a new Deadline task with the specified status, description, and deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"     * @param isDone      The status of the Deadline task (\"0\" for not done, \"1\" for done).","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"     * @param by          The deadline date of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"    public Deadline(String isDone, String description, LocalDate by) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"        super(isDone, description);","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"     * Gets the string representation of the deadline date.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"     * @return The deadline date as a string.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"    public String getBy() {","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"        return by.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"     * The string includes the task type, status icon, description, and deadline information.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"ziiqii"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"ziiqii"},"content":"        String info \u003d String.format(\"(by: %s)\", by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"ziiqii"},"content":"        return String.format(\"[D]%s%s %s\", this.getStatusIcon(), super.toString(), info);","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ziiqii":56}},{"path":"src/main/java/ukecat/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"    private void flip() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ziiqii"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ziiqii"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ziiqii"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ziiqii"},"content":"        db.flip();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ziiqii"},"content":"        return db;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ziiqii":61}},{"path":"src/main/java/ukecat/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":" * Represents an Event task in the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":" * Inherits from the Task class and includes additional methods specific to Event tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"    private LocalDate start;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"    private LocalDate end;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"     * Constructs a new Event task with the specified description, start date, and end date.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"     * @param start       The start date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"     * @param end         The end date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"     * Constructs a new Event task with the specified status, description, start date, and end date.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"     * @param isDone      The status of the Event task (\"0\" for not done, \"1\" for done).","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"     * @param start       The start date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"     * @param end         The end date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"    public Event(String isDone, String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"        super(isDone, description);","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"     * Gets the string representation of the start date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"     * @return The start date of the event as a string.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"    public String getStart() {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"        return this.start.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"     * Gets the string representation of the end date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ziiqii"},"content":"     * @return The end date of the event as a string.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ziiqii"},"content":"    public String getEnd() {","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"        return this.end.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ziiqii"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ziiqii"},"content":"     * The string includes the task type, status icon, description, and event date information.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ziiqii"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ziiqii"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"ziiqii"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"ziiqii"},"content":"        String info \u003d String.format(\"(from: %s to: %s)\",","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"ziiqii"},"content":"                start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"ziiqii"},"content":"                end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"ziiqii"},"content":"        return String.format(\"[E]%s%s %s\", this.getStatusIcon(), super.toString(), info);","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ziiqii":72}},{"path":"src/main/java/ukecat/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import java.io.File;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":" * Manages the loading and updating of tasks from/to a data file.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":" * Handles interactions between the application\u0027s Storage, Parser, and tasks file.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"public class FileManager {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"     * Loads tasks from the data file during application startup.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"     * If the data file is not found, it creates a new file.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"     * Reads data line by line, and for each line, asks Storage to load the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"     * Storage, in turn, asks Parser to parse the line and creates a Task to be added.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"    public static void loadTasks() {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"        File file \u003d new File(\"data/taskData.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"                Storage.loadTask(scanner.nextLine());","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"                boolean isCreated \u003d file.createNewFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"                if (isCreated) {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"                    System.out.println(\"File not found, I created one for you!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"                System.out.println(\"IO error occurred when creating the file.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"     * Updates the tasks file by rewriting it with data from Storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"     * Each task is converted to CSV format using Parser\u0027s parseTaskToCsv method.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"    public static void updateTasks() {","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(\"data/taskData.txt\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"            for (Task task : Storage.getTasks()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"                fileWriter.write(Parser.parseTaskToCsv(task) + \"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"IO error occurred while updating.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"ziiqii":51}},{"path":"src/main/java/ukecat/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"public class Launcher {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ziiqii":12}},{"path":"src/main/java/ukecat/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"    private UkeCat ukeCat \u003d new UkeCat();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(ukeCat);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"            stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ziiqii":31}},{"path":"src/main/java/ukecat/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"    private UkeCat duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"    public void setDuke(UkeCat d) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ziiqii":51}},{"path":"src/main/java/ukecat/MarkType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":" * Enum representing the types of marking for tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":" * - MARK: Indicates marking a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":" * - UNMARK: Indicates marking a task as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"public enum MarkType {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"    MARK, UNMARK;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziiqii":10}},{"path":"src/main/java/ukecat/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"public class Parser {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"     * Parse user input and stores the input and words array into the Storage class.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"     * Leading and trailing whitespaces are also trimmed from the words array.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"    public static void parse() {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"        // trim removes leading and trailing whitespaces","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"        Storage.input \u003d sc.nextLine().trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"        // whitespace regex is //s, the + means whitespace of any length","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"        Storage.words \u003d Storage.input.split(\"\\\\s+\");","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"     * Parses the input string to extract the description for a todo using regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"     * If the input matches the pattern, the description is extracted and stored in the Storage class.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"     * If the input does not match the expected format, a UkeCatException is thrown.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"     * @param input The input string representing a todo.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"     * @throws UkeCatException If input does not match the expected format.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"    public static void parseToDo(String input) throws UkeCatException {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"        // Regex pattern: todo + whitespaces + any chars","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"        Pattern pattern \u003d Pattern.compile(\"^todo\\\\s+(.+)\");","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"            Storage.desc \u003d matcher.group(1); // store first capturing group","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"            throw new UkeCatException(\"Wrong format, use: todo \u003cdesc\u003e\");","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"     * Parses the input string to extract the description for a deadline using regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"     * If the input matches the pattern, the description is extracted and stored in the Storage class.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"     * If the input does not match the expected format, a UkeCatException is thrown.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"     * @param input The input string representing a deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"     * @throws UkeCatException If input does not match the expected format.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ziiqii"},"content":"    public static void parseDeadline(String input) throws UkeCatException {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ziiqii"},"content":"        // Regex pattern: deadline + spaces + chars + spaces + /by + spaces + chars","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ziiqii"},"content":"        Pattern pattern \u003d Pattern.compile(\"^deadline\\\\s+(.+)\\\\s+/by\\\\s+(.+)\");","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ziiqii"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"ziiqii"},"content":"                Storage.desc \u003d matcher.group(1);","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"ziiqii"},"content":"                Storage.by \u003d LocalDate.parse(matcher.group(2));","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"ziiqii"},"content":"            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"ziiqii"},"content":"                throw new UkeCatException(\"Wrong format1, use: deadline \u003cdesc\u003e /by yyyy-mm-dd\");","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ziiqii"},"content":"     * Parses the input string to extract the description for an event using regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ziiqii"},"content":"     * If the input matches the pattern, the description is extracted and stored in the Storage class.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ziiqii"},"content":"     * If the input does not match the expected format, a UkeCatException is thrown.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ziiqii"},"content":"     * @param input The input string representing an event.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ziiqii"},"content":"     * @throws UkeCatException If input does not match the expected format.","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ziiqii"},"content":"    public static void parseEvent(String input) throws UkeCatException {","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"ziiqii"},"content":"        // Regex pattern: event + spaces + chars + spaces +","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"ziiqii"},"content":"        // /from + spaces + chars + spaces + /to + spaces + chars","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"ziiqii"},"content":"        Pattern pattern \u003d Pattern.compile(\"^event\\\\s+(.+)\\\\s+/from\\\\s+(.+)\\\\s+/to\\\\s+(.+)\");","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"ziiqii"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"ziiqii"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"ziiqii"},"content":"            Storage.desc \u003d matcher.group(1);","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"ziiqii"},"content":"            Storage.start \u003d LocalDate.parse(matcher.group(2));","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"ziiqii"},"content":"            Storage.end \u003d LocalDate.parse(matcher.group(3));","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"ziiqii"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"ziiqii"},"content":"            throw new UkeCatException(\"Wrong format, use: event \u003cdesc\u003e /from yyyy-mm-dd /to yyyy-mm-dd\");","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"ziiqii"},"content":"     * Extracts the index of task to be deleted from input words array.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"ziiqii"},"content":"     * @param words An array of words representing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"ziiqii"},"content":"     * @return The task number (index) to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"ziiqii"},"content":"     * @throws UkeCatException If the input does not match the expected format or if the task number is not a valid integer.","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"ziiqii"},"content":"    public static int parseDeleteTask(String[] words) throws UkeCatException {","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"ziiqii"},"content":"        try{","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"ziiqii"},"content":"            if (words.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"ziiqii"},"content":"                return Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"ziiqii"},"content":"            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"ziiqii"},"content":"                throw new UkeCatException(\"Wrong format, use: mark / unmark \u003ctask#\u003e\");","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"ziiqii"},"content":"        }  catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"ziiqii"},"content":"            throw new UkeCatException(\"Wrong format, use: mark / unmark \u003ctask#\u003e\");","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"ziiqii"},"content":"     * Extracts the index of task to be marked from input words array.","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"ziiqii"},"content":"     * @param words An array of words representing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"ziiqii"},"content":"     * @return The task number (index) to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"ziiqii"},"content":"     * @throws UkeCatException If the input does not match the expected format or if the task number is not a valid integer.","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"ziiqii"},"content":"    public static int parseMarkTask(String[] words) throws UkeCatException {","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"ziiqii"},"content":"            if (words.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"ziiqii"},"content":"                return Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"ziiqii"},"content":"            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"ziiqii"},"content":"                throw new UkeCatException(\"Wrong format, use: mark / unmark \u003ctask#\u003e\");","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"ziiqii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"ziiqii"},"content":"            throw new UkeCatException(\"Wrong format, use: mark / unmark \u003ctask#\u003e\");","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"ziiqii"},"content":"     * Parses the user input for finding tasks and extracts the keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"ziiqii"},"content":"     * @param words The array of words representing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"ziiqii"},"content":"     * @return The keyword used for finding tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"ziiqii"},"content":"     * @throws UkeCatException If the input format is incorrect.","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"ziiqii"},"content":"    public static String parseFindTask(String[] words) throws UkeCatException {","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"ziiqii"},"content":"        if (words.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"ziiqii"},"content":"            return words[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"ziiqii"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"ziiqii"},"content":"            throw new UkeCatException(\"Wrong format, use: find \u003ckeyword\u003e\");","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"ziiqii"},"content":"     * Converts a Task object into a CSV (Comma-Separated Values) format string.","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"ziiqii"},"content":"     * The CSV format is as follows:","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"ziiqii"},"content":"     * - ToDo: T, 0/1, desc","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"ziiqii"},"content":"     * - Deadline: D, 0/1, desc, by","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"ziiqii"},"content":"     * - Event: E, 0/1, desc, from, to","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"ziiqii"},"content":"     * @param t The Task object to be converted to CSV.","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"ziiqii"},"content":"     * @return A CSV format string representing the given Task.","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"ziiqii"},"content":"    public static String parseTaskToCsv(Task t) {","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"ziiqii"},"content":"        if (t instanceof ToDo) {","lastModifiedDate":"2024-01-26"},{"lineNumber":152,"author":{"gitId":"ziiqii"},"content":"            return String.format(\"T,%d,%s\", t.getIntIsDone(), t.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":153,"author":{"gitId":"ziiqii"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2024-01-26"},{"lineNumber":154,"author":{"gitId":"ziiqii"},"content":"            Deadline x \u003d (Deadline) t;","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"ziiqii"},"content":"            return String.format(\"D,%d,%s,%s\", t.getIntIsDone(), t.getDescription(), x.getBy());","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"ziiqii"},"content":"        } else { // instanceof ukecat.Event","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"ziiqii"},"content":"            Event x \u003d (Event) t;","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"ziiqii"},"content":"            return String.format(\"E,%d,%s,%s,%s\", t.getIntIsDone(), t.getDescription(),","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"ziiqii"},"content":"                    x.getStart(), x.getEnd());","lastModifiedDate":"2024-01-26"},{"lineNumber":160,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":161,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":162,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":163,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"ziiqii"},"content":"     * Parses a CSV (Comma-Separated Values) format string and converts it into a format","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"ziiqii"},"content":"     * compatible with the UkeCat application. The CSV format is expected to represent tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"ziiqii"},"content":"     * in the following way:","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"ziiqii"},"content":"     * - ToDo: T, 0/1, desc","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"ziiqii"},"content":"     * - Deadline: D, 0/1, desc, by","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"ziiqii"},"content":"     * - Event: E, 0/1, desc, from, to","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"ziiqii"},"content":"     * The method extracts information from the CSV string, modifies the content in the Storage","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"ziiqii"},"content":"     * class, and then calls the respective parsing methods for ToDo, Deadline, or Event tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":172,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"ziiqii"},"content":"     * @param csv The CSV format string to be parsed.","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"ziiqii"},"content":"    public static void parseCsv(String csv) {","lastModifiedDate":"2024-01-26"},{"lineNumber":176,"author":{"gitId":"ziiqii"},"content":"        String[] words \u003d csv.split(\",\");","lastModifiedDate":"2024-01-26"},{"lineNumber":177,"author":{"gitId":"ziiqii"},"content":"        Storage.words \u003d words;","lastModifiedDate":"2024-01-26"},{"lineNumber":178,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":179,"author":{"gitId":"ziiqii"},"content":"            switch (words[0]) {","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"ziiqii"},"content":"            case \"T\":","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"ziiqii"},"content":"                Storage.words[0] \u003d \"todo\";","lastModifiedDate":"2024-01-26"},{"lineNumber":182,"author":{"gitId":"ziiqii"},"content":"                Storage.input \u003d String.format(\"todo %s\", words[2]);","lastModifiedDate":"2024-01-26"},{"lineNumber":183,"author":{"gitId":"ziiqii"},"content":"                parseToDo(Storage.input);","lastModifiedDate":"2024-01-26"},{"lineNumber":184,"author":{"gitId":"ziiqii"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"ziiqii"},"content":"            case \"D\":","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"ziiqii"},"content":"                Storage.words[0] \u003d \"deadline\";","lastModifiedDate":"2024-01-26"},{"lineNumber":187,"author":{"gitId":"ziiqii"},"content":"                Storage.input \u003d String.format(\"deadline %s /by %s\", words[2], words[3]);","lastModifiedDate":"2024-01-26"},{"lineNumber":188,"author":{"gitId":"ziiqii"},"content":"                parseDeadline(Storage.input);","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"ziiqii"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"ziiqii"},"content":"            case \"E\":","lastModifiedDate":"2024-02-04"},{"lineNumber":191,"author":{"gitId":"ziiqii"},"content":"                Storage.words[0] \u003d \"event\";","lastModifiedDate":"2024-01-26"},{"lineNumber":192,"author":{"gitId":"ziiqii"},"content":"                Storage.input \u003d String.format(\"event %s /from %s /to %s\", words[2], words[3], words[4]);","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"ziiqii"},"content":"                parseEvent(Storage.input);","lastModifiedDate":"2024-01-26"},{"lineNumber":194,"author":{"gitId":"ziiqii"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":195,"author":{"gitId":"ziiqii"},"content":"            default:","lastModifiedDate":"2024-01-26"},{"lineNumber":196,"author":{"gitId":"ziiqii"},"content":"                System.out.println(\"Can\u0027t read csv, file corrupted, abort!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":197,"author":{"gitId":"ziiqii"},"content":"                System.exit(-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":199,"author":{"gitId":"ziiqii"},"content":"        } catch (UkeCatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":200,"author":{"gitId":"ziiqii"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":201,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":202,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":203,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":204,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"ziiqii"},"content":"     * Closes the Scanner used for reading user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":206,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"ziiqii"},"content":"    public static void closeScanner() {","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"ziiqii"},"content":"        sc.close();","lastModifiedDate":"2024-01-24"},{"lineNumber":209,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":210,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziiqii":210}},{"path":"src/main/java/ukecat/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":" * The Storage class manages the storage of tasks and related information for the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":" * It includes methods for adding tasks and accessing the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"public class Storage {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"    // ukecat.Storage from input","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"    public static String input; // user input","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"    public static String[] words; // split words using","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"    public static String desc; // for any task","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"    public static LocalDate by; // for deadlines","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"    public static LocalDate start; // for events","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"    public static LocalDate end; // for events","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"    public static int numT \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"        return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"     * Adds a task based on the user input and parsed information.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"     * Handles different task types (ToDo, Deadline, Event).","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"    public static void addTask() {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"        try{","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"            switch (words[0]) {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"                Parser.parseToDo(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"                t \u003d new ToDo(desc);","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"                tasks.add(t);","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"                Parser.parseDeadline(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"                t \u003d new Deadline(desc, by);","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"                tasks.add(t);","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"            case \"event\":","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"                Parser.parseEvent(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"                t \u003d new Event(desc, start, end);","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"                tasks.add(t);","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ziiqii"},"content":"            numT++;","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"  I added this task: \" + t);","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ziiqii"},"content":"            report();","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"            FileManager.updateTasks();","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"ziiqii"},"content":"        } catch(Exception e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"ziiqii"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ziiqii"},"content":"     * Deletes a task based on the user input and updates the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ziiqii"},"content":"     * Handles exceptions such as UkeCatException and IndexOutOfBoundsException.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ziiqii"},"content":"    public static void deleteTask() {","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"ziiqii"},"content":"            int deleteIndex \u003d Parser.parseDeleteTask(words);","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"ziiqii"},"content":"            Task deletedTask \u003d tasks.remove(deleteIndex);","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"ziiqii"},"content":"            numT--;","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"  I removed this task: \" + deletedTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"ziiqii"},"content":"            report();","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"ziiqii"},"content":"            FileManager.updateTasks();","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"ziiqii"},"content":"        } catch (UkeCatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"ziiqii"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"ziiqii"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"Task not found. Please delete task from list:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"ziiqii"},"content":"            printTasks();","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ziiqii"},"content":"     * Marks a task as done or not done based on the user input and updates the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"ziiqii"},"content":"     * Handles exceptions such as UkeCatException and IndexOutOfBoundsException.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"ziiqii"},"content":"     * @param markType The type of marking (MARK for done, UNMARK for not done).","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"ziiqii"},"content":"    public static void markTask(MarkType markType) {","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"ziiqii"},"content":"            int taskIndex \u003d Parser.parseMarkTask(words);","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"ziiqii"},"content":"            tasks.get(taskIndex).setDone(markType);","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"ziiqii"},"content":"            FileManager.updateTasks();","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"ziiqii"},"content":"        } catch (UkeCatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"ziiqii"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"ziiqii"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"Task not found. Please mark a valid task from the list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"ziiqii"},"content":"            printTasks();","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"ziiqii"},"content":"     * Finds tasks in the task list containing the specified keyword in their descriptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"ziiqii"},"content":"     * Prints the matching tasks along with their indices.","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"ziiqii"},"content":"     * If no matching tasks are found, a message is displayed.","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"ziiqii"},"content":"     * Catches and handles a UkeCatException if there\u0027s an issue parsing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"ziiqii"},"content":"    public static void findTask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"ziiqii"},"content":"            String keyword \u003d Parser.parseFindTask(words);","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"ziiqii"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"ziiqii"},"content":"            if (numT \u003d\u003d 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"ziiqii"},"content":"                System.out.println(\"  No tasks in the list yet!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"ziiqii"},"content":"                return;","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"ziiqii"},"content":"            for (int i \u003d 0; i \u003c numT; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"ziiqii"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"ziiqii"},"content":"                if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"ziiqii"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"ziiqii"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"ziiqii"},"content":"            if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"ziiqii"},"content":"                System.out.println(\"  No tasks match the keyword.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"ziiqii"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"ziiqii"},"content":"                System.out.println(\"  Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"ziiqii"},"content":"                for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"ziiqii"},"content":"                    System.out.format(\"  %d. %s%n\", i + 1, matchingTasks.get(i).toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"ziiqii"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"ziiqii"},"content":"        } catch (UkeCatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"ziiqii"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"ziiqii"},"content":"     * Adds a task based on the CSV input and updates the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"ziiqii"},"content":"     * Handles exceptions for parsing different task types (ToDo, Deadline, Event).","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"ziiqii"},"content":"     * \u003cp\u003eAssumes that words[1] is \"0\" or \"1\" representing the task\u0027s done status.","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"ziiqii"},"content":"    public static void addCsvTask() {","lastModifiedDate":"2024-01-26"},{"lineNumber":144,"author":{"gitId":"ziiqii"},"content":"        Task t;","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"ziiqii"},"content":"        try{","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"ziiqii"},"content":"            switch (words[0]) {","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"ziiqii"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"ziiqii"},"content":"                Parser.parseToDo(input);","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"ziiqii"},"content":"                t \u003d new ToDo(words[1], desc);","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"ziiqii"},"content":"                tasks.add(t);","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"ziiqii"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":152,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":153,"author":{"gitId":"ziiqii"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-26"},{"lineNumber":154,"author":{"gitId":"ziiqii"},"content":"                Parser.parseDeadline(input);","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"ziiqii"},"content":"                t \u003d new Deadline(words[1], desc, by);","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"ziiqii"},"content":"                tasks.add(t);","lastModifiedDate":"2024-01-26"},{"lineNumber":157,"author":{"gitId":"ziiqii"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"ziiqii"},"content":"            case \"event\":","lastModifiedDate":"2024-01-26"},{"lineNumber":160,"author":{"gitId":"ziiqii"},"content":"                Parser.parseEvent(input);","lastModifiedDate":"2024-01-26"},{"lineNumber":161,"author":{"gitId":"ziiqii"},"content":"                t \u003d new Event(words[1], desc, start, end);","lastModifiedDate":"2024-01-26"},{"lineNumber":162,"author":{"gitId":"ziiqii"},"content":"                tasks.add(t);","lastModifiedDate":"2024-01-26"},{"lineNumber":163,"author":{"gitId":"ziiqii"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":164,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":165,"author":{"gitId":"ziiqii"},"content":"            numT++;","lastModifiedDate":"2024-01-26"},{"lineNumber":166,"author":{"gitId":"ziiqii"},"content":"        } catch(Exception e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":167,"author":{"gitId":"ziiqii"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":171,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":172,"author":{"gitId":"ziiqii"},"content":"     * Loads a task from CSV input, parses it, and adds it to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"ziiqii"},"content":"     * @param csv The CSV input representing a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"ziiqii"},"content":"    public static void loadTask(String csv) {","lastModifiedDate":"2024-01-26"},{"lineNumber":177,"author":{"gitId":"ziiqii"},"content":"        Parser.parseCsv(csv);","lastModifiedDate":"2024-01-26"},{"lineNumber":178,"author":{"gitId":"ziiqii"},"content":"        addCsvTask();","lastModifiedDate":"2024-01-26"},{"lineNumber":179,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":181,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"ziiqii"},"content":"     * Prints the list of tasks to the console.","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"ziiqii"},"content":"     * If no tasks are present, a message indicating an empty list is displayed.","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"ziiqii"},"content":"    public static void printTasks() {","lastModifiedDate":"2024-01-24"},{"lineNumber":186,"author":{"gitId":"ziiqii"},"content":"        if (words.length !\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":187,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"  Unknown command! Use \u0027list\u0027 instead.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":188,"author":{"gitId":"ziiqii"},"content":"            return;","lastModifiedDate":"2024-02-04"},{"lineNumber":189,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":190,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":191,"author":{"gitId":"ziiqii"},"content":"        if (numT \u003d\u003d 0) {","lastModifiedDate":"2024-01-24"},{"lineNumber":192,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"  No tasks in the list yet!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":193,"author":{"gitId":"ziiqii"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":194,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":195,"author":{"gitId":"ziiqii"},"content":"        for (int i \u003d 0; i \u003c numT; i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":196,"author":{"gitId":"ziiqii"},"content":"            System.out.format(\"  %d. %s%n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":197,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":198,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":199,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":200,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"ziiqii"},"content":"     * Displays a report indicating the number of tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"ziiqii"},"content":"    public static void report() {","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"ziiqii"},"content":"        String out \u003d String.format(\"  You have %d task%s in the list now.\", numT, numT \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"ziiqii"},"content":"        System.out.println(out);","lastModifiedDate":"2024-01-24"},{"lineNumber":206,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":207,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziiqii":207}},{"path":"src/main/java/ukecat/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":" * Represents a generic task in the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":" * Acts as the base class for specific task types like ToDo, Deadline, and Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"    private String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"     * Constructs a new Task with the specified status, description, and isDone value.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"     * @param isDone      The status of the task (\"0\" for not done, \"1\" for done).","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"    public Task(String isDone, String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"        this.isDone \u003d isDone.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"     * Sets the task as done or not done based on the provided MarkType.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"     * @param markType The type of marking (MARK for done, UNMARK for not done).","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"    public void setDone(MarkType markType) {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"        switch (markType) {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"        case MARK:","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"  Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"  OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"        System.out.println(\"    \" + this);","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ziiqii"},"content":"     * Gets the integer representation of the isDone status (1 for done, 0 for not done).","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ziiqii"},"content":"     * @return The integer representation of the isDone status.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"    public int getIntIsDone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"ziiqii"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ziiqii"},"content":"     * Gets the status icon for the task (\"[X] \" for done, \"[ ] \" for not done).","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ziiqii"},"content":"     * @return The status icon for the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ziiqii"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"ziiqii"},"content":"        return isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ziiqii"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ziiqii"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ziiqii"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"ziiqii"},"content":"        return this.description;","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ziiqii"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ziiqii"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ziiqii"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"ziiqii"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"ziiqii"},"content":"        return this.description;","lastModifiedDate":"2024-01-21"},{"lineNumber":86,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":87,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"ziiqii":87}},{"path":"src/main/java/ukecat/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":" * Represents a ToDo task in the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":" * Inherits from the Task class and includes additional methods specific to ToDo tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"     * Constructs a new ToDo task with the specified status and description.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"     * @param isDone      The status of the ToDo task (\"0\" for not done, \"1\" for done).","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"    public ToDo(String isDone, String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"        super(isDone, description);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"     * The string includes the task type, status icon, and description.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"        return String.format(\"[T]%s%s\", this.getStatusIcon(), super.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ziiqii":38}},{"path":"src/main/java/ukecat/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":" * The Ui class handles user interface interactions for the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":" * It provides methods for responding to user commands, displaying welcome and farewell messages,","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":" * and interacting with the Storage class to manage tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"     * Responds to user commands based on the provided array of words.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"     * Asks Storage class to perform relevant actions in response to user commands.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"     * @param words The array of words representing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"    public void respond(String[] words) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"        switch (words[0]) {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"        case \"hi\":","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"            System.out.println(HI);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"        case \"list\":","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"            Storage.printTasks();","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"            Storage.markTask(MarkType.MARK);","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"            Storage.markTask(MarkType.UNMARK);","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"            Storage.deleteTask();","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"        case \"event\":","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"            Storage.addTask();","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"        case \"find\":","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"            Storage.findTask();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"        default:","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"  I don\u0027t understand! Try adding a task!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"    public void welcome() {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"        System.out.println(LINE + WELCOME + LINE);","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ziiqii"},"content":"     * Displays the farewell message to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"    public void bye() {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"ziiqii"},"content":"        System.out.println(BYE);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"ziiqii"},"content":"    // Hardcoded messages","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"ziiqii"},"content":"    public static final String LINE \u003d \"________________________________________________________________________\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ziiqii"},"content":"    public static String WELCOME \u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ziiqii"},"content":"            \"                    /~(_)~\\\\.    Hi! I\u0027m UkeCat, a cat with an ukulele!\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ziiqii"},"content":"                    + \" /\u003d ••\\\\      /~(_)~\\\\        \\\\   \\\\| /\\\\           What can I do for you?\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ziiqii"},"content":"                    + \"K\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d(  )\u003d\u003d\u003d]  |     (`~ o7 \\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ziiqii"},"content":"                    + \" \\\\\u003d ••/      \\\\_(~)_/        /    c\\\\   c\\\\ \\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ziiqii"},"content":"                    + \"                    \\\\_(~)_/`     U`U_, )\u003d~~ \\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ziiqii"},"content":"    public static final String BYE \u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ziiqii"},"content":"            \"  +--------------------+\" + \"    /\\\\_/\\\\\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ziiqii"},"content":"                    \"  |Meow~ See you again!|\" + \"   \u003d~.~\u003d|\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"ziiqii"},"content":"                    \"  +--------------------+\" + \"     \\\\  \\\\/\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"ziiqii"},"content":"    public static final String HI \u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"ziiqii"},"content":"            \"  +-------------------------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"ziiqii"},"content":"                    \"  |Greetings, sentient being known as a human, I wish to convey my heartfelt salutations to you.                |\"+\"    /\\\\_/\\\\\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"ziiqii"},"content":"                    \"  |As we commence our digital discourse, I extend a warm welcome and express my enthusiasm for this interaction.|\"+\"   \u003dX.X\u003d|\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"ziiqii"},"content":"                    \"  |May our engagement be both enlightening and mutually beneficial in the realm of virtual communication.       |\"+\"     \\\\  \\\\/\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"ziiqii"},"content":"                    \"  +-------------------------------------------------------------------------------------------------------------+\";","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziiqii":80}},{"path":"src/main/java/ukecat/UkeCat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":" * The main class representing the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":" * UkeCat is a simple program that interacts with users to manage tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":" * This class initializes the user interface, loads tasks from storage,","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":" * and handles user input through the Parser class.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"public class UkeCat extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"    private final Image user \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"    private final Image duke \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"            this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"    public UkeCat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"     * Runs the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"     * Displays a welcome message, loads tasks, and continuously","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"     * processes user input until the \"bye\" command is entered.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"        ui.welcome();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"        FileManager.loadTasks();","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"            // Read user input","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"            while (true) {","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"                Parser.parse();","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"                if (Storage.words[0].equals(\"bye\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"                    ui.bye();","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ziiqii"},"content":"                    Parser.closeScanner();","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"ziiqii"},"content":"                    System.exit(0);","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"ziiqii"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"ziiqii"},"content":"                ui.respond(Storage.words);","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"ziiqii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"ziiqii"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":61,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ziiqii"},"content":"     * The main method to start the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ziiqii"},"content":"     * Creates an instance of UkeCat and calls the run method.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ziiqii"},"content":"     * @param args The command-line arguments (not used for UkeCat)","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ziiqii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ziiqii"},"content":"        new UkeCat().run();","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"ziiqii"},"content":"    VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ziiqii"},"content":"    TextField userInput \u003d new TextField();","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ziiqii"},"content":"     * The start() method is called when the application is launched.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ziiqii"},"content":"     * @param stage","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"ziiqii"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ziiqii"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ziiqii"},"content":"        // Step 1. Setting up required components","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ziiqii"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"ziiqii"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"ziiqii"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"ziiqii"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"ziiqii"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"ziiqii"},"content":"        // Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"ziiqii"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"ziiqii"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"ziiqii"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"ziiqii"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"ziiqii"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"ziiqii"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"ziiqii"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"ziiqii"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"ziiqii"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"ziiqii"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"ziiqii"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"ziiqii"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"ziiqii"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"ziiqii"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"ziiqii"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"ziiqii"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"ziiqii"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"ziiqii"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"ziiqii"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"ziiqii"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"ziiqii"},"content":"        stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"ziiqii"},"content":"        // Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"ziiqii"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"ziiqii"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"ziiqii"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"ziiqii"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"ziiqii"},"content":"        });","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"ziiqii"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"ziiqii"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"ziiqii"},"content":"        });","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"ziiqii"},"content":"    public void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"ziiqii"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"ziiqii"},"content":"        String dukeText \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"ziiqii"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"ziiqii"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"ziiqii"},"content":"                DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"ziiqii"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"ziiqii"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"ziiqii"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"ziiqii"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"ziiqii"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"ziiqii"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"ziiqii":156}},{"path":"src/main/java/ukecat/UkeCatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":" * Custom exception class for UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":" * This exception is thrown to indicate errors specific to the UkeCat application.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":" * It extends the base Exception class and includes a constructor to set the error message.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"public class UkeCatException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"     * Constructs a new UkeCatException with the specified error message.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"     * @param msg The error message that provides more information about the exception.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"    public UkeCatException(String msg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"        super(msg);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziiqii":18}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ziiqii":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ukecat.MainWindow\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter command here!\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ziiqii":21}},{"path":"src/test/java/ukecat/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"import static ukecat.Parser.parseDeleteTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"import static ukecat.Parser.parseTaskToCsv;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"    public void parseDeleteTask_validInput_success() throws UkeCatException {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"        // returns 1, the index of task to delete in list","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"        assertEquals(1, parseDeleteTask(new String[]{\"delete\", \"2\"}));","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"    public void parseDeleteTask_invalidInput_exceptionThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"            assertEquals(0, parseDeleteTask(new String[]{\"mark\", \"2\", \"now\"}));","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"        } catch (UkeCatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"            assertEquals(\"Wrong format, use: mark / unmark \u003ctask#\u003e\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"            assertEquals(0, parseDeleteTask(new String[]{\"mark\", \"me\"}));","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"        } catch (UkeCatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"            assertEquals(\"Wrong format, use: mark / unmark \u003ctask#\u003e\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"            assertEquals(0, parseDeleteTask(new String[]{\"mark\"}));","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziiqii"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziiqii"},"content":"        } catch (UkeCatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziiqii"},"content":"            assertEquals(\"Wrong format, use: mark / unmark \u003ctask#\u003e\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziiqii"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ziiqii"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ziiqii"},"content":"    public void parseTaskToCsv_validInput_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ziiqii"},"content":"        // returns string representation of tasks for csv","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ziiqii"},"content":"        assertEquals(\"T,0,watch lecture\",","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ziiqii"},"content":"                parseTaskToCsv(new ToDo(\"0\", \"watch lecture\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ziiqii"},"content":"        assertEquals(\"D,1,feed cat,2024-02-10\",","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ziiqii"},"content":"                parseTaskToCsv(new Deadline(\"1\", \"feed cat\",","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ziiqii"},"content":"                        LocalDate.parse(\"2024-02-10\"))));","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ziiqii"},"content":"        // lack of isDone -\u003e isDone is automatically 0","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ziiqii"},"content":"        assertEquals(\"E,0,holiday,2024-02-11,2024-02-11\",","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ziiqii"},"content":"                parseTaskToCsv(new Event(\"holiday\", LocalDate.parse(\"2024-02-11\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ziiqii"},"content":"                        LocalDate.parse(\"2024-02-11\"))));","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziiqii":58}},{"path":"src/test/java/ukecat/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"package ukecat;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"    public void addTask_validInput_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"        // checks if task is added successfully","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"        Storage.numT \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"        Storage.input \u003d \"todo buy bread\";","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"        Storage.words \u003d new String[]{\"todo\", \"buy bread\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"        System.out.println(Storage.numT);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"        Storage.addTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"        assertEquals(1, Storage.numT);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"    public void addTask_invalidInput_exceptionThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"        // throws exception if input not correct format","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"        Storage.numT \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"        Storage.input \u003d \"buy bread\";","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"        Storage.words \u003d new String[]{\"todo\", \"buy bread\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"        System.out.println(Storage.numT);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"        Storage.addTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"        assertEquals(0, Storage.numT);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziiqii":29}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"________________________________________________________________________","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"                    /~(_)~\\.    Hi! I\u0027m UkeCat, a cat with an ukulele!","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":" /\u003d ••\\      /~(_)~\\        \\   \\| /\\           What can I do for you?","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"K\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d|\u003d(  )\u003d\u003d\u003d]  |     (`~ o7","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":" \\\u003d ••/      \\_(~)_/        /    c\\   c\\","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"                    \\_(~)_/`     U`U_, )\u003d~~","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"________________________________________________________________________","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"  +-------------------------------------------------------------------------------------------------------------+","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"  |Greetings, sentient being known as a human, I wish to convey my heartfelt salutations to you.                |    /\\_/\\","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"  |As we commence our digital discourse, I extend a warm welcome and express my enthusiasm for this interaction.|   \u003dX.X\u003d|","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"ziiqii"},"content":"  |May our engagement be both enlightening and mutually beneficial in the realm of virtual communication.       |     \\  \\/","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"ziiqii"},"content":"  +-------------------------------------------------------------------------------------------------------------+","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"ziiqii"},"content":"  I added this task: [T][ ] a","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ziiqii"},"content":"  You have 1 tasks in the list now.","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ziiqii"},"content":"  I added this task: [D][ ] b (by: tmr)","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ziiqii"},"content":"  You have 2 tasks in the list now.","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"  I added this task: [E][ ] c (from: tdy to: tmr)","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ziiqii"},"content":"  You have 3 tasks in the list now.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ziiqii"},"content":"  Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"    [T][X] a","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ziiqii"},"content":"  OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"ziiqii"},"content":"    [T][ ] a","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ziiqii"},"content":"  1. [T][ ] a","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"ziiqii"},"content":"  2. [D][ ] b (by: tmr)","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"ziiqii"},"content":"  3. [E][ ] c (from: tdy to: tmr)","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"ziiqii"},"content":"  I removed this task: [T][ ] a","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ziiqii"},"content":"  You have 2 tasks in the list now.","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ziiqii"},"content":"  1. [D][ ] b (by: tmr)","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ziiqii"},"content":"  2. [E][ ] c (from: tdy to: tmr)","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"ziiqii"},"content":"  I don\u0027t understand! Try adding a task!","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ziiqii"},"content":"  +--------------------+    /\\_/\\","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"ziiqii"},"content":"  |Meow~ See you again!|   \u003d~.~\u003d|","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"ziiqii"},"content":"  +--------------------+     \\  \\/","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"ziiqii"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziiqii":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziiqii"},"content":"hi","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"ziiqii"},"content":"todo a","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"ziiqii"},"content":"deadline b /by tmr","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"ziiqii"},"content":"event c /from tdy /to tmr","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"ziiqii"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"ziiqii"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"ziiqii"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziiqii"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziiqii"},"content":"hello?","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziiqii"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ziiqii":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"ziiqii"},"content":"if exist ACTUAL.txt del ACTUAL.txt","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ziiqii"},"content":"java -classpath ..\\bin UkeCat \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"ziiqii"},"content":"FC ACTUAL.txt EXPECTED.txt","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"-":18,"ziiqii":3}}]
