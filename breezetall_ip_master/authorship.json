[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"breezetall"},"content":"    archiveFileName \u003d \u0027datuk.jar\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"breezetall"},"content":"    archiveBaseName \u003d \"datuk\"","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":42,"breezetall":22}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"T | 0 | one","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"T | 0 | one","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"D | 1 | now | 2020-12-12","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"breezetall":3}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"    private Label text;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"        text \u003d l;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"    private void flip() {","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"    public static DialogBox getUserDialog(String l, Image iv) {","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"        return new DialogBox(new Label(l), new ImageView(iv));","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"breezetall"},"content":"    public static DialogBox getDukeDialog(String l, Image iv) {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"breezetall"},"content":"        var db \u003d new DialogBox(new Label(l), new ImageView(iv));","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"breezetall"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"breezetall"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"breezetall":58}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":" * This Duke program is a chatbot that takes handles a list for the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"    private UI ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Datuk.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"    public void start(Stage stage) throws IOException {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"breezetall"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"breezetall"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"breezetall"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"breezetall"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"breezetall"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"breezetall"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"breezetall"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"breezetall"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"breezetall"},"content":"        stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"breezetall"},"content":"        stage.setTitle(\"Datuk \\uD83D\\uDC74\");","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"breezetall"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"breezetall"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"breezetall"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"breezetall"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"breezetall"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"breezetall"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"breezetall"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"breezetall"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"breezetall"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"breezetall"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"breezetall"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"breezetall"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"breezetall"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"breezetall"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"breezetall"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"breezetall"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"breezetall"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"breezetall"},"content":"        Label start \u003d new Label(ui.startMsg(tasks.reminder()));","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"breezetall"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(start, new ImageView(duke)));","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"breezetall"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"breezetall"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"breezetall"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"breezetall"},"content":"        });","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"breezetall"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"breezetall"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"breezetall"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"breezetall"},"content":"        });","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"breezetall"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"breezetall"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"breezetall"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"breezetall"},"content":"        });","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"breezetall"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"breezetall"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"breezetall"},"content":"        });","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"breezetall"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"breezetall"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"breezetall"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"breezetall"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"breezetall"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"breezetall"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"breezetall"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"breezetall"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"breezetall"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"breezetall"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"breezetall"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"breezetall"},"content":"        Label datukText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"breezetall"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"breezetall"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"breezetall"},"content":"                DialogBox.getDukeDialog(datukText, new ImageView(duke))","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"breezetall"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":144,"author":{"gitId":"breezetall"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":145,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"breezetall"},"content":"     * Passes user input into the parser and executes the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":150,"author":{"gitId":"breezetall"},"content":"     * @param text user input.","lastModifiedDate":"2024-02-14"},{"lineNumber":151,"author":{"gitId":"breezetall"},"content":"     * @return chatbot response.","lastModifiedDate":"2024-02-14"},{"lineNumber":152,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"breezetall"},"content":"    public String getResponse(String text) {","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"breezetall"},"content":"        String out;","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"breezetall"},"content":"        String cmd \u003d parser.parseCmd(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"breezetall"},"content":"            if (cmd.equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"breezetall"},"content":"                out \u003d ui.byeMsg();","lastModifiedDate":"2024-02-11"},{"lineNumber":159,"author":{"gitId":"breezetall"},"content":"            } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"breezetall"},"content":"                out \u003d ui.printList(tasks.get());","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"breezetall"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":162,"author":{"gitId":"breezetall"},"content":"            else if (cmd.equals(\"mark\") || cmd.equals(\"unmark\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"breezetall"},"content":"                out \u003d tasks.marked(parser.parseMark(text));","lastModifiedDate":"2024-02-11"},{"lineNumber":164,"author":{"gitId":"breezetall"},"content":"                storage.saveTasks(tasks.get());","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"breezetall"},"content":"            } else if (cmd.equals(\"todo\") || cmd.equals(\"deadline\") || cmd.equals(\"event\")){","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"breezetall"},"content":"                out \u003d tasks.addItem(parser.parseAdd(text));","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"breezetall"},"content":"                storage.saveTasks(tasks.get());","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"breezetall"},"content":"            } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"breezetall"},"content":"                out \u003d tasks.deleteItem(parser.parseDelete(text));","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"breezetall"},"content":"                storage.saveTasks(tasks.get());","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"breezetall"},"content":"            } else if (cmd.equals(\"find\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"breezetall"},"content":"                out \u003d tasks.findItem(parser.parseFind(text));","lastModifiedDate":"2024-02-11"},{"lineNumber":173,"author":{"gitId":"breezetall"},"content":"            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"breezetall"},"content":"                throw new DukeException(\"Your input is invalid!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"breezetall"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"breezetall"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"breezetall"},"content":"            out \u003d ui.showError(de);","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"breezetall"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"breezetall"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-11"},{"lineNumber":180,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":182,"author":{"gitId":"breezetall"},"content":"        return out;","lastModifiedDate":"2024-02-11"},{"lineNumber":183,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":185,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"-":1,"breezetall":184}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":" * A custom throwable exception class that returns a specified error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"    public DukeException(String err) {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"        super(err);","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"        return super.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"breezetall":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"public class Launcher {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"breezetall":12}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"breezetall":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":" * This class processes user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"    public Parser() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"     * Returns the first word used to control the program flow in Duke.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"     * This method separates the first word from the full instruction given by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"     * @param cmd the full command given by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"     * @return the first word in the string.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"    public String parseCmd(String cmd) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"        if (cmd.equals(\"bye\") || cmd.equals(\"list\")){","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"            return cmd;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"        String[] split \u003d cmd.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"        return split[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"     * Returns an array of strings for the delete command usable by TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"     * The method processes the delete command.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"     * @param cmd the full instruction.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"     * @return an array of strings separated by function and index.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"     * @throws DukeException when given wrong number of parameters.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"    public String[] parseDelete(String cmd) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"        String[] str \u003d cmd.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"        if (str.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Missing params for delete!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"        } else if (str.length \u003e 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Too many params for delete!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"            Integer.parseInt(str[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Invalid number given.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"breezetall"},"content":"        return str;","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"breezetall"},"content":"     * Returns an array of strings for the mark/unmark command usable by TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"breezetall"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"breezetall"},"content":"     * This method will set the task to be complete or incomplete according to the user instruction.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"breezetall"},"content":"     * @param cmd the mark/unmark command.","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"breezetall"},"content":"     * @return an array of strings separated by function and index.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"breezetall"},"content":"     * @throws DukeException when given incorrect parameter type or incorrect number of parameters.","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"breezetall"},"content":"    public String[] parseMark(String cmd) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"breezetall"},"content":"        String[] str \u003d cmd.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"breezetall"},"content":"        if (str.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Incorrect number of params for mark/unmark\");","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"breezetall"},"content":"            Integer.parseInt(str[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"breezetall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Invalid number given.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"breezetall"},"content":"        return str;","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"breezetall"},"content":"     * Returns an array of strings of the commands usable by Todo, deadline or event.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"breezetall"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"breezetall"},"content":"     * This method processes all Add commands (Todo, deadline, event).","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"breezetall"},"content":"     * @param cmd add command.","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"breezetall"},"content":"     * @return an array of strings separated by function and parameters.","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"breezetall"},"content":"     * @throws DukeException when given incorrect number of parameters.","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"breezetall"},"content":"    public String[] parseAdd(String cmd) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"breezetall"},"content":"        String[] str \u003d cmd.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"breezetall"},"content":"        if (str[0].equals(\"todo\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"breezetall"},"content":"            return parseTodo(str);","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"breezetall"},"content":"        } else if (str[0].equals(\"deadline\")) {","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"breezetall"},"content":"            return parseDeadline(str);","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"breezetall"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"breezetall"},"content":"          return parseEvent(str);","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"breezetall"},"content":"    private String[] parseTodo(String[] str) throws DukeException {","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"breezetall"},"content":"        String desc;","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"breezetall"},"content":"        if (str.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Missing params for todo!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"breezetall"},"content":"        desc \u003d str[1].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"breezetall"},"content":"        return new String[] { str[0], desc };","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"breezetall"},"content":"    private String[] parseDeadline(String[] str) throws DukeException {","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"breezetall"},"content":"        String desc;","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"breezetall"},"content":"        LocalDate by;","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"breezetall"},"content":"        if (str.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Missing params for deadline!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"breezetall"},"content":"        String[] temp \u003d str[1].split(\"/by\");","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"breezetall"},"content":"        if (temp.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Missing deadline for deadline!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"breezetall"},"content":"        desc \u003d temp[0].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"breezetall"},"content":"        by \u003d validDate(temp[1].replaceAll(\"\\\\s\", \"\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"breezetall"},"content":"        return new String[] { str[0], desc, by.toString() };","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"breezetall"},"content":"    private String[] parseEvent(String[] str) throws DukeException {","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"breezetall"},"content":"        String desc, from, to;","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"breezetall"},"content":"        if (str.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Missing params for event!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"breezetall"},"content":"        String[] temp \u003d str[1].split(\"/from\");","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"breezetall"},"content":"        if (temp.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Missing [from] and [to] for event!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"breezetall"},"content":"        desc \u003d str[1].split(\"/from\")[0].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"breezetall"},"content":"        String[] temp2 \u003d str[1].split(\"/from\")[1].split(\"/to\");","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"breezetall"},"content":"        if (temp2.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Missing [to] for event!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"breezetall"},"content":"        from \u003d temp2[0].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"breezetall"},"content":"        to \u003d temp2[1].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"breezetall"},"content":"        return new String[] { str[0], desc, from, to };","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"breezetall"},"content":"     * Returns an Array of strings usable by find method.","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"breezetall"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":164,"author":{"gitId":"breezetall"},"content":"     * This method matches the keyword to the descriptions found in every item in the TaskList.","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"breezetall"},"content":"     * @param cmd find command.","lastModifiedDate":"2024-02-06"},{"lineNumber":167,"author":{"gitId":"breezetall"},"content":"     * @return str an array of strings separated by find and its keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"breezetall"},"content":"     * @throws DukeException when given incorrect number of parameters.","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"breezetall"},"content":"    public String[] parseFind(String cmd) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"breezetall"},"content":"        String[] str \u003d cmd.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"breezetall"},"content":"        if (str.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Missing params for find\");","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"breezetall"},"content":"        return str;","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"breezetall"},"content":"     * Returns LocalDate object that can be used by deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"breezetall"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"breezetall"},"content":"     * This method will validate that the input string is in the correct date format.","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"breezetall"},"content":"     * @param str A string that might be a date.","lastModifiedDate":"2024-02-06"},{"lineNumber":186,"author":{"gitId":"breezetall"},"content":"     * @return a Local date Object.","lastModifiedDate":"2024-02-06"},{"lineNumber":187,"author":{"gitId":"breezetall"},"content":"     * @throws DukeException when the string format is not a valid date.","lastModifiedDate":"2024-02-06"},{"lineNumber":188,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"breezetall"},"content":"    public LocalDate validDate(String str) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"breezetall"},"content":"        LocalDate ld;","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"breezetall"},"content":"            ld \u003d LocalDate.parse(str);","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"breezetall"},"content":"        } catch (DateTimeParseException dt) {","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Invalid date format. Use yyyy-MM-dd format.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":196,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"breezetall"},"content":"        return ld;","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":201,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"breezetall":201}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":" * The class handles reading and writing to save the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"    protected File path;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"     * Returns a list of tasks from data/data.txt.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"     * The method will attempt to load the data in the file if the folder exists, and will create the folder","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"     * if it does not.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"     * @return an ArrayList of type Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"     * @throws IOException when the file fails to be created.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"        path \u003d new File(Paths.get(\".\").toAbsolutePath().normalize().toString() + \"/data\");","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"        if (!path.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"            boolean isCreated \u003d path.mkdir();","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"            assert isCreated : \"path should be created\";","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"            Files.createFile(Paths.get(path.toString() + \"/data.txt\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"        return parseText();","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"    private ArrayList\u003cTask\u003e parseText() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"        BufferedReader  br \u003d Files.newBufferedReader(Paths.get(path.toString() + \"/data.txt\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"breezetall"},"content":"        while(br.ready()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"breezetall"},"content":"            String[] text \u003d br.readLine().split(Pattern.quote(\" | \"));","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"breezetall"},"content":"            if (text[0].isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"breezetall"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"breezetall"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"breezetall"},"content":"            if (text[0].equals(\"T\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"breezetall"},"content":"                assert text.length \u003d\u003d 3 : \"length should be 3\";","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"breezetall"},"content":"                Todo temp \u003d new Todo(text[2]);","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"breezetall"},"content":"                temp.setCheck(text[1].equals(\"1\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"breezetall"},"content":"                tasks.add(temp);","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"breezetall"},"content":"            } else if (text[0].equals(\"D\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"breezetall"},"content":"                assert text.length \u003d\u003d 4 : \"length should be 4\";","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"breezetall"},"content":"                Deadline temp \u003d new Deadline(text[2], LocalDate.parse(text[3]));","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"breezetall"},"content":"                temp.setCheck(text[1].equals(\"1\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"breezetall"},"content":"                tasks.add(temp);","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"breezetall"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"breezetall"},"content":"                assert text.length \u003d\u003d 4 : \"length should be 4\";","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"breezetall"},"content":"                String[] time \u003d text[3].split(\"-\");","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"breezetall"},"content":"                Event temp \u003d new Event(text[2], time[0], time[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"breezetall"},"content":"                temp.setCheck(text[1].equals(\"1\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"breezetall"},"content":"                tasks.add(temp);","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"breezetall"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"breezetall"},"content":"        return tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"breezetall"},"content":"     * This method iterates through all tasks in TaskList and appends the data into a StringBuilder.","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"breezetall"},"content":"     * When the TaskList has been iterated through, this method will write the data to the file data/data.txt.","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"breezetall"},"content":"     * @param tasks The list of Tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"breezetall"},"content":"     * @throws IOException when the File cannot be written to.","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"breezetall"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"breezetall"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"breezetall"},"content":"        for(Task t : tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"breezetall"},"content":"            if(t.getType().equals(\"T\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"breezetall"},"content":"                s.append(t.toSave());","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"breezetall"},"content":"            } else if(t.getType().equals(\"D\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"breezetall"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"breezetall"},"content":"                s.append(d.toSave());","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"breezetall"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"breezetall"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"breezetall"},"content":"                s.append(e.toSave());","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"breezetall"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"breezetall"},"content":"        String str \u003d s.toString();","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"breezetall"},"content":"        java.nio.file.Files.write(Paths.get(path.toString() + \"/data.txt\"),","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"breezetall"},"content":"                str.getBytes(StandardCharsets.UTF_8),","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"breezetall"},"content":"                StandardOpenOption.CREATE,","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"breezetall"},"content":"                StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"breezetall":117}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"import java.util.Collection;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":" *  Keeps a list of tasks and handles addition or deletion of items in the list.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"    private UI ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"     * Adds task of type todo, deadline or event to the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"     * @param cmd array of strings containing the task type and the parameters.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"     * @throws DukeException when deadline parameter is not a valid date.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"    public String addItem(String[] cmd) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"        Task t;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"        if (cmd[0].equals(\"todo\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"            t \u003d new Todo(cmd[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"            list.add(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"        } else if (cmd[0].equals(\"deadline\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"            t \u003d new Deadline(cmd[1], parser.validDate(cmd[2]));","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"            list.add(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"            t \u003d new Event(cmd[1], cmd[2], cmd[3]);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"            list.add(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"breezetall"},"content":"        return ui.showAddMsg(t, list.size());","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"breezetall"},"content":"     * Removes an item from the TaskList if it exists.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"breezetall"},"content":"     * @param str array of strings containing the delete command and the index to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"breezetall"},"content":"     * @throws DukeException when index does is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"breezetall"},"content":"    public String deleteItem(String[] str) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"breezetall"},"content":"        int index \u003d Integer.parseInt(str[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"breezetall"},"content":"            list.get(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"breezetall"},"content":"        } catch (IndexOutOfBoundsException  e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Index does not exist!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"breezetall"},"content":"        String out \u003d ui.showDeleteMsg(list.get(index), list.size());","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"breezetall"},"content":"        list.remove(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"breezetall"},"content":"        return out;","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"breezetall"},"content":"     * Marks/unmarks tasks as complete/incomplete","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"breezetall"},"content":"     * @param cmd an array of strings containing mark/unmark command and the index to be marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"breezetall"},"content":"     * @throws DukeException when index is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"breezetall"},"content":"    public String marked(String[] cmd) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"breezetall"},"content":"        int index \u003d Integer.parseInt(cmd[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"breezetall"},"content":"        index--;","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"breezetall"},"content":"            list.get(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"breezetall"},"content":"        } catch (IndexOutOfBoundsException  e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"breezetall"},"content":"            throw new DukeException(\"Index does not exist!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"breezetall"},"content":"        if (cmd[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"breezetall"},"content":"            String out \u003d ui.showMark(list.get(index).getDesc());","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"breezetall"},"content":"            list.get(index).setCheck(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"breezetall"},"content":"            return out;","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"breezetall"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"breezetall"},"content":"            String out \u003d ui.showUnmark(list.get(index).getDesc());","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"breezetall"},"content":"            list.get(index).setCheck(false);","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"breezetall"},"content":"            return out;","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"breezetall"},"content":"     * Matches the keyword to all descriptions in the list and prints a list of tasks that match.","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"breezetall"},"content":"     * @param cmd an array of strings containing find and the keyword.","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"breezetall"},"content":"    public String findItem(String[] cmd) {","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"breezetall"},"content":"        String search \u003d cmd[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"breezetall"},"content":"        ArrayList\u003cTask\u003e task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"breezetall"},"content":"        for (Task t : list) {","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"breezetall"},"content":"            if (t.getDesc().contains(search)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"breezetall"},"content":"                task.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"breezetall"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"breezetall"},"content":"        return ui.printFindList(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"breezetall"},"content":"     * Returns a Deadline task with the earliest expiring date.","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"breezetall"},"content":"     * If there are no deadline tasks, the method will return none.","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"breezetall"},"content":"    public String reminder() {","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"breezetall"},"content":"        ArrayList\u003cDeadline\u003e task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"breezetall"},"content":"        for (Task t : list) {","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"breezetall"},"content":"            if (t.getType().equals(\"D\") \u0026\u0026 t.getCheck().equals(\" \")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"breezetall"},"content":"                task.add((Deadline) t);","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"breezetall"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"breezetall"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"breezetall"},"content":"            return ui.showReminder(\"none\");","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"breezetall"},"content":"        task.sort(new Comparator\u003cDeadline\u003e() {","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"breezetall"},"content":"            @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":139,"author":{"gitId":"breezetall"},"content":"            public int compare(Deadline o1, Deadline o2) {","lastModifiedDate":"2024-02-17"},{"lineNumber":140,"author":{"gitId":"breezetall"},"content":"                return o1.getLocalDate().compareTo(o2.getLocalDate());","lastModifiedDate":"2024-02-17"},{"lineNumber":141,"author":{"gitId":"breezetall"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":142,"author":{"gitId":"breezetall"},"content":"        });","lastModifiedDate":"2024-02-17"},{"lineNumber":143,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":144,"author":{"gitId":"breezetall"},"content":"        return ui.showReminder(task.get(0).getDesc(), task.get(0).getDate());","lastModifiedDate":"2024-02-17"},{"lineNumber":145,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":146,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":147,"author":{"gitId":"breezetall"},"content":"    public ArrayList\u003cTask\u003e get() {","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"breezetall"},"content":"        return list;","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"breezetall":150}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":" * UI class handles interactions with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"public class UI {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"    public UI() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"     * Returns the initial message.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"    public String startMsg(String reminder) {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"        sb.append(\"Greetings friend! I am Datuk\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"                + \"How can I serve you today? ^_^\u0027 \\n\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"        sb.append(reminder);","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"     * Returns parting message.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"     * @return","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"    public String byeMsg() {","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"        return \"Farewell!\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"                + \"Please use the x on the top right corner to exit!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"     * Returns error message.","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"     * @param de","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"     * @return","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"    public String showError(DukeException de) {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"        return de.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"     * Returns an ordered list of Tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"     * @param taskList an ArrayList of all the Tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"breezetall"},"content":"    public String printList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"breezetall"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"breezetall"},"content":"        sb.append(\"These are all your tasks:\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"breezetall"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"breezetall"},"content":"            sb.append(\"\\tOh noes! The list is empty! :(\");","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"breezetall"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"breezetall"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"breezetall"},"content":"            sb.append(\"\\t\" + (i + 1) + \". \" + taskList.get(i) + \"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"breezetall"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"breezetall"},"content":"     * Returns an ordered list of Tasks found.","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"breezetall"},"content":"     * @param taskList an ArrayList of Tasks found.","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"breezetall"},"content":"     * @return an ordered list.","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"breezetall"},"content":"    public String printFindList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"breezetall"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"breezetall"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"breezetall"},"content":"            sb.append(\"\\tOh noes! The list is empty! :(\");","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"breezetall"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"breezetall"},"content":"        sb.append(\"These are all the tasks related:\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"breezetall"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"breezetall"},"content":"            sb.append(\"\\t\" + (i + 1) + \". \" + taskList.get(i) + \"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"breezetall"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"breezetall"},"content":"     * Returns a message of the task added and the number of remaining tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"breezetall"},"content":"     * @param t The object of the Task added to the list","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"breezetall"},"content":"     * @param size The new size of the list.","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"breezetall"},"content":"    public String showAddMsg(Task t, int size) {","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"breezetall"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"breezetall"},"content":"        sb.append(\"Understood. Added the following:\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"breezetall"},"content":"        sb.append(\"\\t \" + t + \"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"breezetall"},"content":"        sb.append(\"You have \" + size + \" remaining tasks.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"breezetall"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"breezetall"},"content":"     * Returns a message of the task deleted and the number of remaining tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"breezetall"},"content":"     * @param t The object of the Task removed from the list","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"breezetall"},"content":"     * @param size The new size of the list.","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"breezetall"},"content":"    public String showDeleteMsg(Task t, int size) {","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"breezetall"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"breezetall"},"content":"        sb.append(\"Removed the following: \\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"breezetall"},"content":"        sb.append(\"\\t\" + t + \"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"breezetall"},"content":"        sb.append((size-1) + \" tasks remaining.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"breezetall"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"breezetall"},"content":"     * Returns a String of the Task that has been completed.","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"breezetall"},"content":"     * @param desc the description of the Task.","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"breezetall"},"content":"    public String showMark(String desc) {","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"breezetall"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"breezetall"},"content":"        sb.append(\"I have set this task \u003c \" + desc + \" \u003e as completed.\" );","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"breezetall"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"breezetall"},"content":"     * Returns a String of the Task that has not been completed.","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"breezetall"},"content":"     * @param desc the description of the Task.","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"breezetall"},"content":"    public String showUnmark(String desc) {","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"breezetall"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"breezetall"},"content":"        sb.append(\"I have set this task \u003c \" + desc + \" \u003e as incomplete.\" );","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"breezetall"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":143,"author":{"gitId":"breezetall"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":144,"author":{"gitId":"breezetall"},"content":"     * Returns a String of the Task that is going to expire the earliest.","lastModifiedDate":"2024-02-17"},{"lineNumber":145,"author":{"gitId":"breezetall"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":146,"author":{"gitId":"breezetall"},"content":"     * @param desc the description of the Task.","lastModifiedDate":"2024-02-17"},{"lineNumber":147,"author":{"gitId":"breezetall"},"content":"     * @param date that the task is due","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"breezetall"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":149,"author":{"gitId":"breezetall"},"content":"    public String showReminder(String desc, String... date) {","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"breezetall"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-17"},{"lineNumber":151,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":152,"author":{"gitId":"breezetall"},"content":"        assert date.length \u003d\u003d 1 : \"There should only be one date\";","lastModifiedDate":"2024-02-17"},{"lineNumber":153,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":154,"author":{"gitId":"breezetall"},"content":"        if (desc.equals(\"none\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":155,"author":{"gitId":"breezetall"},"content":"            sb.append(\"There are no tasks due soon\");","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"breezetall"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":157,"author":{"gitId":"breezetall"},"content":"            sb.append(\"REMINDER: Task \" + desc + \" expiring on \" + date[0]);","lastModifiedDate":"2024-02-17"},{"lineNumber":158,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":159,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":160,"author":{"gitId":"breezetall"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-17"},{"lineNumber":161,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":162,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"breezetall":162}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":" * Implementation of Task. Each Deadline comes with a description and a deadline.","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"public class Deadline implements Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"    protected String desc;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"    protected LocalDate date;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"    protected boolean isMarked;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"    protected String type;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"    public Deadline(String desc, LocalDate date){","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"        isMarked \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"        type \u003d \"D\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"    public String getDesc() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"        return desc;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"    public String getDate() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"        return \"by: \" + date.format(pattern);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"        return date;","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"    public String getCheck() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"        return isMarked ? \"X\" : \" \";","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"    public void setCheck(boolean x) {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"        isMarked \u003d x;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"    public String getType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"        return type;","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"        String temp \u003d isMarked ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"        return type + \" | \" + temp + \" | \" + getDesc() + \" | \" + date.toString() + \"\\n\";","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"breezetall"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"breezetall"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"breezetall"},"content":"        return (\"[\" + type + \"][\" + getCheck() + \"] \" + desc + \" (\" + getDate() + \")\");","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"breezetall":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":" * Implementation of Task. Each Event comes with a description, start and end date.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"public class Event implements Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"    protected String desc;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"    protected String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"    protected boolean isMarked;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"    protected String type;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"    public Event(String desc, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"        isMarked \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"        type \u003d \"E\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"    public String getDesc() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"        return desc;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"    public String getStart() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"        return \"from: \" + start;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"    public String getEnd() {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"        return \" to: \" + end;","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"    public String getCheck() {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"        return isMarked ? \"X\" : \" \";","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"    public void setCheck(boolean x) {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"        isMarked \u003d x;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"    public String getType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"        return type;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"        String temp \u003d isMarked ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"        return type + \" | \" + temp + \" | \" + getDesc() + \" | \" + start + \"-\" + end + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"        return (\"[\" + type + \"][\" + getCheck() + \"] \" + desc + \" (\"+ getStart() + getEnd() +\")\");","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"breezetall":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":" * An interface to get descriptions and status of task, and set task.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":" * Used in Todo, Event and Deadline.","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"public interface Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"    String getDesc();","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"    String getCheck();","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"    void setCheck(boolean x);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"    String toSave();","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"    String getType();","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"breezetall":19}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":" * Implementation of Task. Each Todo comes with a description.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"public class Todo implements Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"    protected String desc;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"    protected boolean isMarked;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"    protected String type;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"    public Todo(String params){","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"        this.desc \u003d params;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"        isMarked \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"        type \u003d \"T\";","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"    public String getDesc() {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"        return desc;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"    public String getCheck() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"        return isMarked ? \"X\" : \" \";","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"    public void setCheck(boolean x) {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"        isMarked \u003d x;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"    public String getType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"        return type;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"        String temp \u003d isMarked ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"        return type + \" | \" + temp + \" | \" + getDesc() + \"\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"        return (\"[\" + type + \"][\" + getCheck() + \"] \" + desc);","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"breezetall":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"breezetall":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"breezetall":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"breezetall"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"breezetall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"breezetall"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"breezetall"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"breezetall"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"breezetall"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"breezetall"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"breezetall"},"content":"public class DukeTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"breezetall"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"breezetall"},"content":"    public void parserMarkTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"breezetall"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"breezetall"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"breezetall"},"content":"            parser.parseMark(\"mark 2 3\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"breezetall"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"breezetall"},"content":"            assertEquals(\"Incorrect number of params for mark/unmark\", de.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"breezetall"},"content":"            parser.parseMark(\"mark\");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"breezetall"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"breezetall"},"content":"            assertEquals(\"Incorrect number of params for mark/unmark\", de.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"breezetall"},"content":"            String[] test \u003d parser.parseMark(\"mark 2\");","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"breezetall"},"content":"            assertEquals(test[0], \"mark\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"breezetall"},"content":"            assertEquals(test[1], \"2\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"breezetall"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"breezetall"},"content":"            ui.showError(de);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"breezetall"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"breezetall"},"content":"    public void deleteTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"breezetall"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"breezetall"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"breezetall"},"content":"        testList.add(new Todo(\"test\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"breezetall"},"content":"        testList.add(new Deadline(\"test\", LocalDate.parse(\"2020-10-10\")));","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"breezetall"},"content":"        TaskList tasks \u003d new TaskList(testList);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"breezetall"},"content":"        String[] test1 \u003d {\"delete\", \"3\"};","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"breezetall"},"content":"        String[] test2 \u003d {\"delete\", \"2\"};","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"breezetall"},"content":"            tasks.deleteItem(test1);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"breezetall"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"breezetall"},"content":"            assertEquals(\"Index does not exist!\", de.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"breezetall"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"breezetall"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"breezetall"},"content":"            tasks.deleteItem(test2);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"breezetall"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"breezetall"},"content":"            assertEquals(1, tasks.get().size());","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"breezetall"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"breezetall"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"breezetall"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"breezetall":66}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"breezetall"},"content":"todo this","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"breezetall":1}}]
