[{"path":"data/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"D | 0 | return book | Oct 15 2019","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"D | 0 | return book | 2 of December 2019, 6PM","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"E | 0 | testEvent return book | Oct 15 2019 | 2 of December 2019, 6PM","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NeoHW":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import java.util.Optional;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    protected String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDate\u003e byDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDateTime\u003e byDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"        this.byDate \u003d parseDate(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"        this.byDateTime \u003d parseDateTime(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"        // init by string depending on type, else use given by string","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"        if (byDateTime.isPresent() || byDate.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"            this.by \u003d formatByString(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    public Deadline(String completed, String description, String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"        super(description, completed.equals(\"1\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    private Optional\u003cLocalDateTime\u003e parseDateTime(String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"            return Optional.of(LocalDateTime.parse(by, formatter));","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"            return Optional.empty();","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    private Optional\u003cLocalDate\u003e parseDate(String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"            return Optional.of(LocalDate.parse(by, formatter));","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"            return Optional.empty();","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    private String formatByString(String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        if (byDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"            return byDateTime.get().format(DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMMM yyyy, ha\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        } else if (byDate.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"            return byDate.get().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        return by;","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    public String textFormattedOutput() {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        int intIsDone \u003d isDone ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        return String.format(\"D | %d | %s | %s\", intIsDone, description, by);","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"NeoHW":67}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import java.util.List;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"    // class variables","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    private static final String solidLineBreak \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"    private static final String CHATBOT_NAME \u003d \"ByteBuddy\";","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    private static final String START_MESSAGE \u003d \"Hello! I\u0027m \" + CHATBOT_NAME + \"\\n\" + \"\\t What can I do for you?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    private static final String BYE_MESSAGE \u003d \"Sad to see you leave :(\";","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    private static final String EVENT_FORMAT \u003d \"event [task] /from [date] /to [date]\";","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    private static final String DEADLINE_FORMAT \u003d \"deadline [task] /by [date]\";","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    private static final String EMPTY_DESCRIPTION_ERROR_MESSAGE \u003d \"The description cannot be empty??\";","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    private static final String NUMBER_FORMAT_ERROR_MESSAGE \u003d \"Invalid task number format! Please enter a valid number.\";","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    private static final String NO_SUCH_TASK_NUMBER_ERROR_MESSAGE \u003d \"We do not have this task number!!\";","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    private static final String FAILED_WRITE_TO_FILE_ERROR_MESSAGE \u003d \"Failed to write to file\";","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    private static final String RELATIVE_DATA_DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    private static final String RELATIVE_OUTPUT_TXT_FILE_PATH \u003d \"./data/output.txt\";","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"        // initialisation of data dir and output file","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        init();","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        taskList \u003d initTaskList(RELATIVE_OUTPUT_TXT_FILE_PATH);","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        // start","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        printStartMessage();","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        // Run main functionality of ByteBuddy","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"        runByteBuddy(taskList);","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        // bye","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"        printByeMessage();","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    public static void runByteBuddy(ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        // repeating user commands","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"        label:","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        while (true) {","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"            String command \u003d sc.next().toLowerCase();","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"            String info \u003d sc.nextLine().trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"                switch (command) {","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"                    break label;","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"                case \"list\":","lastModifiedDate":"2024-01-21"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"                    printTaskList(taskList);","lastModifiedDate":"2024-01-21"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-21"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"                    mark(info);","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"                    unmark(info);","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"                    delete(info);","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"                    todo(info);","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"                    deadline(info);","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"                case \"event\":","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"                    event(info);","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"                default:","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"                    throw new DukeException(\"Sorry but this command does not exist~\");","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"                printWithSolidLineBreak(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        // closing","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        sc.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"    public static void createOutputDirectoryAndFile(File dataDir, File outputTxt) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"            if (!dataDir.isDirectory()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"                dataDir.mkdirs();","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"            if (!outputTxt.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"                outputTxt.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"    public static ArrayList\u003cTask\u003e initTaskList(String filePath) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"            File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"                String[] parts \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"                case \"T\":","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"                    list.add(new Todo(parts[1], parts[2]));","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"                case \"D\":","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"                    list.add(new Deadline(parts[1], parts[2], parts[3]));","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"                case \"E\":","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"NeoHW"},"content":"                    list.add(new Event(parts[1], parts[2], parts[3], parts[4]));","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"                default:","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"            s.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"            return list;","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"    public static void init() throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"        File dataDir \u003d new File(RELATIVE_DATA_DIRECTORY_PATH);","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"        File outputTxt \u003d new File(RELATIVE_OUTPUT_TXT_FILE_PATH);","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"        createOutputDirectoryAndFile(dataDir, outputTxt);","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"    public static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"        fw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"    public static List\u003cString\u003e splitStringWithTrim(String info, String separator, int maxTokens) {","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"        return Arrays.stream(info.split(separator, maxTokens)).map(String::trim).collect(Collectors.toList());","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"    public static void mark(String info) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"            int markIndex \u003d Integer.parseInt(info.trim()) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"            if (markIndex \u003c 0 || markIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"                throw new DukeException(NO_SUCH_TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"NeoHW"},"content":"            String markToPrint \u003d taskList.get(markIndex).markAsDone();","lastModifiedDate":"2024-01-21"},{"lineNumber":159,"author":{"gitId":"NeoHW"},"content":"            printWithSolidLineBreak(markToPrint);","lastModifiedDate":"2024-01-21"},{"lineNumber":160,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, TaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"NeoHW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":162,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(NUMBER_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":163,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":164,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":166,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":167,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":168,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":169,"author":{"gitId":"NeoHW"},"content":"    public static void unmark(String info) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":171,"author":{"gitId":"NeoHW"},"content":"            int unmarkIndex \u003d Integer.parseInt(info.trim()) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":172,"author":{"gitId":"NeoHW"},"content":"            if (unmarkIndex \u003c 0 || unmarkIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"NeoHW"},"content":"                throw new DukeException(NO_SUCH_TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":175,"author":{"gitId":"NeoHW"},"content":"            String unmarkToPrint \u003d taskList.get(unmarkIndex).unmarkAsDone();","lastModifiedDate":"2024-01-21"},{"lineNumber":176,"author":{"gitId":"NeoHW"},"content":"            printWithSolidLineBreak(unmarkToPrint);","lastModifiedDate":"2024-01-21"},{"lineNumber":177,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, TaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"NeoHW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":179,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(NUMBER_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":181,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":182,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":183,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":184,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":185,"author":{"gitId":"NeoHW"},"content":"    public static void delete(String info) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":186,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":187,"author":{"gitId":"NeoHW"},"content":"            int deleteIndex \u003d Integer.parseInt(info.trim()) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":188,"author":{"gitId":"NeoHW"},"content":"            if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":189,"author":{"gitId":"NeoHW"},"content":"                throw new DukeException(NO_SUCH_TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":191,"author":{"gitId":"NeoHW"},"content":"            Task removed \u003d taskList.remove(deleteIndex);","lastModifiedDate":"2024-01-23"},{"lineNumber":192,"author":{"gitId":"NeoHW"},"content":"            printTaskRemovedWithSolidLineBreak(removed);","lastModifiedDate":"2024-01-23"},{"lineNumber":193,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, TaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-27"},{"lineNumber":194,"author":{"gitId":"NeoHW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":195,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(NUMBER_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":196,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":197,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":198,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":199,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":200,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":201,"author":{"gitId":"NeoHW"},"content":"    public static void todo(String info) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":202,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":203,"author":{"gitId":"NeoHW"},"content":"            if (info.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":204,"author":{"gitId":"NeoHW"},"content":"                throw new DukeException(EMPTY_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":205,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":206,"author":{"gitId":"NeoHW"},"content":"            Task todo \u003d new Todo(info);","lastModifiedDate":"2024-01-22"},{"lineNumber":207,"author":{"gitId":"NeoHW"},"content":"            taskList.add(todo);","lastModifiedDate":"2024-01-22"},{"lineNumber":208,"author":{"gitId":"NeoHW"},"content":"            printTaskAddedWithSolidLineBreak(todo);","lastModifiedDate":"2024-01-22"},{"lineNumber":209,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, TaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-27"},{"lineNumber":210,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":211,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":212,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":213,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":214,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":215,"author":{"gitId":"NeoHW"},"content":"    public static void deadline(String info) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":216,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":217,"author":{"gitId":"NeoHW"},"content":"            if (info.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":218,"author":{"gitId":"NeoHW"},"content":"                throw new DukeException(EMPTY_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":219,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"NeoHW"},"content":"            List\u003cString\u003e deadlineInfo \u003d splitStringWithTrim(info, \"/by\", 2);","lastModifiedDate":"2024-01-27"},{"lineNumber":221,"author":{"gitId":"NeoHW"},"content":"            Task deadline \u003d new Deadline(deadlineInfo.get(0), deadlineInfo.get(1));","lastModifiedDate":"2024-01-27"},{"lineNumber":222,"author":{"gitId":"NeoHW"},"content":"            taskList.add(deadline);","lastModifiedDate":"2024-01-22"},{"lineNumber":223,"author":{"gitId":"NeoHW"},"content":"            printTaskAddedWithSolidLineBreak(deadline);","lastModifiedDate":"2024-01-22"},{"lineNumber":224,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, TaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-27"},{"lineNumber":225,"author":{"gitId":"NeoHW"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":226,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(\"The correct usage is: \" + DEADLINE_FORMAT);","lastModifiedDate":"2024-01-26"},{"lineNumber":227,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":228,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":229,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":230,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":231,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":232,"author":{"gitId":"NeoHW"},"content":"    public static void event(String info) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":233,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":234,"author":{"gitId":"NeoHW"},"content":"            if (info.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":235,"author":{"gitId":"NeoHW"},"content":"                throw new DukeException(EMPTY_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":236,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":237,"author":{"gitId":"NeoHW"},"content":"            List\u003cString\u003e eventInfo \u003d splitStringWithTrim(info, \"/from|/to\", 3);","lastModifiedDate":"2024-01-27"},{"lineNumber":238,"author":{"gitId":"NeoHW"},"content":"            Task event \u003d new Event(eventInfo.get(0), eventInfo.get(1), eventInfo.get(2));","lastModifiedDate":"2024-01-27"},{"lineNumber":239,"author":{"gitId":"NeoHW"},"content":"            taskList.add(event);","lastModifiedDate":"2024-01-22"},{"lineNumber":240,"author":{"gitId":"NeoHW"},"content":"            printTaskAddedWithSolidLineBreak(event);","lastModifiedDate":"2024-01-22"},{"lineNumber":241,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, TaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-27"},{"lineNumber":242,"author":{"gitId":"NeoHW"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":243,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(\"The correct usage is: \" + EVENT_FORMAT);","lastModifiedDate":"2024-01-26"},{"lineNumber":244,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":245,"author":{"gitId":"NeoHW"},"content":"            throw new DukeException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":246,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":247,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":248,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":249,"author":{"gitId":"NeoHW"},"content":"    public static void printWithSolidLineBreak(String s) {","lastModifiedDate":"2024-01-21"},{"lineNumber":250,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + solidLineBreak);","lastModifiedDate":"2024-01-21"},{"lineNumber":251,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t \" + s);","lastModifiedDate":"2024-01-21"},{"lineNumber":252,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + solidLineBreak);","lastModifiedDate":"2024-01-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":254,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":255,"author":{"gitId":"NeoHW"},"content":"    public static void printStartMessage() {","lastModifiedDate":"2024-01-25"},{"lineNumber":256,"author":{"gitId":"NeoHW"},"content":"        printWithSolidLineBreak(START_MESSAGE);","lastModifiedDate":"2024-01-25"},{"lineNumber":257,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":258,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":259,"author":{"gitId":"NeoHW"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2024-01-25"},{"lineNumber":260,"author":{"gitId":"NeoHW"},"content":"        printWithSolidLineBreak(BYE_MESSAGE);","lastModifiedDate":"2024-01-25"},{"lineNumber":261,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":262,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":263,"author":{"gitId":"NeoHW"},"content":"    public static void printTaskAddedWithSolidLineBreak(Task task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":264,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + solidLineBreak);","lastModifiedDate":"2024-01-22"},{"lineNumber":265,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t Got it. I\u0027ve Added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":266,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\\t \" + task);","lastModifiedDate":"2024-01-22"},{"lineNumber":267,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":268,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + solidLineBreak);","lastModifiedDate":"2024-01-22"},{"lineNumber":269,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":270,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":271,"author":{"gitId":"NeoHW"},"content":"    public static void printTaskRemovedWithSolidLineBreak(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":272,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + solidLineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":273,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":274,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\\t \" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":275,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":276,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + solidLineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":277,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":278,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":279,"author":{"gitId":"NeoHW"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-21"},{"lineNumber":280,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + solidLineBreak);","lastModifiedDate":"2024-01-21"},{"lineNumber":281,"author":{"gitId":"NeoHW"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-21"},{"lineNumber":282,"author":{"gitId":"NeoHW"},"content":"            System.out.println(\"\\t \" + (i+1) + \".\" + taskList.get(i));","lastModifiedDate":"2024-01-21"},{"lineNumber":283,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":284,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + solidLineBreak);","lastModifiedDate":"2024-01-21"},{"lineNumber":285,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":286,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":287,"author":{"gitId":"NeoHW"},"content":"    public static String TaskListFormattedStringOutput (ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":288,"author":{"gitId":"NeoHW"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":289,"author":{"gitId":"NeoHW"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":290,"author":{"gitId":"NeoHW"},"content":"            s.append(task.textFormattedOutput()).append(\"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":291,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":292,"author":{"gitId":"NeoHW"},"content":"        return s.toString();","lastModifiedDate":"2024-01-27"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"NeoHW":290,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"        super(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"        return String.format(\"holup!! %s\", super.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"NeoHW":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import java.util.Optional;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    protected String from;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    protected String to;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDate\u003e fromDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDateTime\u003e fromDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDate\u003e toDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDateTime\u003e toDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"        this.fromDate \u003d parseDate(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"        this.fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"        // init from string depending on type, else use given by string","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"        if (fromDate.isPresent() || fromDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"            this.from \u003d formatFromString(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"        this.toDate \u003d parseDate(to);","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"        this.toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        // init from string depending on type, else use given by string","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"        if (toDate.isPresent() || toDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"            this.to \u003d formatToString(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    public Event(String completed, String description, String from, String to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        super(description, completed.equals(\"1\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    private Optional\u003cLocalDateTime\u003e parseDateTime(String s) {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"            return Optional.of(LocalDateTime.parse(s, formatter));","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"            return Optional.empty();","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    private Optional\u003cLocalDate\u003e parseDate(String s) {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"            return Optional.of(LocalDate.parse(s, formatter));","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"            return Optional.empty();","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    private String formatFromString(String standard) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        if (fromDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"            return fromDateTime.get().format(DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMMM yyyy, ha\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        } else if (fromDate.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"            return fromDate.get().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"        return standard;","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"    private String formatToString(String standard) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"        if (toDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"            return toDateTime.get().format(DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMMM yyyy, ha\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"        } else if (toDate.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"            return toDate.get().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        return standard;","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"    public String textFormattedOutput() {","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"        int intIsDone \u003d isDone ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        return String.format(\"E | %d | %s | %s | %s\", intIsDone, description, from, to);","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"NeoHW":88}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"    protected String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    public String markAsDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"        return \"Nice! I\u0027ve mark this task as done:\\n\\t\\t\" + this;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    public String unmarkAsDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\\t\\t\" + this;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"        return (isDone ? \"✓\" : \"✕\"); // mark done task with ✓","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    public String textFormattedOutput() {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        return \"\";","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"NeoHW":36}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"    public Todo(String completed, String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"        super(description, completed.equals(\"1\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    public String textFormattedOutput() {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"        int intIsDone \u003d isDone ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"        return String.format(\"T | %d | %s\", intIsDone, description);","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"NeoHW":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"mark 3","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"NeoHW":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"# ./runtest.sh to run this script in text-ui-test directory","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NeoHW":3,"-":33}}]
