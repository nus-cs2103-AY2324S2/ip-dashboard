[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    mainClass.set(\"RyanGosling\")","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    archiveBaseName \u003d \"RyanGosling\"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"-":42,"UdhayaShan1":19}},{"path":"data/task_lists.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | lol | NA | NA","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"T | 1 | ryan | NA | NA","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"D | 0 | lwefdewded | 2019-10-15 | NA","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"E | 1 | lol | 2019-10-15 | 2019-10-15","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"E | 1 | lolwdad | 2019-10-15 | 2019-10-15","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"E | 0 | lol | 2018-07-13 | 2026-05-23","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | ok | NA | NA","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"E | 0 | wdwadwadad | 2001-03-03 | 2004-03-03","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"T | 1 | ok | NA | NA","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"T | 1 | owdmakdad | NA | NA","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | lol | NA | NA","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | lol | NA | NA","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | book | NA | NA","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | mewing | NA | NA","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | jdnajkda | NA | NA","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | ook | NA | NA","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | okdad | NA | NA","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"UdhayaShan1":17}},{"path":"src/main/java/RyanGosling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.MessagePrinter;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"public class RyanGosling {","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"    public static String chatBotName \u003d \"RyanGosling\";","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    public static void main(String[] args) throws RyanGoslingException, FileNotFoundException {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.greeting(chatBotName);","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"        //We begin listening","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"        Ui botDispatcher \u003d new Ui();","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"        botDispatcher.chatListener();","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":16}},{"path":"src/main/java/commands/CommandsEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package commands;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"public enum CommandsEnum {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"    bye, list, mark, unmark, todo, deadline, event, delete, find","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"UdhayaShan1":5}},{"path":"src/main/java/commands/CommandsParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package commands;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Events;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Todo;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.MessagePrinter;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"public class CommandsParser {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    //Handles adding/removing to array of tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    private String filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    //Handles the loading and saving of tasks to text file","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    private Storage taskLoader;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    public CommandsParser(TaskList taskList, String filePath, Storage taskLoader) {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskLoader \u003d taskLoader;","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses user commands and performs corresponding actions based on the command type.","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     * @param task The user input command to be parsed.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"     * @return Returns 0 if the command was parsed successfully, 1 if the command is \u0027bye\u0027.","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException If there is an error in parsing or executing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"    public int parseCommands(String task) throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"        String[] commandSplit \u003d task.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        if (task.equals(String.valueOf(CommandsEnum.bye))) {","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"            MessagePrinter.bye();","lastModifiedDate":"2024-01-20"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"            return 1;","lastModifiedDate":"2024-01-20"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (task.equals(String.valueOf(CommandsEnum.list))) {","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"            taskList.printList();","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.mark))","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                || commandSplit[0].equals(String.valueOf(CommandsEnum.unmark))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"            //All items to be 0-index referenced other than user input.","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"                taskList.changeStatusOfItem(commandSplit[0], Integer.parseInt(commandSplit[1])-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"                taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Wrong format! (un)mark \u003cnumber\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.todo))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"            //Idea from chatGPT","lastModifiedDate":"2024-01-20"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"todo (.*?)\");","lastModifiedDate":"2024-01-20"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-20"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"                taskList.add(new Todo(matcher.group(1)));","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"                taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete todo command, todo \u003cevent\u003e\");","lastModifiedDate":"2024-01-20"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.deadline))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"deadline (.*?) /by (.*?)\");","lastModifiedDate":"2024-01-20"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-20"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"                taskList.add(new Deadline(matcher.group(1), matcher.group(2)));","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"                taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete deadline command, \" + \"deadline \u003cevent\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.event))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"            //System.out.println(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"event (.*?) /from (.*?) /to (.*?)\");","lastModifiedDate":"2024-01-20"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-20"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"                // Retrieve matched groups","lastModifiedDate":"2024-01-20"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"                //System.out.println(matcher.group(3));","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"                taskList.add(new Events(matcher.group(1), matcher.group(2), matcher.group(3)));","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"                taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete event command, \"","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"event \u003cevent\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.delete))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"            taskList.removeIndex(Integer.parseInt(commandSplit[1])-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"            taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.find))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"find (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"                taskList.findTasks(matcher.group(1));","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete find command! find \u003ctask_word\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"I was created in a few hours so \" +","lastModifiedDate":"2024-01-21"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"                    \"I don\u0027t know what that means :(\");","lastModifiedDate":"2024-01-21"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"        return 0;","lastModifiedDate":"2024-01-20"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":103}},{"path":"src/main/java/commands/CommandsParserStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package commands;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.MessagePrinter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"public class CommandsParserStub {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    public int parseCommandsOriginal(String task) throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"        String[] taskSplit \u003d task.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"        if (task.equals(String.valueOf(CommandsEnum.bye))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"            MessagePrinter.bye();","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"            return 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (task.equals(String.valueOf(CommandsEnum.list))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.printList();","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.mark))","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"                || taskSplit[0].equals(String.valueOf(CommandsEnum.unmark))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"            //All items to be 0-index referenced other than user input.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.changeStatusOfItem(taskSplit[0], Integer.parseInt(taskSplit[1])-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.todo))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"            //Idea from chatGPT","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"todo (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.add(new Todo(matcher.group(1)));","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"                System.out.println(\"task\");","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete todo command, todo \u003cevent\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.deadline))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"deadline (.*?) /by (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.add(new Deadline(matcher.group(1), matcher.group(2)));","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"                System.out.println(\"task\");","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete deadline command, \"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"deadline \u003cevent\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.event))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"            //System.out.println(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"event (.*?) /from (.*?) /to (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"                // Retrieve matched groups","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"                //System.out.println(matcher.group(3));","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.add(new Events(matcher.group(1), matcher.group(2), matcher.group(3)));","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"                System.out.println(\"task\");","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete event command, \"","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"event \u003cevent\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.delete))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.removeIndex(Integer.parseInt(taskSplit[1])-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"        else {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"I was created in a few hours so \"","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"                    + \"I don\u0027t know what that means :(\");","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"        return 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"    public String parseCommandsReturnString(String task) throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        String[] taskSplit \u003d task.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"        if (task.equals(String.valueOf(CommandsEnum.bye))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"            MessagePrinter.bye();","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"            return \"1\";","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (task.equals(String.valueOf(CommandsEnum.list))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.printList();","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.mark))","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"                || taskSplit[0].equals(String.valueOf(CommandsEnum.unmark))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"            //All items to be 0-index referenced other than user input.","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.changeStatusOfItem(taskSplit[0], Integer.parseInt(taskSplit[1])-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.todo))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"            //Idea from chatGPT","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"todo (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.add(new Todo(matcher.group(1)));","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"                return(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete todo command, todo \u003cevent\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.deadline))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"deadline (.*?) /by (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.add(new Deadline(matcher.group(1), matcher.group(2)));","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"                return(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete deadline command, \"","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"deadline \u003cevent\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.event))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"            //System.out.println(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"event (.*?) /from (.*?) /to (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"                // Retrieve matched groups","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"                //System.out.println(matcher.group(3));","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.add(new Events(matcher.group(1), matcher.group(2), matcher.group(3)));","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"                return(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete event command, \"","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"event \u003cevent\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.delete))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.removeIndex(Integer.parseInt(taskSplit[1])-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"        else {","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"I was created in a few hours so \"","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"                    + \"I don\u0027t know what that means :(\");","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"        return \"0\";","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"UdhayaShan1"},"content":"    public static void main(String[] args) throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(new CommandsParserStub().parseCommandsReturnString(\"todo\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":133}},{"path":"src/main/java/datesandtimes/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package datesandtimes;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"public class DateTimeParser {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@link LocalDate} into a formatted date string.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"     * @param date The LocalDate to be parsed.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A formatted date string in the \"MMM d yyyy\" format.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    public static String parseDate(LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a time string into a formatted time string.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"     * @param timeString The time string to be parsed.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A formatted time string in the \"h:mm a\" format.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws DateTimeParseException If the time string cannot be parsed.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    public static String parseTime(String timeString) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        LocalTime time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"        return time.format(formatter);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(parseDate(LocalDate.parse(\"2045-02-31\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":36}},{"path":"src/main/java/exceptions/RyanGoslingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package exceptions;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"public class RyanGoslingException extends Exception{","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"    public RyanGoslingException(String message) {","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"        super(message);","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":7}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import datesandtimes.DateTimeParser;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"    private LocalDate by;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"D\");","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"        this.by \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"        super.setTime(new String[] {deadline, \"None\"});","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    public Deadline(String taskName, String deadline, int isTaskDone) {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"D\");","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"        this.by \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"        super.changeStatus(isTaskDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"        super.setTime(new String[] {deadline, \"NA\"});","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + super.getTaskName() + \" (by: \" +","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"                DateTimeParser.parseDate(this.by) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":26}},{"path":"src/main/java/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import datesandtimes.*;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"    private LocalDate startTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"    private LocalDate endTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    public Events(String taskName, String start, String end) {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"E\");","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"        this.startTime \u003d LocalDate.parse(start);","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"        this.endTime \u003d LocalDate.parse(end);","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"        super.setTime(new String[] {start, end});","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    public Events(String taskName, String start, String end, int isTaskDone) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"E\");","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"        this.startTime \u003d LocalDate.parse(start);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"        this.endTime \u003d LocalDate.parse(end);","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        super.changeStatus(isTaskDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        super.setTime(new String[] {start, end});","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + super.getTaskName() + \" (from: \" +","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"                DateTimeParser.parseDate(this.startTime) + \" to: \" + DateTimeParser.parseDate(this.endTime) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":29}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.MessagePrinter;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"public class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"    private String taskName;","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"    private boolean taskDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"    private String typeOfTask;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"    private String[] timeFromAndTo \u003d new String[] {\"NA\", \"NA\"};","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    public Task(String taskName, String typeOfTask) {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"     * Gets the name of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The name of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        return this.taskName;","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     * Gets the type of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"    public String getTaskType() { return this.typeOfTask; }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"     * @return {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"        return this.taskDone;","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The status icon (\"X\" if the task is done, \" \" (space) otherwise).","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-20"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"        return (this.taskDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"     * Sets the time for the task based on the given array of times.","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"     * @param times An array of times representing the start and end times of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"    public void setTime(String[] times) {","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"        this.timeFromAndTo[0] \u003d times[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"        this.timeFromAndTo[1] \u003d times[1];","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A formatted string including the task\u0027s status icon and name.","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.taskName;","lastModifiedDate":"2024-01-20"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"     * Changes the status of the task based on the given action.","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"     * @param action The action to be performed (\"mark\" to mark as done, other to mark as not done).","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"    public void changeStatus(String action) {","lastModifiedDate":"2024-01-20"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"        if (action.equals(\"mark\")) {","lastModifiedDate":"2024-01-20"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"            this.taskDone \u003d true;","lastModifiedDate":"2024-01-20"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"            this.taskDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.markActionPrint(action, this);","lastModifiedDate":"2024-01-20"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"     * Changes the status of the task based on the given action code.","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"     * @param action The action code (1 to mark as done, 0 to mark as not done).","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"    public void changeStatus(int action) {","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"        if (action \u003d\u003d 1) {","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"            this.taskDone \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"            this.taskDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"     * Gets the times associated with the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"     * @return An array of times representing the start and end times of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"        return this.timeFromAndTo;","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":110}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    public Todo(String taskName, int isTaskDone) {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"        super.changeStatus(isTaskDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"        super.setTime(new String[] {\"NA\", \"NA\"});","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + super.getTaskName();","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":20}},{"path":"src/main/java/utilities/MessagePrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package utilities;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" * A utility class for printing messages and handling interactions with the user.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"public class MessagePrinter {","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"     * The message to be printed or stored.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    public String message;","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs a MessagePrinter with the given message.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"     * @param message The message to be printed or stored.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    public MessagePrinter(String message) {","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints the stored message to the console.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    public void printStored() {","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(this.message);","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints a personalized reply based on the given message.","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     * @param message The message to be analyzed and replied to.","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"    public static void personalisedReply(String message) {","lastModifiedDate":"2024-01-20"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"        HashMap\u003cString, String\u003e responseMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        responseMap.put(\"byee\", \"You meant bye?\");","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"        responseMap.put(\"byeee\", \"You meant bye?\");","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"        responseMap.put(\"hi\", \"Hi again!\");","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"        if (responseMap.containsKey(message)) {","lastModifiedDate":"2024-01-20"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.println(responseMap.get(message));","lastModifiedDate":"2024-01-20"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.println(message);","lastModifiedDate":"2024-01-20"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints a line separator to the console.","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"    public static void printLine() {","lastModifiedDate":"2024-01-20"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints a greeting message to the console.","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"     * @param chatBotName The name of the chat bot.","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    public static void greeting(String chatBotName) {","lastModifiedDate":"2024-01-20"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(\"Hello! I\u0027m \" + chatBotName + \"\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-20"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints a goodbye message to the console.","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"    public static void bye() {","lastModifiedDate":"2024-01-20"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(\"Goodbye. Hope to see you again!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints a command to the console.","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"     * @param command The command to be printed.","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"    public static void commandPrint(String command) {","lastModifiedDate":"2024-01-20"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(command);","lastModifiedDate":"2024-01-20"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints information about a task and the total number of tasks to the console.","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"     * @param task The task to be printed.","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"     * @param size The total number of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"    public static void commandPrint(Task task, int size) {","lastModifiedDate":"2024-01-20"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-20"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-01-20"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints a list of tasks to the console.","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"     * @param list The list of tasks to be printed.","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"    public static void commandListPrint(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-20"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"        for (int i \u003d 0; i \u003c list.size(); i +\u003d 1) {","lastModifiedDate":"2024-01-20"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.print(i + 1 + \". \");","lastModifiedDate":"2024-01-20"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.println(list.get(i));","lastModifiedDate":"2024-01-20"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints a message indicating the result of a mark action on a task.","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"     * @param action The action performed (\"mark\" or \"unmark\").","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"     * @param task   The task on which the action was performed.","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"    public static void markActionPrint(String action, Task task) {","lastModifiedDate":"2024-01-20"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"        if (action.equals(\"mark\")) {","lastModifiedDate":"2024-01-20"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-20"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-20"},{"lineNumber":130,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":133,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":134,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":135,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints an error message to the console based on the provided exception.","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"UdhayaShan1"},"content":"     * @param e The exception containing the error message.","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"UdhayaShan1"},"content":"    public static void errorPrinter(Exception e) {","lastModifiedDate":"2024-01-20"},{"lineNumber":141,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":142,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-20"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":144,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":145,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":146,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints information about a removed task and the updated total number of tasks to the console.","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"UdhayaShan1"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"UdhayaShan1"},"content":"     * @param size The updated total number of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"UdhayaShan1"},"content":"    public static void removePrinter(Task task, int size) {","lastModifiedDate":"2024-01-20"},{"lineNumber":153,"author":{"gitId":"UdhayaShan1"},"content":"        size -\u003d 1;","lastModifiedDate":"2024-01-20"},{"lineNumber":154,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":155,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-20"},{"lineNumber":156,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":157,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-01-20"},{"lineNumber":158,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":159,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":160,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":161,"author":{"gitId":"UdhayaShan1"},"content":"    public static void printFoundTasks(ArrayList\u003cTask\u003e listOfFoundTasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":162,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":163,"author":{"gitId":"UdhayaShan1"},"content":"        if (listOfFoundTasks.isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":164,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.println(\"No such tasks in the list :(, try again!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.println(\"Found! Here they are!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"UdhayaShan1"},"content":"            for (int i \u003d 0; i \u003c listOfFoundTasks.size(); i +\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"UdhayaShan1"},"content":"                System.out.println(i+1 + \".\" + listOfFoundTasks.get(i));","lastModifiedDate":"2024-01-27"},{"lineNumber":169,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":170,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":172,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":174}},{"path":"src/main/java/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package utilities;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Events;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Todo;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":" * The Storage class is responsible for loading and saving tasks to/from the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"public class Storage {","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    private String filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses and loads tasks from the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"     * @return An ArrayList of Task objects representing the loaded tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws FileNotFoundException If the file specified by filePath is not found.","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException  If the task data on the hard drive is not in the expected format.","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    public ArrayList\u003cTask\u003e parseAndLoadTasks() throws FileNotFoundException, RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        //We first check if file directory exists. We will create the folder for user instead.","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"                Files.createDirectories(file.toPath().getParent());","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                Files.createFile(file.toPath());","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"                System.out.println(\"File created successfully\\n It will appear in data folder.: \" + filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"                System.err.println(\"Failed to create file.\\n Do try again!: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        String pattern \u003d \"^\\\\s*(\\\\w+)\\\\s*\\\\|\\\\s*(\\\\w+)\\\\s*\\\\|\\\\s*(.*?)\\\\s*\\\\|\\\\s*(.*?)\\\\s*\\\\|\\\\s*(.*?)\\\\s*$\";","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"            String currentLine \u003d s.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern regex \u003d Pattern.compile(pattern);","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d regex.matcher(currentLine);","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"tasks.Task lists stored in hard drive is not in expected format!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"                String typeOfTask \u003d matcher.group(1);","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"                int isTaskDone \u003d Integer.parseInt(matcher.group(2));","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"                String taskDescription \u003d matcher.group(3);","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"                String timeFrom \u003d matcher.group(4);","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"                String timeTo \u003d matcher.group(5);","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"                switch (typeOfTask) {","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"                case \"T\":","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"                    listOfTasks.add(new Todo(taskDescription, isTaskDone));","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"                case \"D\":","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"                    listOfTasks.add(new Deadline(taskDescription, timeFrom, isTaskDone));","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"                case \"E\":","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"                    listOfTasks.add(new Events(taskDescription, timeFrom, timeTo, isTaskDone));","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"                }","lastModifiedDate":"2024-01-20"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"        return listOfTasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"     * Writes the provided task list to the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskList The ArrayList of Task objects to be written to the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"    public void writeToTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder toAdd \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i +\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"            Task taskToAdd \u003d taskList.get(i);","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"            toAdd.append(taskToAdd.getTaskType());","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"            int taskDone \u003d taskToAdd.isTaskDone() ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"            String[] possibleTimes \u003d taskToAdd.getTimes();","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"            toAdd.append(\" | \").append(taskDone).append(\" | \").append(taskToAdd.getTaskName())","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"                    .append(\" | \").append(possibleTimes[0]).append(\" | \").append(possibleTimes[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"                toAdd.append(System.lineSeparator());","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"            fw.write(toAdd.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"            fw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.println(\"Error writing! Weird as f\");","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":109}},{"path":"src/main/java/utilities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package utilities;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":" * The TaskList class represents a list of tasks and provides methods for manipulating and interacting with the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"public class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"     * The ArrayList containing the tasks in the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskList The initial list of tasks to be added to the TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskArrayList \u003d taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     * @param newTask The task to be added to the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskArrayList.add(newTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.commandPrint(newTask, this.taskArrayList.size());","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints the entire task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    public void printList() {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.commandListPrint(this.taskArrayList);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"     * Changes the status (done or not done) of a task in the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"     * @param action The action to be performed (mark or unmark).","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"     * @param which  The index of the task in the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"    public void changeStatusOfItem(String action, int which) {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskArrayList.get(which).changeStatus(action);","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"     * Removes a task from the list by its index.","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    public void removeIndex(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.removePrinter(this.taskArrayList.get(index), this.taskArrayList.size());","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskArrayList.remove(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"     * Writes the current task list to the hard drive using the provided Storage object.","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"     * @param storage The Storage object used for writing to the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"    public void writeToFile(Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        storage.writeToTaskList(this.taskArrayList);","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"    public void findTasks(String taskPattern) {","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"        ArrayList\u003cTask\u003e tasksWithPattern \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"        for (int i \u003d 0; i \u003c this.taskArrayList.size(); i +\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"            String currTaskName \u003d taskArrayList.get(i).getTaskName();","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"            if (currTaskName.contains(taskPattern)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"                tasksWithPattern.add(taskArrayList.get(i));","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"        MessagePrinter.printFoundTasks(tasksWithPattern);","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"     * Overrides the toString method to provide information about the number of tasks in the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A string representation of the number of tasks in the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        return \"Now you have \" + taskArrayList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":100}},{"path":"src/main/java/utilities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package utilities;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import commands.CommandsParser;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":" * The Ui class handles the main chat listening and parsing of messages.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"public class Ui {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    //Handles adding/removing to array of tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    private String filePath \u003d \"data/task_lists.txt\";","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    //Handles the loading and saving of tasks to text file","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    private Storage taskLoader \u003d new Storage(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"     * Listens to user input, parses commands, and executes corresponding actions.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    public void chatListener() {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        //First attempt to load the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"            ArrayList\u003cTask\u003e parsedTasks \u003d this.taskLoader.parseAndLoadTasks();","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"            this.taskList \u003d new TaskList(parsedTasks);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (RyanGoslingException | FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"            MessagePrinter.errorPrinter(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"            return;","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        CommandsParser commandsParser \u003d new CommandsParser(this.taskList, this.filePath, this.taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        //Begin parsing commands.","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"        while (true) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"            String task \u003d sc.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"            int status \u003d 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"                status \u003d commandsParser.parseCommands(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"            } catch (Exception e){","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"                MessagePrinter.errorPrinter(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"            } finally {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"                if (status \u003d\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"                    return;","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":51}},{"path":"src/test/java/commands/CommandsParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package commands;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":" * Test class for the CommandsParser class.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"public class CommandsParserTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"     * Test for the \"bye\" command.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException if an error occurs during parsing","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    public void byeTest() throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(1, new CommandsParserStub().parseCommandsOriginal(\"bye\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     * Test for the \"todo\" command.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException if an error occurs during parsing","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    public void todoTest() throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"todo drive\", new CommandsParserStub().parseCommandsReturnString(\"todo drive\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"todo LOL\", new CommandsParserStub().parseCommandsReturnString(\"todo LOL\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"            assertEquals(\"\", new CommandsParserStub().parseCommandsReturnString(\"todo\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"            fail();","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (RyanGoslingException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"            assertEquals(\"Incomplete todo command, todo \u003cevent\u003e\", e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":43}},{"path":"src/test/java/datesandtimes/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package datesandtimes;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":" * Test class for the DateTimeParser class.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     * Test for the parseDate method with correct input.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    public void dateCorrectTest() {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"Aug 21 2019\", DateTimeParser.parseDate(LocalDate.parse(\"2019-08-21\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"Aug 21 2017\", DateTimeParser.parseDate(LocalDate.parse(\"2017-08-21\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"May 23 2045\", DateTimeParser.parseDate(LocalDate.parse(\"2045-05-23\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     * Test for the parseDate method with invalid input.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    public void dateExceptionTest() {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        // Check invalid year","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"20455-01-21\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"        // Check invalid month","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"2045-0-21\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        // Check invalid day","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"2045-05-32\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"        // Check mix of invalids","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"20455-0-32\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        // Check logical date is wrong, no Feb 31st","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"2045-02-31\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"todo borrow book","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"java -classpath ..\\bin RyanGosling \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"UdhayaShan1":1}}]
