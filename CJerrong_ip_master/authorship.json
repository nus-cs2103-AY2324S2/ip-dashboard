[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"    mainClass.set(\"haro.Launcher\")","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"    archiveBaseName \u003d \"haro\"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"    archiveVersion \u003d \"0.2\"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"checkstyle {","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"CJerrong":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"# Haro User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"## Heya it\u0027s Haro!","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"***Haro*** is here to serve you to help you keep track of all your tasks!","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"Be it menial chores, crucial deadlines you have to meet or exciting events","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"that you would not want to miss out on, Haro\u0027s got your back.","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"Simply browse the ***user guide*** below to get started.","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"![Haro GUI](Ui.png)","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"## Greetings!","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"### Greeting message","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"Upon launching the app, you should be greeted by the following message","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"Heya! I\u0027m Haro!","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"What can I do for you today?","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"# Basic features","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"## 1. Adding your tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"### Simple tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"To add a simple task type in the following command: `todo \u003ctask name\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"For instance:","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"todo watch lecture 15","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"Haro should reply with the following output:","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"Got it I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"[T][] watch lecture 15","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"You now have 1 task in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"### Tasks with deadlines","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"To add a task with a deadline type in the following command:","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"`deadline /by \u003cdue date\u003e`, ","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"For example:","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"deadline submit proposal /by today","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"Where Haro should reply with:","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"Got it I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"[D][] submit proposal (by: today)","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"You now have 1 task in the list","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"**Using calendar dates**","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"Type in the due date in `YYYY/MM/DD` form ","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"to use as a calendar date.","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"For instance you could type in:","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"deadline submit proposal /by 2024-02-23","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"Where Haro should reply with:","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"Got it I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"[D][] submit proposal (by: Feb 23 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"You now have 1 task in the list","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"### Events","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"To add an Event, with a start and end timing, simply type in the ","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"following command:","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"`event /from \u003cstart time\u003e /to \u003cend time\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"For example:","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"event tutorial /from 2pm /to 3pm","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"Haro should answer with:","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"Got it I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"[E][] submit proposal (from: 2pm to: 3pm)","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"You now have 1 task in the list","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"Similarly, you can supply start and end timings in the form `YYYY/MM/DD`","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"## 2. Viewing task list","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"To view all the tasks in your list simply type in:","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"list","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"If your list is *empty* Haro will reply with:","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"The tasklist is currently empty! Add tasks!","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"Otherwise Haro will display your task list:","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"1. [T][] watch lecture 15","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"2. [D][] submit proposal (by: today)","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"3. [E][] tutorial (from: 2pm to: 3pm)","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"## 3. Marking and Unmarking tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"### Marking tasks:","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"To mark a task simply type: `mark \u003cTask index number\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"For example:","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"mark 1","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"Haro should reply with:","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"Nice! I\u0027ve marked this task as done","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"[T][X] watch lecture 15","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"Where the `[X]` signifies that the task has been marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"### Unmarking tasks:","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"Similarly, to Unmark a task, type: `unmark \u003cTask index number\u003e`","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"For example:","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"CJerrong"},"content":"unmark 1","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"CJerrong"},"content":"Haro should reply with:","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"Alright I\u0027ve marked this task as not done yet","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"[T][] watch lecture 15","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"CJerrong"},"content":"and your unmarking should be reflected when you call the `list` command.","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"CJerrong"},"content":"## 4. Delete tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"CJerrong"},"content":"To delete a task from your list enter the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"CJerrong"},"content":"`delete \u003cTask index number\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"CJerrong"},"content":"For example:","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"delete 2","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"CJerrong"},"content":"Haro should reply with something like:","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"CJerrong"},"content":"Noted I\u0027ve removed this task","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"CJerrong"},"content":"[D][] submit proposal (by: today)","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"CJerrong"},"content":"You now have 2 tasks in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"and your deletion should be reflected when you call the `list` command.","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"# Advanced features","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"## 1. Finding a task","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"CJerrong"},"content":"To find a task in your task list, type in: `find \u003csearch word\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"For example: ","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"CJerrong"},"content":"find proposal ","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"CJerrong"},"content":"Haro should reply with:","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"CJerrong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"CJerrong"},"content":"1. [D][] submit proposal (by: today)","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":159,"author":{"gitId":"CJerrong"},"content":"If you receive the following reply:","lastModifiedDate":"2024-02-22"},{"lineNumber":160,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":161,"author":{"gitId":"CJerrong"},"content":"Sorry there are no current matches in your list! :(","lastModifiedDate":"2024-02-22"},{"lineNumber":162,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":163,"author":{"gitId":"CJerrong"},"content":"It means that there are no matching tasks in your list.","lastModifiedDate":"2024-02-22"},{"lineNumber":164,"author":{"gitId":"CJerrong"},"content":"## 2. Editing a task","lastModifiedDate":"2024-02-22"},{"lineNumber":165,"author":{"gitId":"CJerrong"},"content":"\u003e Please take note that you can ***only edit 1 attribute per command***.","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"CJerrong"},"content":"### Editing task name","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"CJerrong"},"content":"To edit the task name simply input:","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"CJerrong"},"content":"`edit \u003cTask index number\u003e /task \u003cnew task name\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":170,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":171,"author":{"gitId":"CJerrong"},"content":"For instance:","lastModifiedDate":"2024-02-22"},{"lineNumber":172,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":173,"author":{"gitId":"CJerrong"},"content":"edit 1 /task watch lecture 14","lastModifiedDate":"2024-02-22"},{"lineNumber":174,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":175,"author":{"gitId":"CJerrong"},"content":"Haro should reply with:","lastModifiedDate":"2024-02-22"},{"lineNumber":176,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"CJerrong"},"content":"Got it I\u0027ve edited this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":178,"author":{"gitId":"CJerrong"},"content":"1. [T][] watch lecture 14","lastModifiedDate":"2024-02-22"},{"lineNumber":179,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":180,"author":{"gitId":"CJerrong"},"content":"and your changes should be reflected when you call the `list` command.","lastModifiedDate":"2024-02-22"},{"lineNumber":181,"author":{"gitId":"CJerrong"},"content":"### Editing due date","lastModifiedDate":"2024-02-22"},{"lineNumber":182,"author":{"gitId":"CJerrong"},"content":"To edit the due date of a deadline task, simply type in:","lastModifiedDate":"2024-02-22"},{"lineNumber":183,"author":{"gitId":"CJerrong"},"content":"`edit \u003cTask index number\u003e /by \u003cnew due date\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":184,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":185,"author":{"gitId":"CJerrong"},"content":"For example:","lastModifiedDate":"2024-02-22"},{"lineNumber":186,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":187,"author":{"gitId":"CJerrong"},"content":"edit 2 /by tomorrow","lastModifiedDate":"2024-02-22"},{"lineNumber":188,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":189,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":190,"author":{"gitId":"CJerrong"},"content":"Haro should reply with:","lastModifiedDate":"2024-02-22"},{"lineNumber":191,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":192,"author":{"gitId":"CJerrong"},"content":"Got it I\u0027ve edited this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":193,"author":{"gitId":"CJerrong"},"content":"2. [D][] submit proposal (by: tomorrow)","lastModifiedDate":"2024-02-22"},{"lineNumber":194,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":195,"author":{"gitId":"CJerrong"},"content":"### Editing start and end date","lastModifiedDate":"2024-02-22"},{"lineNumber":196,"author":{"gitId":"CJerrong"},"content":"**Editing Start date**","lastModifiedDate":"2024-02-22"},{"lineNumber":197,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":198,"author":{"gitId":"CJerrong"},"content":"To edit the **start** date of an event task, type in:","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"CJerrong"},"content":"`edit \u003cTask index number\u003e /from \u003cnew start date\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":200,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":201,"author":{"gitId":"CJerrong"},"content":"For example:","lastModifiedDate":"2024-02-22"},{"lineNumber":202,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":203,"author":{"gitId":"CJerrong"},"content":"edit 3 /from 1pm","lastModifiedDate":"2024-02-22"},{"lineNumber":204,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":205,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":206,"author":{"gitId":"CJerrong"},"content":"Haro should reply with something like:","lastModifiedDate":"2024-02-22"},{"lineNumber":207,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":208,"author":{"gitId":"CJerrong"},"content":"Got it I\u0027ve edited this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":209,"author":{"gitId":"CJerrong"},"content":"3. [E][] tutorial (from: 1pm to: 3pm)","lastModifiedDate":"2024-02-22"},{"lineNumber":210,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":211,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":212,"author":{"gitId":"CJerrong"},"content":"**Editing end date**","lastModifiedDate":"2024-02-23"},{"lineNumber":213,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":214,"author":{"gitId":"CJerrong"},"content":"To edit the **end** date of an event task, type in:","lastModifiedDate":"2024-02-23"},{"lineNumber":215,"author":{"gitId":"CJerrong"},"content":"`edit \u003cTask index number\u003e /to \u003cnew end date\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":216,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":217,"author":{"gitId":"CJerrong"},"content":"For example:","lastModifiedDate":"2024-02-22"},{"lineNumber":218,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":219,"author":{"gitId":"CJerrong"},"content":"edit 3 /to 2pm","lastModifiedDate":"2024-02-22"},{"lineNumber":220,"author":{"gitId":"CJerrong"},"content":"````","lastModifiedDate":"2024-02-22"},{"lineNumber":221,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":222,"author":{"gitId":"CJerrong"},"content":"Haro should reply with something like:","lastModifiedDate":"2024-02-22"},{"lineNumber":223,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":224,"author":{"gitId":"CJerrong"},"content":"Got it I\u0027ve edited this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":225,"author":{"gitId":"CJerrong"},"content":"3. [E][] tutorial (from: 1pm to: 2pm)","lastModifiedDate":"2024-02-22"},{"lineNumber":226,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":227,"author":{"gitId":"CJerrong"},"content":"and your changes should be reflected when you call the `list` command.","lastModifiedDate":"2024-02-22"},{"lineNumber":228,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":229,"author":{"gitId":"CJerrong"},"content":"# Goodbye","lastModifiedDate":"2024-02-22"},{"lineNumber":230,"author":{"gitId":"CJerrong"},"content":"### Saying bye","lastModifiedDate":"2024-02-22"},{"lineNumber":231,"author":{"gitId":"CJerrong"},"content":"To say bye to Haro, type in: `bye`","lastModifiedDate":"2024-02-22"},{"lineNumber":232,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":233,"author":{"gitId":"CJerrong"},"content":"Haro will bid you farewell with the following message:","lastModifiedDate":"2024-02-22"},{"lineNumber":234,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":235,"author":{"gitId":"CJerrong"},"content":"Bye. Hope to see you some time soon!","lastModifiedDate":"2024-02-22"},{"lineNumber":236,"author":{"gitId":"CJerrong"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":237,"author":{"gitId":"CJerrong"},"content":"And you will exit the application.","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"CJerrong":214,"-":23}},{"path":"src/main/java/haro/Haro.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.command.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":" * The main class for the Haro application.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":" * Haro is a task management chatBot.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"public class Haro {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    private String haroLogo \u003d \" ___  ___  ________  ________  ________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"            + \"|\\\\  \\\\|\\\\  \\\\|\\\\   __  \\\\|\\\\   __  \\\\|\\\\   __  \\\\\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"            + \"\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"            + \" \\\\ \\\\   __  \\\\ \\\\   __  \\\\ \\\\   _  _\\\\ \\\\  \\\\\\\\\\\\  \\\\\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"            + \"  \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\\\\\  \\\\\\\\ \\\\  \\\\\\\\\\\\  \\\\\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"            + \"   \\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\\\\\ _\\\\\\\\ \\\\_______\\\\\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"            + \"    \\\\|__|\\\\|__|\\\\|__|\\\\|__|\\\\|__|\\\\|__|\\\\|_______|\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    private String horizontalLine \u003d \"______________________________________________\";","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    private String openingMsg \u003d \"Heya! I\u0027m Haro!\\n\" + \"What can I do for you today?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    private String closingMSg \u003d \"Bye. Hope to see you some time soon!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    private Storage haroStorage;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    private Ui haroUi;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    private boolean isExit;","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"     * Constructs a new Haro object.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     * Initializes the storage, task list and ui components.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     * @param dataPath   Path to the data file, where task data will be stored","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"     * @param directory  directory that the data file will be in","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    public Haro(String dataPath, String directory) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"        this.haroUi \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"        this.haroStorage \u003d new Storage(dataPath, directory);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        this.taskList \u003d new TaskList(haroStorage.loadSave());","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"     * Initialises the haro application.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"     * Greets the user and prompts the user for input through the command line.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"    public void initialise() {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"        haroUi.greet();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"                String fullCommand \u003d haroUi.readCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"                c.execute(taskList, haroUi, haroStorage);","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"                haroUi.showError(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"        haroUi.bye();","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"     * Returns a String of Haro\u0027s response to the user\u0027s input.","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The input command provided by the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"     * @return A String of the response generated by Haro.","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"     * @throws Exception If an error occurs during command parsing or execution.","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"    public String getResponse(String userInput) throws Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"        Command c \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"        if (c.isExit()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"            this.isExit \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"        return c.execute(taskList, haroUi, haroStorage);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"     * Saves the current list to the save file.","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"    public void saveList() {","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"        this.haroStorage.saveToDisk(this.taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"        return this.isExit;","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":85}},{"path":"src/main/java/haro/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"public class Launcher {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"CJerrong":13}},{"path":"src/main/java/haro/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    private final String dataPath \u003d \"data/saveList.txt\";","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    private final String directory \u003d \"data/\";","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    private Haro haro \u003d new Haro(dataPath, directory);","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"    private Image haroIcon \u003d new Image(\"/images/ExiaIcon.png\");","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"            stage.setTitle(\"Haro\");","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"            stage.getIcons().add(haroIcon);","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setHaro(haro);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"            stage.show();","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"CJerrong":36}},{"path":"src/main/java/haro/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.gui.DialogBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.SnapshotParameters;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":" * Controller for haro.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    private Haro haro;","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    private double imageRadius \u003d 220.0;","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Osaka.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Haro.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Ui.greet(), cropImage(dukeImage, imageRadius)));","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"    public void setHaro(Haro h) {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        haro \u003d h;","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"            response \u003d haro.getResponse(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"                    DialogBox.getUserDialog(input, cropImage(userImage, imageRadius)),","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"                    DialogBox.getDukeDialog(response, cropImage(dukeImage, imageRadius))","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"            );","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"                    DialogBox.getUserDialog(input, cropImage(userImage, imageRadius)),","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"                    DialogBox.getDukeErrorDialog(response, cropImage(dukeImage, imageRadius))","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"            );","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"        } finally {","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"            if (haro.isExit()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"            haro.saveList();","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"    private Image cropImage(Image image, double radius) {","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"        Circle clip \u003d new Circle(image.getWidth() / 2, image.getHeight() / 2, radius);","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"        ImageView imageView \u003d new ImageView(image);","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"        imageView.setClip(clip);","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"        SnapshotParameters parameters \u003d new SnapshotParameters();","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"        parameters.setFill(Color.TRANSPARENT);","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"        return imageView.snapshot(parameters, null);","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"CJerrong":86}},{"path":"src/main/java/haro/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.command.AddCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.command.ByeCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.command.Command;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import haro.command.DeleteCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import haro.command.EditCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import haro.command.FindCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import haro.command.ListCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import haro.command.MarkCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import haro.command.UnmarkCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import haro.exception.EmptyCommandException;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import haro.exception.EmptyTaskException;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import haro.exception.InvalidArgsException;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"import haro.exception.InvalidCommandException;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"import haro.exception.MissingDuedateException;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"import haro.exception.MissingEventTimeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"import haro.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"import haro.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"import haro.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":" * The parser class is responsible for parsing user input and creating corresponding Command objects","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":" * It handles the interpretation of commands and their arguments, throwing exceptions for invalid input.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    enum Instruction {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        BYE,","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"        NONE,","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"        LIST,","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        MARK,","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"        UNMARK,","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"        TODO,","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"        EVENT,","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        DELETE,","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"        FIND,","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"        EDIT,","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"     * Parses the user input and returns the corresponding Command object","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"     * @param input The users input through the command line","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"     * @return A Command object corresponding to the user input","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"     * @throws Exception If there are errors in the user input or command execution","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"    public static Command parseCommand(String input) throws Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"        Instruction instruction \u003d Instruction.NONE;","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"        String[] inputArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"        String instructWord \u003d inputArgs[0].toLowerCase().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        Command resultCommand \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"        switch (instructWord) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.BYE;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processByeCommand();","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"        case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.LIST;","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processListCommand();","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.MARK;","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"            checkArguments(inputArgs, true);","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processMarkCommand(inputArgs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.UNMARK;","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"            checkArguments(inputArgs, true);","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processUnmarkCommand(inputArgs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.TODO;","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"            checkArguments(inputArgs, false);","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processTodoCommand(inputArgs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.DEADLINE;","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"            checkArguments(inputArgs, false);","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processDeadlineCommand(inputArgs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"        case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.EVENT;","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"            checkArguments(inputArgs, false);","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processEventCommand(inputArgs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.DELETE;","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"            checkArguments(inputArgs, true);","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processDeleteCommand(inputArgs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"        case \"find\":","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.FIND;","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"            checkArguments(inputArgs, false);","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processFindCommand(inputArgs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"        case \"edit\":","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.EDIT;","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"            checkArguments(inputArgs, true);","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"            resultCommand \u003d processEditCommand(inputArgs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"            instruction \u003d Instruction.NONE;","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"            processUnknownCommand(inputArgs[0]);","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"        if (resultCommand \u003d\u003d null) {","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidCommandException(\"Sorry, please type a valid command\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"        // Assert resultCommand is valid command","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"        assert resultCommand instanceof Command : \"Parser.parse should return a Command object\";","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"        return resultCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"     * Creates a ByeCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"     * @return A ByeCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"    private static Command processByeCommand() {","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"        ByeCommand byeCommand \u003d new ByeCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"        return byeCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"CJerrong"},"content":"     * Creates a ListCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"CJerrong"},"content":"     * @return A ListCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"    private static Command processListCommand() {","lastModifiedDate":"2024-02-21"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"        return listCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"CJerrong"},"content":"     * Creates a MarkCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The user input specifying the task to mark.","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"     * @return A MarkCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the user input is not numeric.","lastModifiedDate":"2024-02-21"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"    private static Command processMarkCommand(String userInput) throws InvalidArgsException {","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"CJerrong"},"content":"        if (!isNumeric(userInput)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please input a number for the task you want to mark!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"CJerrong"},"content":"        int taskNumber \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"CJerrong"},"content":"        MarkCommand markCommand \u003d new MarkCommand(taskNumber);","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"CJerrong"},"content":"        return markCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":156,"author":{"gitId":"CJerrong"},"content":"     * Creates an UnmarkCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The user input specifying the task to unmark.","lastModifiedDate":"2024-02-21"},{"lineNumber":159,"author":{"gitId":"CJerrong"},"content":"     * @return An UnmarkCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":160,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the user input is not numeric.","lastModifiedDate":"2024-02-21"},{"lineNumber":161,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":162,"author":{"gitId":"CJerrong"},"content":"    private static Command processUnmarkCommand(String userInput) throws InvalidArgsException {","lastModifiedDate":"2024-02-21"},{"lineNumber":163,"author":{"gitId":"CJerrong"},"content":"        if (!isNumeric(userInput)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":164,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please input a number for the task you want to unmark!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"CJerrong"},"content":"        int taskNumber \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":168,"author":{"gitId":"CJerrong"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(taskNumber);","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"CJerrong"},"content":"        return unmarkCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":170,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":171,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":173,"author":{"gitId":"CJerrong"},"content":"     * Creates a TodoCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":174,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":175,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The user input specifying the todo task to be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"CJerrong"},"content":"     * @return An AddCommand object with the Todo task to be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":177,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"CJerrong"},"content":"    private static Command processTodoCommand(String userInput) {","lastModifiedDate":"2024-02-21"},{"lineNumber":179,"author":{"gitId":"CJerrong"},"content":"        Task newTodo \u003d new ToDo(userInput.trim());","lastModifiedDate":"2024-02-21"},{"lineNumber":180,"author":{"gitId":"CJerrong"},"content":"        AddCommand addCommand \u003d new AddCommand(newTodo);","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"CJerrong"},"content":"        return addCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":182,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":183,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":184,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":185,"author":{"gitId":"CJerrong"},"content":"     * Creates a DeadlineCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":186,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":187,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The user input specifying the deadline task to be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":188,"author":{"gitId":"CJerrong"},"content":"     * @return An AddCommand object with the Deadline task to be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":189,"author":{"gitId":"CJerrong"},"content":"     * @throws MissingDuedateException If the due date is missing.","lastModifiedDate":"2024-02-21"},{"lineNumber":190,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":191,"author":{"gitId":"CJerrong"},"content":"    private static Command processDeadlineCommand(String userInput) throws MissingDuedateException {","lastModifiedDate":"2024-02-21"},{"lineNumber":192,"author":{"gitId":"CJerrong"},"content":"        if (!userInput.contains(\"/by\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":193,"author":{"gitId":"CJerrong"},"content":"            throw new MissingDuedateException(\"Please specify a due date using \u0027/by\u0027!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"CJerrong"},"content":"        String[] taskArr \u003d userInput.split(\"/by\", 2);","lastModifiedDate":"2024-02-21"},{"lineNumber":197,"author":{"gitId":"CJerrong"},"content":"        String taskName \u003d taskArr[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"CJerrong"},"content":"        String taskDue \u003d taskArr[1].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"CJerrong"},"content":"        Task newDeadline \u003d new Deadline(taskName, taskDue);","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"CJerrong"},"content":"        AddCommand addCommand \u003d new AddCommand(newDeadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"CJerrong"},"content":"        return addCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":202,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":203,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":204,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":205,"author":{"gitId":"CJerrong"},"content":"     * Creates an EventCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":206,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":207,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The user input specifying the event task to be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":208,"author":{"gitId":"CJerrong"},"content":"     * @return An AddCommand object with the Event task to be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":209,"author":{"gitId":"CJerrong"},"content":"     * @throws MissingEventTimeException If the event start or end time is missing.","lastModifiedDate":"2024-02-21"},{"lineNumber":210,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":211,"author":{"gitId":"CJerrong"},"content":"    private static Command processEventCommand(String userInput) throws Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":212,"author":{"gitId":"CJerrong"},"content":"        if (!userInput.contains(\"/from\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":213,"author":{"gitId":"CJerrong"},"content":"            throw new MissingEventTimeException(\"Please specify a start date using \u0027/from\u0027!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":214,"author":{"gitId":"CJerrong"},"content":"        } else if (!userInput.contains(\"/to\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":215,"author":{"gitId":"CJerrong"},"content":"            throw new MissingEventTimeException(\"Please specify an end date using \u0027/to\u0027!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":218,"author":{"gitId":"CJerrong"},"content":"        String[] taskArr \u003d userInput.split(\"/from\", 2);","lastModifiedDate":"2024-02-21"},{"lineNumber":219,"author":{"gitId":"CJerrong"},"content":"        String taskName \u003d taskArr[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":220,"author":{"gitId":"CJerrong"},"content":"        String taskDur \u003d taskArr[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"CJerrong"},"content":"        String[] taskTime \u003d taskDur.split(\"/to\", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"CJerrong"},"content":"        String taskFrom \u003d taskTime[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":224,"author":{"gitId":"CJerrong"},"content":"        String taskTo \u003d taskTime[1].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":226,"author":{"gitId":"CJerrong"},"content":"        Task newEvent \u003d new Event(taskName, taskFrom, taskTo);","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"CJerrong"},"content":"        AddCommand addCommand \u003d new AddCommand(newEvent);","lastModifiedDate":"2024-02-02"},{"lineNumber":228,"author":{"gitId":"CJerrong"},"content":"        return addCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":229,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":230,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":231,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":232,"author":{"gitId":"CJerrong"},"content":"     * Creates a DeleteCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":233,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":234,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The user input specifying the task to delete.","lastModifiedDate":"2024-02-21"},{"lineNumber":235,"author":{"gitId":"CJerrong"},"content":"     * @return A DeleteCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":236,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the user input is not numeric.","lastModifiedDate":"2024-02-21"},{"lineNumber":237,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":238,"author":{"gitId":"CJerrong"},"content":"    private static Command processDeleteCommand(String userInput) throws InvalidArgsException {","lastModifiedDate":"2024-02-21"},{"lineNumber":239,"author":{"gitId":"CJerrong"},"content":"        if (!isNumeric(userInput)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":240,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please input a number for the task you want to delete!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":241,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"CJerrong"},"content":"        int taskNumber \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":244,"author":{"gitId":"CJerrong"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(taskNumber);","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"CJerrong"},"content":"        return deleteCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":246,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":247,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":248,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":249,"author":{"gitId":"CJerrong"},"content":"     * Creates a FindCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":250,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":251,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The user input specifying the search string.","lastModifiedDate":"2024-02-21"},{"lineNumber":252,"author":{"gitId":"CJerrong"},"content":"     * @return A FindCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":253,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the search string is empty.","lastModifiedDate":"2024-02-21"},{"lineNumber":254,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":255,"author":{"gitId":"CJerrong"},"content":"    private static Command processFindCommand(String userInput) throws InvalidArgsException {","lastModifiedDate":"2024-02-21"},{"lineNumber":256,"author":{"gitId":"CJerrong"},"content":"        userInput \u003d userInput.trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":257,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":258,"author":{"gitId":"CJerrong"},"content":"        if (userInput.equals(\"\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":259,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please input a valid search string\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":260,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":261,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":262,"author":{"gitId":"CJerrong"},"content":"        FindCommand findCommand \u003d new FindCommand(userInput);","lastModifiedDate":"2024-02-21"},{"lineNumber":263,"author":{"gitId":"CJerrong"},"content":"        return findCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":264,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":265,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":266,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":267,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":268,"author":{"gitId":"CJerrong"},"content":"     * Creates an EditCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":269,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":270,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The user input specifying the task to be edited.","lastModifiedDate":"2024-02-21"},{"lineNumber":271,"author":{"gitId":"CJerrong"},"content":"     * @return An EditCommand object.","lastModifiedDate":"2024-02-21"},{"lineNumber":272,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the user input is invalid.","lastModifiedDate":"2024-02-21"},{"lineNumber":273,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":274,"author":{"gitId":"CJerrong"},"content":"    private static Command processEditCommand(String userInput) throws InvalidArgsException {","lastModifiedDate":"2024-02-21"},{"lineNumber":275,"author":{"gitId":"CJerrong"},"content":"        String[] editArgs \u003d userInput.split(\"\\\\s\", 2);","lastModifiedDate":"2024-02-21"},{"lineNumber":276,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":277,"author":{"gitId":"CJerrong"},"content":"        if (editArgs.length \u003c 2) {","lastModifiedDate":"2024-02-23"},{"lineNumber":278,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please use edit command in the following format:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":279,"author":{"gitId":"CJerrong"},"content":"                    + \"\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":280,"author":{"gitId":"CJerrong"},"content":"                    + \"edit \u003ctaskNumber\u003e \u003cportion to edit\u003e \u003cupdated value\u003e\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":281,"author":{"gitId":"CJerrong"},"content":"                    + \"\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":282,"author":{"gitId":"CJerrong"},"content":"                    + \"Please use /task, /by, /from or /to to indicate which portion to edit\");","lastModifiedDate":"2024-02-23"},{"lineNumber":283,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":284,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":285,"author":{"gitId":"CJerrong"},"content":"        String taskNumber \u003d editArgs[0].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":286,"author":{"gitId":"CJerrong"},"content":"        String editInstruction \u003d editArgs[1].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":287,"author":{"gitId":"CJerrong"},"content":"        if (!isNumeric(taskNumber)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":288,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please use edit command in the following format:\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":289,"author":{"gitId":"CJerrong"},"content":"                    + \"\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":290,"author":{"gitId":"CJerrong"},"content":"                    + \"edit \u003ctaskNumber\u003e \u003cportion to edit\u003e \u003cupdated value\u003e\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":291,"author":{"gitId":"CJerrong"},"content":"                    + \"\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":292,"author":{"gitId":"CJerrong"},"content":"                    + \"Please use /task, /by, /from or /to to indicate which portion to edit\");","lastModifiedDate":"2024-02-23"},{"lineNumber":293,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":294,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":295,"author":{"gitId":"CJerrong"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":296,"author":{"gitId":"CJerrong"},"content":"        String[] editCommandArgs \u003d editInstruction.split(\"\\\\s\", 2);","lastModifiedDate":"2024-02-18"},{"lineNumber":297,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":298,"author":{"gitId":"CJerrong"},"content":"        if (editCommandArgs.length \u003c 2) {","lastModifiedDate":"2024-02-23"},{"lineNumber":299,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please use edit command in the following format:\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":300,"author":{"gitId":"CJerrong"},"content":"                    + \"\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":301,"author":{"gitId":"CJerrong"},"content":"                    + \"edit \u003ctaskNumber\u003e \u003cportion to edit\u003e \u003cupdated value\u003e\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":302,"author":{"gitId":"CJerrong"},"content":"                    + \"\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":303,"author":{"gitId":"CJerrong"},"content":"                    + \"Please use /task, /by, /from or /to to indicate which portion to edit\");","lastModifiedDate":"2024-02-23"},{"lineNumber":304,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":305,"author":{"gitId":"CJerrong"},"content":"        String portionToEdit \u003d editCommandArgs[0].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":306,"author":{"gitId":"CJerrong"},"content":"        String updatedPortion \u003d editCommandArgs[1].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":307,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":308,"author":{"gitId":"CJerrong"},"content":"        if (portionToEdit.equals(\"\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":309,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please use /task, /by, /from or /to to indicate which portion to edit\");","lastModifiedDate":"2024-02-18"},{"lineNumber":310,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":311,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":312,"author":{"gitId":"CJerrong"},"content":"        if (updatedPortion.equals(\"\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":313,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please specify what the updated portion should be!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":314,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":315,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":316,"author":{"gitId":"CJerrong"},"content":"        EditCommand editCommand \u003d new EditCommand(taskIndex, portionToEdit, updatedPortion);","lastModifiedDate":"2024-02-18"},{"lineNumber":317,"author":{"gitId":"CJerrong"},"content":"        return editCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":318,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":319,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":320,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":321,"author":{"gitId":"CJerrong"},"content":"     * Handles unknown user inputs not corresponding to existing commands.","lastModifiedDate":"2024-02-21"},{"lineNumber":322,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":323,"author":{"gitId":"CJerrong"},"content":"     * @param userInput The user input for the unknown command.","lastModifiedDate":"2024-02-21"},{"lineNumber":324,"author":{"gitId":"CJerrong"},"content":"     * @throws Exception If the command is empty or invalid.","lastModifiedDate":"2024-02-21"},{"lineNumber":325,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":326,"author":{"gitId":"CJerrong"},"content":"    private static void processUnknownCommand(String userInput) throws Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":327,"author":{"gitId":"CJerrong"},"content":"        if (userInput.equals(\"\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":328,"author":{"gitId":"CJerrong"},"content":"            throw new EmptyCommandException(\"Empty command! Type something!\\n \");","lastModifiedDate":"2024-02-21"},{"lineNumber":329,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":330,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":331,"author":{"gitId":"CJerrong"},"content":"        throw new InvalidCommandException(\"Sorry, please type a valid command\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":332,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":333,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":334,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":335,"author":{"gitId":"CJerrong"},"content":"     * Checks if the given string is numeric","lastModifiedDate":"2024-02-04"},{"lineNumber":336,"author":{"gitId":"CJerrong"},"content":"     * @param str String to be checked","lastModifiedDate":"2024-02-04"},{"lineNumber":337,"author":{"gitId":"CJerrong"},"content":"     * @return True if the string is numeric and false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":338,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":339,"author":{"gitId":"CJerrong"},"content":"    private static boolean isNumeric(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":340,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":341,"author":{"gitId":"CJerrong"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2024-02-02"},{"lineNumber":342,"author":{"gitId":"CJerrong"},"content":"            return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":343,"author":{"gitId":"CJerrong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":344,"author":{"gitId":"CJerrong"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":345,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":346,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":347,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":348,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":349,"author":{"gitId":"CJerrong"},"content":"     * Checks the validity of the command arguments.","lastModifiedDate":"2024-02-21"},{"lineNumber":350,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":351,"author":{"gitId":"CJerrong"},"content":"     * @param userInputs The array of user inputs containing the command arguments.","lastModifiedDate":"2024-02-21"},{"lineNumber":352,"author":{"gitId":"CJerrong"},"content":"     * @param isIndexCommand Boolean indicating whether the command requires a task index input","lastModifiedDate":"2024-02-22"},{"lineNumber":353,"author":{"gitId":"CJerrong"},"content":"     * @throws EmptyTaskException If the task name is missing.","lastModifiedDate":"2024-02-21"},{"lineNumber":354,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":355,"author":{"gitId":"CJerrong"},"content":"    private static void checkArguments(String[] userInputs, boolean isIndexCommand) throws EmptyTaskException {","lastModifiedDate":"2024-02-22"},{"lineNumber":356,"author":{"gitId":"CJerrong"},"content":"        if (userInputs.length \u003c 2 || userInputs[1].equals(\"\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":357,"author":{"gitId":"CJerrong"},"content":"            if (isIndexCommand) {","lastModifiedDate":"2024-02-22"},{"lineNumber":358,"author":{"gitId":"CJerrong"},"content":"                throw new EmptyTaskException(\"Please input a task number\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":359,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":360,"author":{"gitId":"CJerrong"},"content":"            throw new EmptyTaskException(\"Please input a task name\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":361,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":362,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":363,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":364,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":364}},{"path":"src/main/java/haro/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import haro.task.Deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import haro.task.Event;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import haro.task.ToDo;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":" * The Storage class manages the reading and saving of task data to a text file.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":" * It loads tasks from a specific text file and saves it back to the same file.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"    private String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    private File file;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     * Constructs a Storage instance with specified file paths","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"     * @param filePath Path to save file that the Storage instance will be loading and saving from","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"     * @param directoryPath The directory that the text file is in","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    public Storage(String filePath, String directoryPath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"        // Assert that file path and directory path are not null","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        assert filePath !\u003d null \u0026\u0026 directoryPath !\u003d null : \"file path and directory path should not be null\";","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"            dir.mkdir();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"        // Test if file exists","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"                FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"                writer.write(\"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"                writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"     * Loads tasks from the save file and returns them as an ArrayList","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"     * @return An ArrayList of the Task objects loaded from the save file.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"    public ArrayList\u003cTask\u003e loadSave() {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"        ArrayList\u003cTask\u003e resultTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"            Scanner storageScanner \u003d new Scanner(this.file);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"            while (storageScanner.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"                String storageLine \u003d storageScanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"                String actionType \u003d \"none\";","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"                String[] storageArgs \u003d storageLine.split(\"\\\\|\");","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"                String commandType \u003d storageArgs[0].toLowerCase().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"                switch (commandType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"                case \"t\":","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"                    actionType \u003d \"todo\";","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"                case \"d\":","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"                    actionType \u003d \"deadline\";","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"                case \"e\":","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"                    actionType \u003d \"event\";","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"                default:","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"                    actionType \u003d \"none\";","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"                if (actionType \u003d\u003d \"none\") {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"                    // Empty file or invalid file","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"                } else if (actionType \u003d\u003d \"todo\") {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"                    resultTasks.add(loadTodoTask(storageArgs));","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"                } else if (actionType \u003d\u003d \"deadline\") {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"                    resultTasks.add(loadDeadlineTask(storageArgs));","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"                } else if (actionType \u003d\u003d \"event\") {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"                    resultTasks.add(loadEventTask(storageArgs));","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"                }","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"            // File does not exist, or is invalid, we return empty taskList","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"            resultTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"            return resultTasks;","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"        } finally {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"            return resultTasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"     * Saves the tasks from a TaskList to the save file","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"     * @param sourceTaskList TaskList containing tasks to be saved","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"    public void saveToDisk(TaskList sourceTaskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"        ArrayList\u003cTask\u003e saveTasks \u003d sourceTaskList.getArrayList();","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"        String content \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"        for (int i \u003d 0; i \u003c saveTasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"            Task curr \u003d saveTasks.get(i);","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"            String currTask \u003d curr.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"            content +\u003d currTask + System.lineSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"            // Assert that a filePath exists","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"            assert this.filePath !\u003d null : \"File path cannot be null when saving taskList to disk\";","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"            fw.write(content);","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"CJerrong"},"content":"            fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"CJerrong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"    private Task loadTodoTask(String[] storageArgs) throws Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"CJerrong"},"content":"        if (storageArgs.length \u003c 3) {","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"CJerrong"},"content":"            throw new Exception(\"Invalid save list\");","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"CJerrong"},"content":"        int markedInt \u003d Integer.valueOf(storageArgs[1].trim());","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"CJerrong"},"content":"        boolean isMarked \u003d (markedInt \u003d\u003d 0) ? false : true;","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"CJerrong"},"content":"        ToDo todoTask \u003d new ToDo(storageArgs[2].trim(), isMarked);","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"CJerrong"},"content":"        return todoTask;","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"    private Task loadDeadlineTask(String[] storageArgs) throws Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"        if (storageArgs.length \u003c 4) {","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"CJerrong"},"content":"            throw new Exception(\"Invalid save list\");","lastModifiedDate":"2024-02-21"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"CJerrong"},"content":"        int markedInt \u003d Integer.valueOf(storageArgs[1].trim());","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"CJerrong"},"content":"        boolean isMarked \u003d (markedInt \u003d\u003d 0) ? false : true;","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"CJerrong"},"content":"        String taskName \u003d storageArgs[2].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"        String dueDate \u003d storageArgs[3].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"        Deadline deadlineTask \u003d new Deadline(taskName, dueDate, isMarked);","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"        return deadlineTask;","lastModifiedDate":"2024-02-21"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"    private Task loadEventTask(String[] storageArgs) throws Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"CJerrong"},"content":"        if (storageArgs.length \u003c 5) {","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"CJerrong"},"content":"            throw new Exception(\"Invalid save list\");","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"        int markedInt \u003d Integer.valueOf(storageArgs[1].trim());","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"CJerrong"},"content":"        boolean isMarked \u003d (markedInt \u003d\u003d 0) ? false : true;","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"CJerrong"},"content":"        String taskName \u003d storageArgs[2].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"CJerrong"},"content":"        String start \u003d storageArgs[3].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"CJerrong"},"content":"        String end \u003d storageArgs[4].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"CJerrong"},"content":"        Event eventTask \u003d new Event(taskName, start, end, isMarked);","lastModifiedDate":"2024-02-21"},{"lineNumber":156,"author":{"gitId":"CJerrong"},"content":"        return eventTask;","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"CJerrong":159}},{"path":"src/main/java/haro/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.exception.InvalidArgsException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import haro.task.Deadline;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import haro.task.Event;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":" * The TaskList class manages a list of tasks, providing methods for adding, marking, unMarking and deleting tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":" * It also provides methods for getting Task data, and total number of tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     * Constructs a TaskList from an existing ArrayList of Task objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     * @param tasks ArrayList containing Task objects to initialise the TaskList","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"     * Converts tasks in the TaskList to a formatted string.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"     * @return Formatted string representation of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    public String tasksToString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"            return taskString;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"            String formattedTaskString \u003d formatTaskString(index, currTask);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"            taskString +\u003d formattedTaskString;","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"        return taskString;","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"     * @param task Task to be added","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"     * Marks a task at the specified index.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"     * @param index Index of the task to be marked","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"     * @return The marked Task object","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the index given is out of bounds","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"    public Task markTask(int index) throws InvalidArgsException {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Sorry that item does not exist in your list!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please input a positive task number!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"        Task currTask \u003d tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"        currTask.markTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"        return currTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"     * UnMarks a task at the specified index.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"     * @param index Index of the task to be unmarked","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"     * @return The unmarked Task object","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the index given is out of bounds","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"    public Task unmarkTask(int index) throws InvalidArgsException {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Sorry that item does not exist in your list!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please input a positive task number!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"        Task currTask \u003d tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"        currTask.unmarkTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"        return currTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"     * @param index Index of the task to be deleted","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"     * @return The deleted Task Object","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the index given is out of bounds","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"    public Task deleteTask(int index) throws InvalidArgsException {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Sorry that item does not exist in your list!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"            throw new InvalidArgsException(\"Please input a positive task number!\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"        Task currTask \u003d tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"        return currTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"CJerrong"},"content":"     * Finds the tasks in task list with keyword present.","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"     * @param searchString keyword that the task list will search for","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"     * @return String representation of tasks with keyword present","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"CJerrong"},"content":"    public String findTask(String searchString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"CJerrong"},"content":"        String resultString \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"CJerrong"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"CJerrong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"CJerrong"},"content":"            return resultString;","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"CJerrong"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"            boolean isFound \u003d currTask.isFound(searchString);","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"CJerrong"},"content":"            if (isFound) {","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"CJerrong"},"content":"                String formattedTaskString \u003d formatTaskString(index, currTask);","lastModifiedDate":"2024-02-17"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"                resultString +\u003d formattedTaskString;","lastModifiedDate":"2024-02-17"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"                index++;","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"CJerrong"},"content":"        return resultString;","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"CJerrong"},"content":"     * Returns an edited version of the task in the task list with updated sections as indicated by the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"CJerrong"},"content":"     * @param taskIndex Index of the task in the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"CJerrong"},"content":"     * @param portionToEdit The portion of the task that the user wishes to edit","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"CJerrong"},"content":"     * @param updatedPortion The new supplied value for the portion the user wants to edit","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"CJerrong"},"content":"     * @return Edited version of the task","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the arguments supplied by the user are invalid","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"CJerrong"},"content":"    public Task editTask(int taskIndex, String portionToEdit, String updatedPortion) throws InvalidArgsException {","lastModifiedDate":"2024-02-18"},{"lineNumber":159,"author":{"gitId":"CJerrong"},"content":"        Task currTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-18"},{"lineNumber":160,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":161,"author":{"gitId":"CJerrong"},"content":"        if (portionToEdit.equals(\"/task\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"CJerrong"},"content":"            currTask.setTask(updatedPortion);","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"CJerrong"},"content":"            return currTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"CJerrong"},"content":"        if (portionToEdit.equals(\"/by\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"CJerrong"},"content":"            if (!(currTask instanceof Deadline)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"CJerrong"},"content":"                throw new InvalidArgsException(\"Please use edit /by only for deadline tasks\");","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":171,"author":{"gitId":"CJerrong"},"content":"            // Safe to type cast because of instanceof check","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"CJerrong"},"content":"            Deadline currDeadline \u003d (Deadline) currTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"CJerrong"},"content":"            currDeadline.setDueDate(updatedPortion);","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"CJerrong"},"content":"            return currDeadline;","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"CJerrong"},"content":"        } else if (portionToEdit.equals(\"/from\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"CJerrong"},"content":"            if (!(currTask instanceof Event)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"CJerrong"},"content":"                throw new InvalidArgsException(\"Please use edit /from only for event tasks\");","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":179,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":180,"author":{"gitId":"CJerrong"},"content":"            // Safe to type cast because of instanceof check","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"CJerrong"},"content":"            Event currEvent \u003d (Event) currTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"CJerrong"},"content":"            currEvent.setFromDate(updatedPortion);","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"CJerrong"},"content":"            return currEvent;","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"CJerrong"},"content":"        } else if (portionToEdit.equals(\"/to\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"CJerrong"},"content":"            if (!(currTask instanceof Event)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":186,"author":{"gitId":"CJerrong"},"content":"                throw new InvalidArgsException(\"Please use edit /to only for event tasks\");","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":188,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":189,"author":{"gitId":"CJerrong"},"content":"            // Safe to type cast because of instanceof check","lastModifiedDate":"2024-02-18"},{"lineNumber":190,"author":{"gitId":"CJerrong"},"content":"            Event currEvent \u003d (Event) currTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":191,"author":{"gitId":"CJerrong"},"content":"            currEvent.setToDate(updatedPortion);","lastModifiedDate":"2024-02-18"},{"lineNumber":192,"author":{"gitId":"CJerrong"},"content":"            return currEvent;","lastModifiedDate":"2024-02-18"},{"lineNumber":193,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":194,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":195,"author":{"gitId":"CJerrong"},"content":"        throw new InvalidArgsException(\"Please give a valid sub command for edit using /task, /by, /from or /to\"","lastModifiedDate":"2024-02-18"},{"lineNumber":196,"author":{"gitId":"CJerrong"},"content":"                + \" to edit chosen portions \" + portionToEdit);","lastModifiedDate":"2024-02-18"},{"lineNumber":197,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":198,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":199,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"CJerrong"},"content":"     * Retrieves the ArrayList of Task objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"CJerrong"},"content":"     * @return ArrayList of Task objects","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"CJerrong"},"content":"    public ArrayList\u003cTask\u003e getArrayList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"CJerrong"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":209,"author":{"gitId":"CJerrong"},"content":"     * Retrieves the total number of tasks in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"CJerrong"},"content":"     * @return Number of tasks in the TaskList","lastModifiedDate":"2024-02-04"},{"lineNumber":212,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":213,"author":{"gitId":"CJerrong"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-02"},{"lineNumber":214,"author":{"gitId":"CJerrong"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":217,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":218,"author":{"gitId":"CJerrong"},"content":"     * Formats tasks for adding into task list String representation.","lastModifiedDate":"2024-02-17"},{"lineNumber":219,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":220,"author":{"gitId":"CJerrong"},"content":"     * @param index Current index of task.","lastModifiedDate":"2024-02-17"},{"lineNumber":221,"author":{"gitId":"CJerrong"},"content":"     * @param task Task who will be formatted into String representation","lastModifiedDate":"2024-02-17"},{"lineNumber":222,"author":{"gitId":"CJerrong"},"content":"     * @return Formatted string representation of task","lastModifiedDate":"2024-02-17"},{"lineNumber":223,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":224,"author":{"gitId":"CJerrong"},"content":"    private String formatTaskString(int index, Task task) {","lastModifiedDate":"2024-02-17"},{"lineNumber":225,"author":{"gitId":"CJerrong"},"content":"        String result \u003d index + \". \" + task.printTask() + \"\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":226,"author":{"gitId":"CJerrong"},"content":"        return result;","lastModifiedDate":"2024-02-17"},{"lineNumber":227,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":228,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":228}},{"path":"src/main/java/haro/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * The Ui class handles user interface interactions, reading user input and displaying messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" * It provides methods for greeting, saying bye, reading user command inputs,","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":" * showing errors and printing out task information.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    private static final String haroLogo \u003d \" ___  ___  ________  ________  ________\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"            + \"|\\\\  \\\\|\\\\  \\\\|\\\\   __  \\\\|\\\\   __  \\\\|\\\\   __  \\\\\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"            + \"\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"            + \" \\\\ \\\\   __  \\\\ \\\\   __  \\\\ \\\\   _  _\\\\ \\\\  \\\\\\\\\\\\  \\\\\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"            + \"  \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\\\\\  \\\\\\\\ \\\\  \\\\\\\\\\\\  \\\\\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"            + \"   \\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\\\\\ _\\\\\\\\ \\\\_______\\\\\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"            + \"    \\\\|__|\\\\|__|\\\\|__|\\\\|__|\\\\|__|\\\\|__|\\\\|_______|\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    private static final String horizontalLine \u003d \"______________________________________________\";","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    private static String openingMsg \u003d \"Heya! I\u0027m Haro!\\n\" + \"What can I do for you today?\";","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    private static String closingMSg \u003d \"Bye. Hope to see you some time soon!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    private Scanner inputScanner;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     * Constructs a Ui instance with a scanner for user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    public Ui() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"        this.inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"     * Displays a greeting message with a Haro logo.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    public static String greet() {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        return openingMsg;","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"     * Displays a farewell message and that the task list has been saved.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"    public String bye() {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        return closingMSg;","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"     * @return User input as a string","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        return inputScanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"     * Displays an error message.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"     * @param errorMsg Error message to be displayed","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"    public String showError(String errorMsg) {","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"        return errorMsg;","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"     * Prints all the Tasks within a TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"     * @param tasks TaskList containing tasks to be printed","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"    public String printList(TaskList tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"        String taskString \u003d tasks.tasksToString();","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"        if (taskString \u003d\u003d \"\") {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"            return \"The task list is currently empty! Add tasks!\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"            return \"Here are the tasks in your list:\\n\" + taskString;","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"     * Prints a message for marking a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"     * @param task Task that has been marked","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"    public String printMarkTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"        return \"Nice! I\u0027ve marked this task as done\\n\" + task.printTask();","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"     * Prints a message for unMarking a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"     * @param task Task that has been unmarked","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"    public String printUnmarkTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"        return \"Alright, I\u0027ve marked this task as not done yet\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"                + task.printTask();","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"     * Prints a message for adding a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"     * @param task Task that has been added","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"     * @param taskListSize Current size of the task list after addition of task","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"    public String printAddTask(Task task, int taskListSize) {","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"        return \"Got it I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"                + task.printTask() + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"                + \"You now have \" + taskListSize + \" tasks in the list\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"     * Prints a message for deleting a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"     * @param task          Task that has been deleted","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"     * @param taskListSize  Current size of the task list after deletion of task","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"    public String printDeleteTask(Task task, int taskListSize) {","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"        return \"Noted. I\u0027ve removed this task\\n\" + task.printTask() + \"\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"                + \"You now have \" + taskListSize + \" tasks in the list\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"     * Prints the result of a search operation.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"     * @param taskString String containing the matching tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"    public String printSearch(String taskString) {","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"CJerrong"},"content":"        if (taskString.equals(\"\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"CJerrong"},"content":"            return \"Sorry there are no current matches in your list! :(\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"CJerrong"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"CJerrong"},"content":"            return \"Here are the matching tasks in your list:\\n\" + taskString;","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"     * Prints the result of a task edit operation.","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"CJerrong"},"content":"     * @param task Task objected of the edited task","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"     * @param index Index of the task in the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"CJerrong"},"content":"     * @return A message telling the user the task has been updated","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"CJerrong"},"content":"    public String printEditTask(Task task, int index) {","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"        int taskNumber \u003d index + 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"        return \"Got it I\u0027ve edited this task:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"                + taskNumber + \". \" + task.printTask();","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":145}},{"path":"src/main/java/haro/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * The AddCommand class represents a command to add a task to the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" * It extends the base Command class and implements the execute method to add a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    private Task task;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"     * Constructs an AddCommand Instance with the Task object to be added.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"     * @param task Task object to be added to the TaskList","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"        super(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     * Executes the command by adding the task to the TaskList and displaying a corresponding message.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     * @param taskList TaskList to be modified by the command","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"     * @param ui       Ui for displaying messages related to command execution","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     * @param storage  Storage for saving and loading task data","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        return ui.printAddTask(this.task, taskList.getSize());","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":37}},{"path":"src/main/java/haro/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":" * The ByeCommand class represents a command to exit the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * It extends the base Command class and implements the execute method to save Tasks to the save file before","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" * exiting the application.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"     * Constructs a ByeCommand instance indicating that it signifies an exit of the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"        super(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"     * Executes the command by saving the TaskList to disk before exiting the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"     * @param taskList TaskList to be modified by the command","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"     * @param ui       Ui for displaying messages related to command execution","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     * @param storage  Storage for saving and loading task data","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"        storage.saveToDisk(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"        return ui.bye();","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":33}},{"path":"src/main/java/haro/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":" * The Command class is an abstract class that serves as a base for the various command types.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * It provides a method for executing the command and a method for checking if the command is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"     * Constructs a Command instance with an initial status.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"     * @param isDone Flag indicating whether the command signifies an exit","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"    public Command(boolean isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"     * Executes the command, making changes to the TaskList, Ui, and Storage as necessary.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     * @param taskList TaskList to be modified by the command","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     * @param ui       Ui for displaying messages related to command execution","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     * @param storage  Storage for saving and loading task data","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"     * @throws Exception If an error occurs during command execution","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws Exception;","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"     * Checks if the command signifies an exit.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"     * @return true if the command signifies an exit, false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":42}},{"path":"src/main/java/haro/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import haro.exception.InvalidArgsException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" * The DeleteCommand class represents a command to delete a task from the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":" * It extends the base Command class and implements the execute method to delete the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"     * Constructs a DeleteCommand instance with the specified task index to delete from the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"     * @param taskNumber Index of the task in the TaskList to be deleted","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"        super(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     * Executes the command by deleting the Task with the specified task index from the TaskList and","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     * displays a corresponding message.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"     * @param taskList TaskList to be modified by the command","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     * @param ui       Ui for displaying messages related to command execution","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"     * @param storage  Storage for saving and loading task data","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the provided task index number is invalid","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidArgsException {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"        Task currTask \u003d taskList.deleteTask(this.taskNumber);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        return ui.printDeleteTask(currTask, taskList.getSize());","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":39}},{"path":"src/main/java/haro/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.command;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.Storage;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.TaskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.Ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import haro.exception.InvalidArgsException;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" * The EditCommand class represents a command to edit tasks in the task list with the desired portions to update.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":" * It extends the Command class and provides functionality to execute the edit command.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"    private String portionToEdit;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    private String updatedPortion;","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     * Constructs an EditCommand instance with the specified task index, portion to edit and updated","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"     * value for that portion.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"     * @param taskIndex Index number of the task in the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     * @param portionToEdit Portion of the task the user wishes to edit","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"     * @param updatedPortion Updated value for the portion the user wishes to edit","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    public EditCommand(int taskIndex, String portionToEdit, String updatedPortion) {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"        super(false);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        this.portionToEdit \u003d portionToEdit;","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"        this.updatedPortion \u003d updatedPortion;","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidArgsException {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        Task updatedTask \u003d taskList.editTask(taskIndex, portionToEdit, updatedPortion);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"        return ui.printEditTask(updatedTask, taskIndex);","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"CJerrong":38}},{"path":"src/main/java/haro/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":" * The FindCommand class represents a command to search for tasks containing a specific keyword in the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * It extends the Command class and provides functionality to execute the search command.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    private String searchString;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"     * Constructs a FindCommand instance with the specified search string.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"     * @param searchString Keyword to search for in tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    public FindCommand(String searchString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"        super(false);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"        this.searchString \u003d searchString;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     * Executes the find command, searching for tasks containing the specified keyword and prints the search results.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     * @param taskList TaskList instance containing the list of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"     * @param ui       Ui instance for user interface interaction","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     * @param storage  Storage instance for handling data storage","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"        String searchTaskString \u003d taskList.findTask(this.searchString);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        return ui.printSearch(searchTaskString);","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CJerrong":37}},{"path":"src/main/java/haro/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":" * The ListCommand class represents a command to display the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * It extends the base Command class and implements the execute method to print the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"     * Constructs a ListCommand instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"        super(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"     * Executes the command by printing the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     * @param taskList TaskList to be displayed","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"     * @param ui       Ui for displaying messages related to command execution","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"     * @param storage  Storage for saving and loading task data","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        return ui.printList(taskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"     * Checks if the given object is equal to this ListCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"     * @param o Object to be compared","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"     * @return true if the object is an instance of ListCommand; false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"            return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        if (o instanceof ListCommand) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"            return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":50}},{"path":"src/main/java/haro/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import haro.exception.InvalidArgsException;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" * The MarkCommand class represents a command to mark a task as done in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":" * It extends the base Command class and implements the execute method to mark the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"     * Constructs a MarkCommand instance with the specified task number.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     * @param taskNumber Task number of the task to be marked in the TaskList","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"        super(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     * Executes the command by marking the specified task as done in the TaskList and","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     * displaying a corresponding message.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     * @param taskList TaskList to be modified by the command","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"     * @param ui       Ui for displaying messages related to command execution","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"     * @param storage  Storage for saving and loading task data","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the provided task number is invalid","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidArgsException {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        Task currTask \u003d taskList.markTask(this.taskNumber);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"        return ui.printMarkTask(currTask);","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"     * Checks if the given object is equal to this MarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"     * @param o Object to be compared","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"     * @return true if the object is an instance of MarkCommand with the same task number; false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"            return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        if (o instanceof MarkCommand) {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"            MarkCommand oMarkCommand \u003d (MarkCommand) o;","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"            if (oMarkCommand.taskNumber \u003d\u003d this.taskNumber) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"                return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":62}},{"path":"src/main/java/haro/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import haro.exception.InvalidArgsException;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" * The UnmarkCommand class represents a command to unmark a task in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":" * It extends the base Command class and implements the execute method to unmark the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"     * Constructs an UnmarkCommand instance with the specified task number.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     * @param taskNumber Task number of the task to be unmarked in the TaskList","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"        super(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"     * Executes the command by unmarking the specified task in the TaskList and displaying a corresponding message.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"     * @param taskList TaskList to be modified by the command","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     * @param ui       Ui for displaying messages related to command execution","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"     * @param storage  Storage for saving and loading task data","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidArgsException If the provided task number is invalid","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidArgsException {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"        Task currTask \u003d taskList.unmarkTask(this.taskNumber);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        return ui.printUnmarkTask(currTask);","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CJerrong":40}},{"path":"src/main/java/haro/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":" * Exception thrown when a command is provided with no arguments.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"public class EmptyCommandException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"    public EmptyCommandException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":10}},{"path":"src/main/java/haro/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":" * Exception thrown when a task name is not given.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"    public EmptyTaskException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":10}},{"path":"src/main/java/haro/exception/InvalidArgsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":" * Exception thrown when arguments provided are invalid.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"public class InvalidArgsException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"    public InvalidArgsException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":10}},{"path":"src/main/java/haro/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":" * Exception thrown when invalid command is given.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":10}},{"path":"src/main/java/haro/exception/MissingDuedateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":" * Exception thrown when deadline task is missing a due date.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"public class MissingDuedateException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"    public MissingDuedateException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":10}},{"path":"src/main/java/haro/exception/MissingEventTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":" * Exception thrown when event task is missing a from or to date.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"public class MissingEventTimeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"    public MissingEventTimeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":10}},{"path":"src/main/java/haro/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.gui;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import haro.MainWindow;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"    public static DialogBox getDukeErrorDialog(String text, Image img) {","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"        db.flip();","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"        db.dialog.setStyle(\"-fx-background-color: #60645f; -fx-text-fill: #eaeaea; -fx-background-radius: 7.5;\"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"                + \"-fx-font-family: Verdana; -fx-font-size: 12px\");","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"        return db;","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"CJerrong":70}},{"path":"src/main/java/haro/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":" * The Deadline class represents a task with a specific deadline in the application, extending the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * It provides specific functionality for handling tasks with deadlines.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    private String deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"     * Constructs a Deadline instance with the specified task description and deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"     * @param task     Task description","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     * @param deadline Deadline of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"        super(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"            deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"            deadlineDate \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"     * Constructs a Deadline instance with the specified task description, deadline, and done status.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"     * @param task     Task description","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"     * @param deadline Deadline of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"     * @param isDone     True if the task is marked as done, false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    public Deadline(String task, String deadline, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        super(task, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"            deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"            deadlineDate \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"     * Returns a formatted string representation of the deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"     * @return Formatted string representation of the deadline task","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"    public String printTask() {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"        String deadlineString;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"        if (deadlineDate !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"            deadlineString \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"            deadlineString \u003d this.deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"        return \"[D]\" + super.printTask() + \" (by: \" + deadlineString + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"     * Returns a string representation of the deadline task for storage purposes.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"     * Format: \"D | {marked} | {task} | {deadline}\"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"     * @return String representation of the deadline task for storage","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"        int marked \u003d (this.isDone) ? 1 : 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"        return \"D | \" + marked + \" | \" + this.task + \" | \" + this.deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"    public void setDueDate(String updatedDueDate) {","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"        this.deadline \u003d updatedDueDate;","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"            deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"            deadlineDate \u003d null;","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":87}},{"path":"src/main/java/haro/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":" * The Event class represents an event task in the application, extending the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * It provides specific functionality for handling event tasks with start and end dates.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    private String start;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"    private String end;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"     * Constructs an Event instance with the specified task description, start date, and end date.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"     * @param task Task description","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"     * @param start Start date of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"     * @param end   End date of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    public Event(String task, String start, String end) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"        super(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"            startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"            endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"            startDate \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"            endDate \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"     * Constructs an Event instance with the specified task description, start date, end date, and done status.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"     * @param task Task description","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"     * @param start Start date of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"     * @param end   End date of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"     * @param isDone  True if the task is marked as done, false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"    public Event(String task, String start, String end, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"        super(task, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"            startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"            endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"            startDate \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"            endDate \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"     * Returns a formatted string representation of the event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"     * @return Formatted string representation of the event task","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"    public String printTask() {","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"        String startString;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"        String endString;","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"            startString \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"            startString \u003d this.start;","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"        if (endDate !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"            endString \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"            endString \u003d this.end;","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"        return \"[E]\" + super.printTask() + \" (from: \" + startString + \" to: \" + endString + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"     * Returns a string representation of the event task for storage purposes.","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"     * Format: \"E | {marked} | {task} | {start} | {end}\"","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"     * @return String representation of the event task for storage","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"        int marked \u003d (this.isDone) ? 1 : 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"        return \"E | \" + marked + \" | \" + this.task + \" | \" + this.start + \" | \" + this.end;","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"    public void setFromDate(String fromDate) {","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"        this.start \u003d fromDate;","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"            startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"            startDate \u003d null;","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"    public void setToDate(String toDate) {","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"        this.end \u003d toDate;","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"            endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"            endDate \u003d null;","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":115}},{"path":"src/main/java/haro/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":" * The Task class represents a generic task in the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":" * It is an abstract class providing a common structure for various task types.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"    protected String task;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"     * Constructs a Task instance with the specified task description.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"     * @param task Task description","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     * Constructs a Task instance with the specified task description.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"     * @param task Task description","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    public Task(String task, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    public void markTask() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"     * @return String representation of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"    public String printTask() {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"        String taskString;","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"            taskString \u003d \"[X] \" + this.task;","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"            taskString \u003d \"[ ] \" + this.task;","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"        return taskString;","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"    public boolean isFound(String searchString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"        return this.task.contains(searchString);","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"    public void setTask(String updatedTask) {","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"        this.task \u003d updatedTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":70}},{"path":"src/main/java/haro/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":" * The ToDo class represents a to-do task in the application, extending the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":" * It provides specific functionality for handling to-do tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"     * Constructs a ToDo instance with the specified task description.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"     * @param task Task description","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    public ToDo(String task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"        super(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     * Constructs a ToDo instance with the specified task description and done status.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"     * @param task Task description","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"     * @param isDone True if the task is marked as done, false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    public ToDo(String task, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"        super(task, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"     * Returns a formatted string representation of the to-do task.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"     * @return Formatted string representation of the to-do task","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    public String printTask() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        return \"[T]\" + super.printTask();","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"     * Returns a string representation of the to-do task for storage purposes.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"     * Format: \"T | {marked} | {task}\"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"     * @return String representation of the to-do task for storage","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        int marked \u003d (this.isDone) ? 1 : 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"        return \"T | \" + marked + \" | \" + this.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":49}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"         style\u003d\"-fx-background-color: #b49577\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"                   style\u003d\"-fx-background-radius: 7.5;-fx-background-color: #e0cab8;-fx-font-family: Verdana; -fx-font-size: 12px\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"                    \u003cInsets bottom\u003d\"3.0\" left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"3.0\"/\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"CJerrong":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"            fx:controller\u003d\"haro.MainWindow\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-border-radius: 10;\" text\u003d\"\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"                    AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"45.0\" AnchorPane.topAnchor\u003d\"1.0\"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"                    fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #b49577;\"","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"                      VBox.vgrow\u003d\"ALWAYS\" AnchorPane.rightAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"CJerrong":24}},{"path":"src/test/java/haro/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.command.ListCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.command.MarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.exception.InvalidArgsException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import haro.exception.MissingDuedateException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"    public void parser_listInput_listCommand() throws Exception {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"        assertEquals(new ListCommand(), Parser.parseCommand(\"list\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    public void parser_markInput_markCommand() throws Exception {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"        assertEquals(new MarkCommand(1), Parser.parseCommand(\"mark 2\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    public void parser_markNonNumericalIndex_invalidArgsExceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"            Parser.parseCommand(\"mark adam\");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"        } catch (InvalidArgsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"            assertEquals(\"Please input a number for the task you want to mark!\\n\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"            // the test shouldn\u0027t reach here as other exceptions should not be thrown","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"            fail();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    public void parser_addDeadlineMissingBy_missingDueDateExceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"            Parser.parseCommand(\"deadline read book today\");","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        } catch (MissingDuedateException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"            assertEquals(\"Please specify a due date using \u0027/by\u0027!\\n\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CJerrong":47}},{"path":"src/test/java/haro/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package haro;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import haro.exception.InvalidArgsException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import haro.task.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import haro.task.ToDo;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import haro.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    public void init() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"        tasks.add(new Deadline(\"test2\", \"today\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    public void taskList_markNegativeIndex_invalidArgsExceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"            TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"            taskList.markTask(-5);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        } catch (InvalidArgsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"            assertEquals(\"Please input a positive task number!\\n\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    public void taskList_deleteTaskIndexMoreThanSize_invalidArgsExceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"            TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"            taskList.deleteTask(5);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        } catch (InvalidArgsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"            assertEquals(\"Sorry that item does not exist in your list!\\n\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CJerrong":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"deadline do homework /by Thursday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"event project meeting /from 3pm /to 5pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"unmark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"bleh","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CJerrong":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"javac  -cp ..\\src\\main\\java\\haro -Xlint:none -d ..\\bin ..\\src\\main\\java\\haro\\*.java","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"java -classpath ..\\bin haro.haro.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CJerrong":2,"-":19}}]
