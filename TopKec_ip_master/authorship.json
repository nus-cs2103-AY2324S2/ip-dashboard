[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"    mainClass.set(\"Steven\")","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"TopKec"},"content":"    archiveBaseName \u003d \"steven\"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"TopKec"},"content":"    archiveFileName \u003d \"steven.jar\"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"TopKec"},"content":"run {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"TopKec"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"TopKec":12,"-":40}},{"path":"src/main/java/Steven.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"import mainFiles.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"import mainFiles.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"import mainFiles.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"import mainFiles.UserInput;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":" * Main code for running Steven","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"public class Steven {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"    private static final String line \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"    private static final String bootMsg \u003d (\"This is Steven!\\nHow can I advise?\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"     * Constructor class for Steven","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"    public Steven() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"        this.tasks \u003d new TaskList(storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"            new File(\"./data\").mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"            File newFile \u003d new File(\"./data/Steven.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"            if (!newFile.createNewFile()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"                tasks.readFile(newFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"Whoops, looks like something went wrong, it really shouldn\u0027t!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"        System.out.print(line + bootMsg + line);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TopKec"},"content":"        System.out.println(\"Steven\u0027s advice: Don\u0027t know what commands I understand? Use \\\"help\\\"!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TopKec"},"content":"        System.out.print(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"TopKec"},"content":"     * Driver code for Steven. It will run the entire program","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"TopKec"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TopKec"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"TopKec"},"content":"        while (!exit) {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"TopKec"},"content":"            Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"TopKec"},"content":"            while (input.hasNextLine()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"TopKec"},"content":"                UserInput command \u003d new UserInput(input.nextLine());","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"TopKec"},"content":"                exit \u003d new Parser(command, this.tasks).processInput();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TopKec"},"content":"                if (exit) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"TopKec"},"content":"                    System.out.print(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"TopKec"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"TopKec"},"content":"        System.out.println(\"I\u0027ll see you soon then!\\n\" + line);","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"TopKec"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TopKec"},"content":"        new Steven().run();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":62}},{"path":"src/main/java/exceptions/EmptyFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":" * Exception class for Steven","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":" * Used for when a field is left empty for parameters.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"public class EmptyFieldException extends Exception{","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":8}},{"path":"src/main/java/exceptions/ExcessiveArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":" * Exception class for Steven","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":" * Used for when there are excessive arguments for a given command","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"public class ExcessiveArgException extends Exception{","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TopKec":8}},{"path":"src/main/java/exceptions/IllogicalDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":" * Exception class for Steven","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":" * Used for when the setting of date and time make no logical sense.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":" * e.g. if the start date occurs later than the end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"public class IllogicalDateException extends Exception{","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TopKec":9}},{"path":"src/main/java/exceptions/IncompatibleMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":" * Exception class for Steven","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":" * Used for when a previously marked task is marked again, or when an unmarked task is unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"public class IncompatibleMarkException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TopKec":8}},{"path":"src/main/java/exceptions/InsufficientArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":" * Exception class for Steven","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":" * Used for when insufficient arguments are given for a given command","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"public class InsufficientArgException extends Exception{","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TopKec":8}},{"path":"src/main/java/mainFiles/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package mainFiles;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"import exceptions.ExcessiveArgException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"import exceptions.IllogicalDateException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"import exceptions.IncompatibleMarkException;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"import exceptions.InsufficientArgException;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":" * Parser class for Steven","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":" * Mainly used to understand the input given by the user and interpreting what the user wants","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"    private static final String line \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"    private static final String corrupted \u003d \"Oh dear, looks like the file used to handle the data \"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"            + \"I\u0027m supposed to store is corrupted...\"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"            + \"\\nSteven\u0027s Advice: You may need to re-create the file!\";","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"    private static final String formatError \u003d \"My, it would appear as though you didn\u0027t\"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"            + \"format your instruction properly!\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"    private static final String dateErr \u003d \"Ah, this one might be slightly complicated - \"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"            + \"I need your date in the format of \\\"yyyy-mm-dd\\\", \"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"            + \"and I\u0027m quite strict with this, unfortunately.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"            + \"\\nSteven\u0027s advice: Follow the format, append your days/months with zero as necessary! \"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"            + \"For example, \\\"03\\\" is accepted for the month of March, but not \\\"3\\\"!\";","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"    private final UserInput userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"     * Constructor for the Parser class","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"     * @param userInput The input of the user, broken down into arguments","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"TopKec"},"content":"     * @param taskList The list of tasks currently","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"TopKec"},"content":"    public Parser(UserInput userInput, TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"TopKec"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TopKec"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"TopKec"},"content":"     * Processes a given input and carries out the appropriate action","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"TopKec"},"content":"     * @return True, if the program exits (\"bye\"). False otherwise","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"TopKec"},"content":"    public boolean processInput() {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TopKec"},"content":"        switch (userInput.getInputName()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TopKec"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"This is your list so far:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TopKec"},"content":"            taskList.printList();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TopKec"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TopKec"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TopKec"},"content":"                if (userInput.arg1Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TopKec"},"content":"                    throw new InsufficientArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TopKec"},"content":"                if (!userInput.arg2Empty() || !userInput.arg3Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TopKec"},"content":"                    throw new ExcessiveArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TopKec"},"content":"                int index \u003d Integer.parseInt(userInput.getArg1()) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"TopKec"},"content":"                taskList.markList(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"I see. In that case, the following task will be unmarked:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TopKec"},"content":"                System.out.println(taskList.get(index).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TopKec"},"content":"            } catch (InsufficientArgException | ExcessiveArgException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TopKec"},"content":"                System.out.println(formatError + \"Steven\u0027s advice: The format of \\\"mark\\\" is as follows:\"","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"TopKec"},"content":"                        + \"\\nmark (x) - x is an number corresponding with the index of an item in the list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"TopKec"},"content":"            } catch (NumberFormatException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"Hmm... Seems like you want me to mark, something, but you didn\u0027t provide a valid \"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"TopKec"},"content":"                        + \"number for me to work off.\\nSteven\u0027s Advice: Use a number instead.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"TopKec"},"content":"            } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"Ah, a pity... Seems like you don\u0027t have that many tasks.\\nSteven\u0027s advice: \"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"TopKec"},"content":"                        + \"Use a number which corresponds to a task number. If you need to know what number corresponds\"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"TopKec"},"content":"                        + \" to what task, use \\\"list\\\".\");","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"TopKec"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"TopKec"},"content":"                System.out.println(corrupted);","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"TopKec"},"content":"            } catch (IncompatibleMarkException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"Ah, hold on. Seems like this one\u0027s still incomplete. I can\u0027t unmark this.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"TopKec"},"content":"                        + \"\\nSteven\u0027s advice: You might have wanted to use\\\"mark\\\" instead!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"TopKec"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"TopKec"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"TopKec"},"content":"                if (userInput.arg1Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"TopKec"},"content":"                    throw new InsufficientArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"TopKec"},"content":"                if (!userInput.arg2Empty() || !userInput.arg3Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"TopKec"},"content":"                    throw new ExcessiveArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"TopKec"},"content":"                int index \u003d Integer.parseInt(userInput.getArg1()) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"TopKec"},"content":"                taskList.unmarkList(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"As you wish, this task will be marked:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"TopKec"},"content":"                System.out.println(taskList.get(index).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"TopKec"},"content":"            } catch (InsufficientArgException | ExcessiveArgException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"TopKec"},"content":"                System.out.println(formatError + \"Steven\u0027s advice: The format of \\\"unmark\\\" is as follows:\"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"TopKec"},"content":"                        + \"\\nunmark (x) - x is an number corresponding with the index of an item in the list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"TopKec"},"content":"            } catch (NumberFormatException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"Hmm... Seems like you want me to unmark something, but you didn\u0027t provide a \"","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"TopKec"},"content":"                        + \"valid number for me to work off.\\nSteven\u0027s Advice: Use a number instead.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"TopKec"},"content":"            } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"Ah, a pity... Seems like you don\u0027t have that many tasks.\\nSteven\u0027s advice: \"","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"TopKec"},"content":"                        + \"Use a number which corresponds to a task number. If you need to know what number \"","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"TopKec"},"content":"                        + \"corresponds to what task, use \\\"list\\\".\");","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"TopKec"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"TopKec"},"content":"                System.out.println(corrupted);","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"TopKec"},"content":"            } catch (IncompatibleMarkException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"Wait a moment, this one\u0027s already complete! I can\u0027t mark it as such again!.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"TopKec"},"content":"                        + \"\\nSteven\u0027s advice: You might have wanted to use\\\"unmark\\\" instead!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"TopKec"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"TopKec"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"TopKec"},"content":"                if (userInput.arg1Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"TopKec"},"content":"                    throw new InsufficientArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"TopKec"},"content":"                if (!userInput.arg2Empty() || !userInput.arg3Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"TopKec"},"content":"                    throw new ExcessiveArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"TopKec"},"content":"                String name \u003d userInput.getArg1();","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"TopKec"},"content":"                taskList.addToList(new Todo(name));","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"TopKec"},"content":"                System.out.print(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"I see. I shall add the following to the list of tasks:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"TopKec"},"content":"                System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"TopKec"},"content":"                System.out.printf(\"Do bear in mind that you now have %d tasks in the list.%n\", taskList.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"TopKec"},"content":"            } catch (InsufficientArgException | ExcessiveArgException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"TopKec"},"content":"                System.out.println(formatError + \"Steven\u0027s advice: The format of \\\"Todo\\\" is as follows:\\nTodo (item) \"","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"TopKec"},"content":"                        + \"- item is the name of an item that you want to add to the list as a todo.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"TopKec"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"TopKec"},"content":"                System.out.println(corrupted);","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"TopKec"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"TopKec"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"TopKec"},"content":"                if (userInput.arg1Empty() || userInput.arg2Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"TopKec"},"content":"                    throw new InsufficientArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"TopKec"},"content":"                if (!userInput.arg3Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"TopKec"},"content":"                    throw new ExcessiveArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"TopKec"},"content":"                LocalDate due \u003d LocalDate.parse(userInput.getArg2());","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"TopKec"},"content":"                taskList.addToList(new Deadline(userInput.getArg1(), due));","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"TopKec"},"content":"                System.out.print(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"I see. I shall add the following to the list of tasks:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"TopKec"},"content":"                System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"TopKec"},"content":"                System.out.printf(\"Do bear in mind that you now have %d tasks in the list.%n\", taskList.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"TopKec"},"content":"            } catch (InsufficientArgException | ExcessiveArgException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"TopKec"},"content":"                System.out.println(formatError + \"Steven\u0027s advice: The format of \\\"Deadline\\\" is as follows:\"","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"TopKec"},"content":"                        + \"\\nDeadline (item) /by (date) - item is the name of an item that you want to add to the \"","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"TopKec"},"content":"                        + \"list as a deadline. date must be a date.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"TopKec"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"TopKec"},"content":"                System.out.println(corrupted);","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"TopKec"},"content":"            } catch (DateTimeParseException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"TopKec"},"content":"                System.out.println(dateErr);","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"TopKec"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"TopKec"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"TopKec"},"content":"                if (userInput.arg1Empty() || userInput.arg2Empty() || userInput.arg3Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"TopKec"},"content":"                    throw new InsufficientArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"TopKec"},"content":"                LocalDate start \u003d LocalDate.parse((userInput.getArg2()));","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"TopKec"},"content":"                LocalDate end \u003d LocalDate.parse(userInput.getArg3());","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"TopKec"},"content":"                if (end.isBefore(start)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"TopKec"},"content":"                    throw new IllogicalDateException();","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"TopKec"},"content":"                taskList.addToList(new Event(userInput.getArg1(), start, end));","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"TopKec"},"content":"                System.out.print(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"I see. I shall add the following to the list of tasks:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"TopKec"},"content":"                System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"TopKec"},"content":"                System.out.printf(\"Do bear in mind that you now have %d tasks in the list.%n\", taskList.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"TopKec"},"content":"            } catch (InsufficientArgException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"TopKec"},"content":"                System.out.println(formatError + \"Steven\u0027s advice: The format of \\\"Event\\\" is as follows:\\nDeadline \"","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"TopKec"},"content":"                        + \"(item) /from (date1) /to (date2) - item is the name of an item that you want to add to the \"","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"TopKec"},"content":"                        + \"list as a deadline. date1 amd date2 must be a dates.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"TopKec"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"TopKec"},"content":"                System.out.println(corrupted);","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"TopKec"},"content":"            } catch (DateTimeParseException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"TopKec"},"content":"                System.out.println(dateErr);","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"TopKec"},"content":"            } catch (IllogicalDateException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"Now hold on, this doesn\u0027t make sense! How can you have an event start earlier \"","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"TopKec"},"content":"                        + \"than it ends?\\nSteven\u0027s advice: Make sure your first date is before the second!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"TopKec"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"TopKec"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"TopKec"},"content":"                if (userInput.arg1Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"TopKec"},"content":"                    throw new InsufficientArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"TopKec"},"content":"                if (!userInput.arg2Empty() || !userInput.arg3Empty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"TopKec"},"content":"                    throw new ExcessiveArgException();","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"TopKec"},"content":"                int index \u003d Integer.parseInt(userInput.getArg1());","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"TopKec"},"content":"                Task removedItem \u003d taskList.get(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"TopKec"},"content":"                taskList.removeFromList(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"TopKec"},"content":"                System.out.println(line + \"Very well, the following item has been removed from the\"","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"TopKec"},"content":"                        + \"list:\\n\" + removedItem.toString() + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"For the sake of completeness, this is the current list, do take note if any of \"","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"TopKec"},"content":"                        + \"your items have been moved around in order.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"TopKec"},"content":"                taskList.printList();","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"TopKec"},"content":"            } catch (InsufficientArgException | ExcessiveArgException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"TopKec"},"content":"                System.out.println(formatError + \"Steven\u0027s advice: The format of \\\"Delete\\\" is as follows:\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"TopKec"},"content":"                        + \"delete (x) - x is an number corresponding with the index of an item in the list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"TopKec"},"content":"            } catch (NumberFormatException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"Oh, I can\u0027t  delete that - I need a number of an item in the list to delete it.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"TopKec"},"content":"                        + \"\\nSteven\u0027s Advice: Use a number instead.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"TopKec"},"content":"            } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"TopKec"},"content":"                System.out.println(\"Apologies, you don\u0027t have a task of this number, so I can\u0027t delete it.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"TopKec"},"content":"                        + \"\\nSteven\u0027s advice: Use a number which corresponds to a task number. If you need to know\"","lastModifiedDate":"2024-02-02"},{"lineNumber":210,"author":{"gitId":"TopKec"},"content":"                        + \"what number corresponds to what task, use \\\"list\\\".\");","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"TopKec"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":212,"author":{"gitId":"TopKec"},"content":"                System.out.println(corrupted);","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":215,"author":{"gitId":"TopKec"},"content":"        case \"find\":","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"TopKec"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"TopKec"},"content":"                if (userInput.arg1Empty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":218,"author":{"gitId":"TopKec"},"content":"                    throw new InsufficientArgException();","lastModifiedDate":"2024-02-02"},{"lineNumber":219,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":220,"author":{"gitId":"TopKec"},"content":"                if (!userInput.arg2Empty() || !userInput.arg3Empty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"TopKec"},"content":"                    throw new ExcessiveArgException();","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"TopKec"},"content":"                String matchingList \u003d taskList.findTasks(userInput.getArg1());","lastModifiedDate":"2024-02-02"},{"lineNumber":224,"author":{"gitId":"TopKec"},"content":"                System.out.println(String.format(line + \"Ah, so you\u0027re looking for tasks with the word %s? Sure! \"","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"TopKec"},"content":"                        + \"here they are!\", userInput.getArg1()));","lastModifiedDate":"2024-02-02"},{"lineNumber":226,"author":{"gitId":"TopKec"},"content":"                System.out.println(matchingList);","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"TopKec"},"content":"            } catch (InsufficientArgException | ExcessiveArgException error) {","lastModifiedDate":"2024-02-02"},{"lineNumber":228,"author":{"gitId":"TopKec"},"content":"                System.out.println(formatError + \"Steven\u0027s advice: The format of \\\"find\\\" is as follows:\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":229,"author":{"gitId":"TopKec"},"content":"                        + \"find (item) - item is the name of the task, or part of the task\");","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":232,"author":{"gitId":"TopKec"},"content":"        case \"help\":","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"The following are UserInputs that I recgonise, and their respective formats:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":234,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"bye - terminates the program\");","lastModifiedDate":"2024-02-01"},{"lineNumber":235,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"list - provides a list of events that you have added prior\");","lastModifiedDate":"2024-02-01"},{"lineNumber":236,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"mark (x) - marks the xth item on the list as complete. Note that an item marked\"","lastModifiedDate":"2024-02-02"},{"lineNumber":237,"author":{"gitId":"TopKec"},"content":"                    + \"complete cannot be marked complete again.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":238,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"unmark (x) - marks the xth item on the list as incomplete. Note than an item marked \"","lastModifiedDate":"2024-02-02"},{"lineNumber":239,"author":{"gitId":"TopKec"},"content":"                    + \"incomplete cannot be marked incomplete again.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":240,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"todo (item) - adds a todo item to the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":241,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"deadline (item) /by (date1) - adds a deadline item to the list which is due on \"","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"TopKec"},"content":"                    + \"date1. The format for both dates must be \\\"yyyy-mm-dddd\\\".\");","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"event (item) /from (date1) /to (date2) - adds an event item to the list which begins \"","lastModifiedDate":"2024-02-02"},{"lineNumber":244,"author":{"gitId":"TopKec"},"content":"                    + \"on date1 and ends on date2. The format for both dates must be \\\"yyyy-mm-dddd\\\".\");","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"delete (x) - delete the xth item from the list. Do note that this may affect the \"","lastModifiedDate":"2024-02-02"},{"lineNumber":246,"author":{"gitId":"TopKec"},"content":"                    + \"positioning of some of the items.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":247,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"find (item) - finds any items in the list and prints them out, giving \"","lastModifiedDate":"2024-02-02"},{"lineNumber":248,"author":{"gitId":"TopKec"},"content":"                    + \"their indexes.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":249,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":250,"author":{"gitId":"TopKec"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":251,"author":{"gitId":"TopKec"},"content":"            return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":252,"author":{"gitId":"TopKec"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":253,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"Hm, this doesn\u0027t seem like something can do for you. Try something else?\"","lastModifiedDate":"2024-02-02"},{"lineNumber":254,"author":{"gitId":"TopKec"},"content":"                    + \"\\nSteven\u0027s advice: try typing \\\"help\\\" to see what user inputs are available.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":255,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":256,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":257,"author":{"gitId":"TopKec"},"content":"        System.out.print(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":258,"author":{"gitId":"TopKec"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":259,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":260,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TopKec":260}},{"path":"src/main/java/mainFiles/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package mainFiles;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":" * Class used to read and update files from the hard disk","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"    public Storage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"     * Reads the file that is specified in newFile and stores it in the taskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"     * @param newFile File to be read","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"     * @param taskList ArrayList that contains all the tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"     * @throws FileNotFoundException If the specified file does not exist","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"    public void readFile(File newFile, ArrayList\u003cTask\u003e taskList) throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"        Scanner s \u003d new Scanner(newFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"            String readLine \u003d s.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"            String eventType \u003d readLine.split(\" \\\\| \")[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"            boolean cleared \u003d readLine.split(\" \\\\| \")[1].equals(\"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"            String description \u003d readLine.split(\" \\\\| \", 3)[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"            Task t;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TopKec"},"content":"            switch (eventType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TopKec"},"content":"            case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TopKec"},"content":"                t \u003d new Todo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TopKec"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TopKec"},"content":"            case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TopKec"},"content":"                t \u003d new Deadline(description.split(\" \\\\| \")[0], LocalDate.parse(description.split(\" \\\\| \")[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TopKec"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TopKec"},"content":"            case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TopKec"},"content":"                t \u003d new Event(description.split(\" \\\\| \")[0], LocalDate.parse(description.split(\" \\\\| \")[1]),","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"TopKec"},"content":"                        LocalDate.parse(description.split(\" \\\\| \")[2]));","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"TopKec"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TopKec"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TopKec"},"content":"                t \u003d new Task(\"errorTask\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TopKec"},"content":"            if (cleared) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TopKec"},"content":"                t.toggleCompletion();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TopKec"},"content":"            taskList.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"TopKec"},"content":"     * Refreshes the file in ./data/Steven.txt such that it is in line with that of the ArrayList/","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"TopKec"},"content":"     * @param list The ArrayList that stores the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"TopKec"},"content":"     * @throws IOException If the ./data/Steven.txt cannot be accessed.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"TopKec"},"content":"    public void refreshFile(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TopKec"},"content":"        FileWriter fw \u003d new FileWriter(\"./data/Steven.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TopKec"},"content":"        for (Task t : list) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TopKec"},"content":"            String description \u003d t.storeFormat() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TopKec"},"content":"            fw.write(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"TopKec"},"content":"        fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TopKec":71}},{"path":"src/main/java/mainFiles/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package mainFiles;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"import exceptions.IncompatibleMarkException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":" * Class which holds on to the list of tasks used in Steven","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"     * Constructor class for TaskList","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"     * @param storage Class which assists in reading and writing to the hard disk.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"    public void readFile(File newFile) throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"        storage.readFile(newFile, this.taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"     * Adds the specified task to the list","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"     * @param t Task to be added","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"     * @throws IOException If the file used for refreshing the list cannot be found","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"    public void addToList(Task t) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TopKec"},"content":"        taskList.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TopKec"},"content":"        storage.refreshFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"TopKec"},"content":"     * Removes the index of the specified task to the list","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"TopKec"},"content":"     * @param index Index of task to be removed","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"TopKec"},"content":"     * @throws IOException If the file used for refreshing the list cannot be found","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"TopKec"},"content":"    public void removeFromList(int index) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TopKec"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TopKec"},"content":"        storage.refreshFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"TopKec"},"content":"     * Prints the current list","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"TopKec"},"content":"     * It will add a counter to the list such that each task is enumerated.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"TopKec"},"content":"    public void printList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TopKec"},"content":"        int counter \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TopKec"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TopKec"},"content":"            System.out.printf(\"%d. %s%n\", counter, t.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TopKec"},"content":"            counter++;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"TopKec"},"content":"     * Marks an item with a particular index.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"TopKec"},"content":"     * @param index Index of item to be marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"TopKec"},"content":"     * @throws IncompatibleMarkException If the item to be marked is already marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"TopKec"},"content":"     * @throws IOException If the file used for refreshing the list cannot be found.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"TopKec"},"content":"    public void markList(int index) throws IncompatibleMarkException, IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TopKec"},"content":"        if (taskList.get(index).getCompletionStatus()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"TopKec"},"content":"            taskList.get(index).toggleCompletion();","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"TopKec"},"content":"            storage.refreshFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"TopKec"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"TopKec"},"content":"        throw new IncompatibleMarkException();","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"TopKec"},"content":"     * Unmarks an item with a particular index.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"TopKec"},"content":"     * @param index Index of item to be unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"TopKec"},"content":"     * @throws IncompatibleMarkException If the item to be marked is already unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"TopKec"},"content":"     * @throws IOException If the file used for refreshing the list cannot be found.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"TopKec"},"content":"    public void unmarkList(int index) throws IncompatibleMarkException, IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"TopKec"},"content":"        if (!taskList.get(index).getCompletionStatus()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"TopKec"},"content":"            taskList.get(index).toggleCompletion();","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"TopKec"},"content":"            storage.refreshFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"TopKec"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"TopKec"},"content":"        throw new IncompatibleMarkException();","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"TopKec"},"content":"    public int size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"TopKec"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"TopKec"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"TopKec"},"content":"        return taskList.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"TopKec"},"content":"     * Finds any task with a matching name (or part of a matching name) to item","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"TopKec"},"content":"     * @param item Item to match","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"TopKec"},"content":"     * @return A string containing the items that are matched","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"TopKec"},"content":"    public String findTasks(String item) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"TopKec"},"content":"        String retString \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"TopKec"},"content":"        int counter \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"TopKec"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"TopKec"},"content":"            if (t.getName().contains(item)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"TopKec"},"content":"                retString +\u003d String.format(\"%d. %s\\n\", counter, t.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"TopKec"},"content":"            counter++;","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"TopKec"},"content":"        return retString;","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TopKec":112}},{"path":"src/main/java/mainFiles/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package mainFiles;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":" * Class for receiving user input and storing it as separate arguments.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"public class UserInput {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"    private final String name;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"    private final String arg1;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"    private final String arg2;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"    private final String arg3;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"     * Constructor class for UserInput.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"     * It will separate the user\u0027s input into a name and 3 arguments.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"     * The name will be the first word, separated by whitespace","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"     * the other 3 parameters will be separated by the terms \"/from\", \"/by\", and \"/to\".","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"     * If any of the 3 parameters are left blank, then it will be treated as null.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"     * @param input String input of the user","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"    public UserInput(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"        String[] readInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"        this.name \u003d readInput[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"        if (readInput.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"            this.arg1 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"            this.arg2 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"            this.arg3 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"        String[] arguments \u003d readInput[1].split(\" /from | /by | /to \", 3);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"        switch (arguments.length) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"        case 1:","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"            this.arg1 \u003d arguments[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"            this.arg2 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"            this.arg3 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TopKec"},"content":"        case 2:","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TopKec"},"content":"            this.arg1 \u003d arguments[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TopKec"},"content":"            this.arg2 \u003d arguments[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TopKec"},"content":"            this.arg3 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TopKec"},"content":"        case 3:","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TopKec"},"content":"            this.arg1 \u003d arguments[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TopKec"},"content":"            this.arg2 \u003d arguments[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TopKec"},"content":"            this.arg3 \u003d arguments[2].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TopKec"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TopKec"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TopKec"},"content":"            this.arg1 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TopKec"},"content":"            this.arg2 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TopKec"},"content":"            this.arg3 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TopKec"},"content":"    boolean arg1Empty() {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TopKec"},"content":"        return arg1 \u003d\u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TopKec"},"content":"    boolean arg2Empty() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TopKec"},"content":"        return arg2 \u003d\u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TopKec"},"content":"    boolean arg3Empty() {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"TopKec"},"content":"        return arg3 \u003d\u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TopKec"},"content":"    public String getInputName() {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TopKec"},"content":"        return this.name;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"TopKec"},"content":"    public String getArg1() {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"TopKec"},"content":"        return this.arg1;","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"TopKec"},"content":"    public String getArg2() {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"TopKec"},"content":"        return this.arg2;","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"TopKec"},"content":"    public String getArg3() {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"TopKec"},"content":"        return this.arg3;","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TopKec":81}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":" * For the creation of a Deadline class","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"    protected LocalDate due;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"     * Constructor class for a Deadline class","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"     * @param due Date when the deadline is due","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"    public Deadline(String name, LocalDate due) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"        this.due \u003d due;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"    protected String taskTypeDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"        return \"[D]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s%s %s (by: %s)\", this.taskTypeDisplay(), this.completionDisplay(), this.name,","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"                this.due.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"    public String storeFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"        String completeFormat \u003d complete ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s | %s | %s | %s\", \"D\", completeFormat, name, due.format(DateTimeFormatter.ISO_DATE));","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":36}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":" * For the creation of an Event class","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"    protected LocalDate start;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"    protected LocalDate end;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"     * Constructor for the Event class","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"     * @param start Starting time of the event","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"     * @param end Ending time of the event","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"    public Event(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"    protected String taskTypeDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"        return \"[E]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s%s %s (from: %s to: %s)\", this.taskTypeDisplay(), this.completionDisplay(), this.name,","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"                this.start.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")),","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"                this.end.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"    public String storeFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TopKec"},"content":"        String completeFormat \u003d complete ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s | %s | %s | %s | %s\", \"D\", completeFormat, name,","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"TopKec"},"content":"                start.format(DateTimeFormatter.ISO_DATE), end.format(DateTimeFormatter.ISO_DATE));","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":41}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":" * Generic Task class used as a parent for other tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"    protected final String name;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"    protected boolean complete;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"     * Constructor for a Task","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"    public Task(String name) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"        this.complete \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"    public String getName() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"        return this.name;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"    public boolean getCompletionStatus() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"        return this.complete;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"     * Toggles the completion status of a task","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"     * If it is marked, then it will become unmarked","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"     * Similarly, if it is unmarked, it will become marked","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"    public void toggleCompletion() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"        if (complete) {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"            complete \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"TopKec"},"content":"        complete \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"TopKec"},"content":"    protected String completionDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"TopKec"},"content":"        if (complete) {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"TopKec"},"content":"            return \"[X]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"TopKec"},"content":"        return \"[ ]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"TopKec"},"content":"    protected String taskTypeDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"TopKec"},"content":"        return \"[this shouldn\u0027t show]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"TopKec"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s%s %s\", this.taskTypeDisplay(), this.completionDisplay(), this.name);","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"TopKec"},"content":"     * Creates a string to be used in the format that is stored in the hard disc","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"TopKec"},"content":"     * @return The string containing the task formatted for the storage format","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"TopKec"},"content":"    public String storeFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TopKec"},"content":"        String completeFormat \u003d complete ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s | %s | %s\", \"Err\", completeFormat, name);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":62}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"package tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":" * For the creation of a Todo class","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"     * Constructor for the Todo class","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"    public Todo (String name) {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"    public String taskTypeDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"        return \"[T]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"    public String storeFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"        String completeFormat \u003d complete ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s | %s | %s\", \"T\", completeFormat, name);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"java -classpath ..\\bin Steven \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TopKec":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"java -classpath ../bin Steven \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TopKec":1,"-":37}}]
