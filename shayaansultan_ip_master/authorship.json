[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shayaansultan":1,"-":41}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    static Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Deadline object.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"     * @param by          The deadline of the task, in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If the deadline is not in the correct format.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"                    \"Invalid date format. Please use dd/MM/yyyy HHmm format. Example: 02/12/2019 1800\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        return \"D | \" + super.toString() + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"     * Creates a new Deadline object from a string.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"     * @param input The string to create the Deadline object from.","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"     * @return A new Deadline object, or null if the Deadline object could not be","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     *         created.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"    public static Deadline fromString(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        String[] split \u003d parser.parseDeadlineFromStorage(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"            Deadline deadline \u003d new Deadline(split[2], split[3]);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"            if (split[1].equals(\"X\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"                deadline.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"            return deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(\"Error creating deadline\");","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"            return null;","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"     * Returns a string representation of the task that can be written to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"     * @return A string representation of the task that can be written to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"        return \"D | \" + super.toString() + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":69}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":" * The Duke class represents a task manager bot.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"            this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"     * The main method that runs the bot.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"        Duke bot \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"        bot.ui.showWelcome();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        String input \u003d bot.ui.readCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        Handler handler \u003d new Handler(bot.taskList);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"                handler.handle(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"                bot.ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"            input \u003d bot.ui.readCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        bot.ui.showGoodbye();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shayaansultan":45,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":" * The DukeException class represents an exception that is thrown when an error","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":" * occurs in the Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new DukeException object.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"     * @param message The error message.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"shayaansultan":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" * The Event class represents a task with a start and end time.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Event object.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"     * @param from        The start time of the task, in the format \"dd/MM/yyyy","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     *                    HHmm\".","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     * @param to          The end time of the task, in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If the start or end time is not in the correct format.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"            this.from \u003d LocalDateTime.parse(from,","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"            this.to \u003d LocalDateTime.parse(to,","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"                    \"Invalid date format. Please use dd/MM/yyyy HHmm format. Example: 02/12/2019 1800\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        return \"E | \" + super.toString() + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\")) + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     * Creates a new Event object from a string.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"     * @param input The string to create the Event object from.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"     * @return A new Event object, or null if the Event object could not be created.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"    public static Event fromString(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        String[] split \u003d input.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"            Event event \u003d new Event(split[2], split[3], split[4]);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"            if (split[1].equals(\"X\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"                event.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"            return event;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(\"Error creating event\");","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"            return null;","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"     * Returns a string representation of the task that can be written to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"     * @return A string representation of the task that can be written to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        return \"E | \" + super.toString() + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")) + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":74}},{"path":"src/main/java/duke/Handler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" * The Handler class is responsible for handling user input and executing the","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":" * corresponding commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"public class Handler {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Handler object.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     * @param taskList The list of tasks to be managed.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    public Handler(TaskList taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    public void handle(String input) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        String command \u003d parser.parseCommand(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        ","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"            handleList();","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"            handleMark(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"            handleUnmark(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"            handleDelete(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"            handleFind(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"            handleAdd(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    private void handleList() {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"        taskList.displayTasks();","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"    private void handleMark(String input) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"        int index \u003d parser.parseIndex(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        taskList.markTaskAsDone(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"    private void handleUnmark(String input) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        int index \u003d parser.parseIndex(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        taskList.unmarkTaskAsDone(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"    private void handleAdd(String input) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"        taskList.addTask(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"    private void handleDelete(String input) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"        int index \u003d parser.parseIndex(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"    private void handleFind(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"        String keyword \u003d parser.parseDescription(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e keywordList \u003d taskList.findTasksFromKeyword(keyword);","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"        ui.printMessage(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"        for (Task task : keywordList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"        ui.printMessage(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"shayaansultan":73}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":" * The Parser class is responsible for parsing user input into commands,","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":" * indices, descriptions, and dates.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"     * Splits the input into two parts.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     * @return An array of two strings.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"    public String[] parse(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"     * Parses the command from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"     * @return The command.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    public String parseCommand(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        return input.split(\" \", 2)[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"     * Parses the index from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"     * @return The index.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    public int parseIndex(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        return Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"     * Parses the description from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"     * @return The description.","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"    public String parseDescription(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"        return input.split(\" \", 2)[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"     * Parses the deadline from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"     * @return An array of two strings: the task description and the deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"    public String[] parseDeadline(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"        // Remove the deadline in the beginning, then split by /by","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"        return input.split(\"deadline \")[1].split(\" /by \");","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"     * Parses the event from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"     * @return An array of three strings: the task description, the start time, and","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"     *         the end time.","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"    public String[] parseEvent(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"        String[] split \u003d input.split(\" /\");","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"        String description \u003d split[0].split(\"event \")[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"        String from \u003d split[1].split(\"from \")[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        String to \u003d split[2].split(\"to \")[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"        return new String[] { description, from, to };","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"     * Parses the deadline from the storage input.","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"     * @param input The storage input.","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"     * @return An array of four strings: the task type, the task status, the task","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"     *         description, and the deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"    public String[] parseDeadlineFromStorage(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"        return input.split(\" \\\\| \", 4);","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shayaansultan":84}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":" * The Storage class is responsible for reading and writing tasks to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    private String filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"     * @param filePath The path of the file to read from and write to.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while creating the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(\"Reading file from \" + filePath + \"...\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"            createFolder();","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"            createFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error creating file\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"    private void createFolder() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"        Path path \u003d Paths.get(filePath).getParent();","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    private void createFile() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"     * @return A list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"                tasks.add(Task.fromString(line));","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"            lines.add(task.toFileString());","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"        Files.write(path, lines);","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shayaansultan":85}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":" * The Task class represents a task with a description and a completion status.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Task object.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     * Marks the task as done and prints a message.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"        ui.printMessage(\"Nice! I\u0027ve marked this task as done: \\n\" + this.toString() + \"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"     * Unmarks the task as done and prints a message.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        ui.printMessage(\"OK, I\u0027ve marked this task as not done yet: \\n\" + this.toString() + \"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        return (isDone ? \"X\" : \" \") + \" | \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     * Creates a Task object from a string.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"     * @param input The string to parse.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"     * @return A new Task object.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"    public static Task fromString(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        Task task;","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        if (input.startsWith(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"            task \u003d ToDo.fromString(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        } else if (input.startsWith(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"            task \u003d Deadline.fromString(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"            task \u003d Event.fromString(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"     * Converts the task to a string for file storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"        return toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"        return description;","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"public class TaskList {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new TaskList object with an empty task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new TaskList object with a given task list and storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"     * @param storage The storage to use.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    public TaskList(List\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new TaskList object with a given storage and loads tasks from","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"     * the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"     * @param storage The storage to use.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while loading tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"    public TaskList(Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"            this.tasks \u003d storage.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error loading tasks\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"     * Adds a task to the list and updates the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"     * @param task The task to add.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"    public void addTask(String task) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"        String command \u003d parser.parseCommand(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"            String description \u003d parser.parseDescription(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"                newTask \u003d new ToDo(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"            String[] deadline \u003d parser.parseDeadline(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"            newTask \u003d new Deadline(deadline[0], deadline[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"            String[] event \u003d parser.parseEvent(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"            newTask \u003d new Event(event[0], event[1], event[2]);","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task: \\n\" + newTask.toString()","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"        updateStorage();","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"shayaansultan"},"content":"    public void displayTasks() {","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"shayaansultan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"shayaansultan"},"content":"        ui.printMessage(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"shayaansultan"},"content":"     * Marks a task as done and updates the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"shayaansultan"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"shayaansultan"},"content":"    public void markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"shayaansultan"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"shayaansultan"},"content":"            updateStorage();","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error updating storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"shayaansultan"},"content":"     * Unmarks a task as done and updates the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"shayaansultan"},"content":"     * @param index The index of the task to unmark as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"shayaansultan"},"content":"    public void unmarkTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"shayaansultan"},"content":"        tasks.get(index - 1).unmarkDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"shayaansultan"},"content":"            updateStorage();","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error updating storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"shayaansultan"},"content":"     * Deletes a task from the list and updates the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"shayaansultan"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"shayaansultan"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"shayaansultan"},"content":"        ui.printMessage(\"Noted. I\u0027ve removed this task: \\n\" + tasks.get(index - 1).toString()","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"shayaansultan"},"content":"                + \"\\nNow you have \" + (tasks.size() - 1) + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"shayaansultan"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"shayaansultan"},"content":"            updateStorage();","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error updating storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"shayaansultan"},"content":"     * Updates the storage with the current list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"shayaansultan"},"content":"    public void updateStorage() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"shayaansultan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(\"Tasks updated in storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error updating storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"shayaansultan"},"content":"    public List\u003cTask\u003e findTasksFromKeyword(String keyword) {","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"shayaansultan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"shayaansultan"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"shayaansultan"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"shayaansultan"},"content":"        return foundTasks;","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":164}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":" * The ToDo class represents a to-do task.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new ToDo object.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        return \"T | \" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     * Creates a ToDo object from a string.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"     * @param input The string to parse.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"     * @return A new ToDo object.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    public static ToDo fromString(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        String[] split \u003d input.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        ToDo todo \u003d new ToDo(split[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        if (split[1].equals(\"X\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"            todo.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        return todo;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":36}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" * The Ui class handles all user interactions.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"        System.out.println(\"Hello! I\u0027m Bot\\nWhat can I do for you? \\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"     * Prints a message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"     * @param message The message to print.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shayaansultan":42}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    public void testParse() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"        String[] expected \u003d { \"todo\", \"Test ToDo\" };","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"        assertArrayEquals(expected, parser.parse(\"todo Test ToDo\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public void testParseCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(\"todo\", parser.parseCommand(\"todo Test ToDo\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    public void testParseIndex() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(1, parser.parseIndex(\"delete 1\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    public void testParseDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(\"Test ToDo\", parser.parseDescription(\"todo Test ToDo\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    public void testParseDeadline() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        String[] expected \u003d { \"Test Deadline\", \"2022-12-31\" };","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        assertArrayEquals(expected, parser.parseDeadline(\"deadline Test Deadline /by 2022-12-31\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    public void testParseEvent() {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        String[] expected \u003d { \"Test Event\", \"2022-12-31\", \"2023-01-01\" };","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        assertArrayEquals(expected, parser.parseEvent(\"event Test Event /from 2022-12-31 /to 2023-01-01\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shayaansultan":43}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"public class ToDoTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    public void testToString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"        ToDo todo \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"        String expected \u003d \"T |   | Test ToDo\";","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    public void testFromString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"        String input \u003d \"T | X | Test ToDo\";","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"        ToDo todo \u003d ToDo.fromString(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        ToDo expected \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"        expected.markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(expected.toString(), todo.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shayaansultan":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":4}}]
