[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":" * Commands are a family of classes that represent commands with a defining execute method.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"     * Executes actions to complete the command.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"     * @param list a TaskList object containing current tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"     * @param ui a Ui object. Receives instructions on how to update the user interface.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     * @param storage Storage object. For saving changes to memory.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    public abstract void execute(TaskList list, Ui ui, Storage storage) throws DukeException.IllegalParamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    public static class ByeCommand extends Command{","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"        public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"            ui.showBye();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    public static class ListCommand extends Command{","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"            ui.showList(list);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"    public static class MarkCommand extends Command{","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        private int id;","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"        public MarkCommand(int id) {","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"            this.id \u003d id;","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"        public void execute(TaskList list, Ui ui, Storage storage) throws DukeException.IllegalParamException{","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"            try {","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"                Task done \u003d list.getTask(id);","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"                done.setDone();","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"                ui.showMessage(\"Thats sick! Great work, marked as done!\\n\" + done);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"            } catch (DukeException.IllegalParamException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"                throw new DukeException.IllegalParamException(e.getMessage() + \" Unable to mark task!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"    public static class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"        private int id;","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"        public UnmarkCommand(int id) {","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"            this.id \u003d id;","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"        public void execute(TaskList list, Ui ui, Storage storage) throws DukeException.IllegalParamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"            try {","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"                Task notDone \u003d list.getTask(this.id);","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"                notDone.setNotDone();","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"                ui.showMessage(\"Awh why uncheck me :( Its ok, it is what it is!\\n\" + notDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"            } catch (DukeException.IllegalParamException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"                throw new DukeException.IllegalParamException(e.getMessage() + \" Unable to unmark task!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"    public static class DeleteCommand extends Command {","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"        private int id;","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"        public DeleteCommand(int id) {","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"            this.id \u003d id;","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"        public void execute(TaskList list, Ui ui, Storage storage) throws DukeException.IllegalParamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"            list.deleteTask(this.id);","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"            ui.showMessage(\"Looks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"    public static class ToDoCommand extends Command {","lastModifiedDate":"2024-01-21"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"        private String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"        public ToDoCommand(String name) {","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"            this.description \u003d name;","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"        public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"            Task.ToDo newTask \u003d new Task.ToDo(this.description);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"            list.add(newTask);","lastModifiedDate":"2024-01-21"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"            ui.showMessage(\"added new ToDo: \" + newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"            ui.showMessage(\"Looks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"    public static class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-21"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"        private String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"        private LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"        public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-01-21"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"        public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"            Task.Deadline newDeadline \u003d new Task.Deadline(description, by);","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"            list.add(newDeadline);","lastModifiedDate":"2024-01-21"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"            ui.showMessage(\"added new deadline: \" + newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"            ui.showMessage(\"Looks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"    public static class EventCommand extends Command {","lastModifiedDate":"2024-01-21"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"        private String task;","lastModifiedDate":"2024-01-21"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"        private LocalDate start;","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"        private LocalDate end;","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":117,"author":{"gitId":"jerremyng"},"content":"        public EventCommand(String task, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"jerremyng"},"content":"            this.task \u003d task;","lastModifiedDate":"2024-01-21"},{"lineNumber":119,"author":{"gitId":"jerremyng"},"content":"            this.start \u003d start;","lastModifiedDate":"2024-01-21"},{"lineNumber":120,"author":{"gitId":"jerremyng"},"content":"            this.end \u003d end;","lastModifiedDate":"2024-01-21"},{"lineNumber":121,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":122,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":123,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":124,"author":{"gitId":"jerremyng"},"content":"        public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"jerremyng"},"content":"            Task newEvent \u003d new Task.Event(task, start, end);","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"jerremyng"},"content":"            list.add(newEvent);","lastModifiedDate":"2024-01-21"},{"lineNumber":127,"author":{"gitId":"jerremyng"},"content":"            ui.showMessage(\"added new event: \" + newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"jerremyng"},"content":"            ui.showMessage(\"Looks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":130,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":131,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"jerremyng":131}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-19"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"//main class for the bot","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"            this.taskList \u003d this.storage.load();","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"        } catch (DukeException.StorageException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"            this.ui.showError(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"            //todo: ask the user if want to create new datafile, possibly deleting old data","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"                String fullCommand \u003d this.ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"                isExit \u003d c instanceof Command.ByeCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"                ui.showError(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"            } finally {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"                ui.showLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jerremyng":36,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    public static class MissingInfoException extends DukeException {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"        public MissingInfoException(String message) {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"            super(message);","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    public static class IllegalParamException extends DukeException {","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"        public IllegalParamException(String message) {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"            super(message);","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    public static class ParserException extends DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"        public ParserException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"            super(message);","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    public static class StorageException extends DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        public StorageException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"            super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"jerremyng":30}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"//converts the input string from user to a Command object","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"public class Parser {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"     * Parses user input and converts it to a command object.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"     * The command object can then be executed to perform the command.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"     * @param input user input as a string","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"     * @return a Command object","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     * @see Command","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"        String clean \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        String[] tokens \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        if (tokens.length \u003d\u003d 0) {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.ParserException(\"Master, please give me a command!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        } else if (clean.equals(\"bye\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"            return new Command.ByeCommand();","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"        } else if (clean.equals(\"list\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"            return new Command.ListCommand();","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"        String command \u003d tokens[0].toLowerCase();","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"        switch (command) {","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"            return parseMarkCommand(tokens[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"            return parseUnmarkCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"            return parseDeleteCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"            return parseTodoCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"            return parseDeadlineCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"        case \"event\":","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"            return parseEventCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"        default:","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.ParserException(\"I dont understand you!\"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"                    + \" Please be dont scold me and be gentle with me! Try again!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"    private static Command parseMarkCommand(String tokens) throws DukeException.IllegalParamException {","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"            int taskId \u003d Integer.parseInt(tokens.trim());","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"            return new Command.MarkCommand(taskId);","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.IllegalParamException(\"I dont know which task you are trying to mark! Try a number\");","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"    private static Command parseUnmarkCommand(String tokens) throws DukeException.IllegalParamException {","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"            int taskId \u003d Integer.parseInt(tokens.trim());","lastModifiedDate":"2024-01-21"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"            return new Command.UnmarkCommand(taskId);","lastModifiedDate":"2024-01-21"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.IllegalParamException(\"I dont know which task you are trying to unmark! Try a number\");","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"    private static Command parseDeleteCommand(String tokens) throws DukeException.IllegalParamException{","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"            int taskId \u003d Integer.parseInt(tokens.trim());","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"            return new Command.DeleteCommand(taskId);","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.IllegalParamException(\"I dont know which task you are trying to delete! Try a number\");","lastModifiedDate":"2024-01-21"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"    private static Command parseTodoCommand(String tokens) throws DukeException.MissingInfoException {","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"        if (tokens.trim().equals(\"\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.MissingInfoException(\"Bro u gotta describe the task!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"        String taskName \u003d tokens.trim();","lastModifiedDate":"2024-01-21"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"        return new Command.ToDoCommand(taskName);","lastModifiedDate":"2024-01-21"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"    private static Command parseDeadlineCommand(String tokens) throws DukeException.MissingInfoException,","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"                                                                      DukeException.ParserException {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"        String[] parts \u003d tokens.split(\"/by\");","lastModifiedDate":"2024-01-21"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-21"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.ParserException(\"Looks like you are missing \u0027/by\u0027! Use \u0027/by\u0027 to tell me the deadline!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"        String task \u003d parts[0].trim();","lastModifiedDate":"2024-01-21"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"        String deadlineString \u003d parts[1].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"        //check if fields have values","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2024-01-21"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.MissingInfoException(\"You have to tell me the description too! Or I cant remember it!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"        } else if (deadlineString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.MissingInfoException(\"You need a deadline! Or you will never get to it!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"        //parse string","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"            LocalDate deadline \u003d LocalDate.parse(deadlineString, Task.getDateFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"            return new Command.DeadlineCommand(task, deadline);","lastModifiedDate":"2024-01-21"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.ParserException(\"Invalid date/time format for the deadline!\"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"                    + \"Please use a dd MMM yyyy format (e.g. 21 Jan 2000).\");","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"    private static Command parseEventCommand(String tokens) throws DukeException{","lastModifiedDate":"2024-01-21"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"        String[] parts \u003d tokens.split(\"/from|/to\");","lastModifiedDate":"2024-01-21"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-01-21"},{"lineNumber":116,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.ParserException(\"Missing /from or /to! Use those to indicate times!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":118,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":119,"author":{"gitId":"jerremyng"},"content":"        String task \u003d parts[0].trim();","lastModifiedDate":"2024-01-21"},{"lineNumber":120,"author":{"gitId":"jerremyng"},"content":"        String startString \u003d parts[1].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"jerremyng"},"content":"        String endString \u003d parts[2].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":123,"author":{"gitId":"jerremyng"},"content":"        if (tokens.indexOf(\"/from\") \u003e tokens.indexOf(\"/to\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":124,"author":{"gitId":"jerremyng"},"content":"            String temp \u003d startString;","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"jerremyng"},"content":"            startString \u003d endString;","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"jerremyng"},"content":"            endString \u003d temp;","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":128,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":129,"author":{"gitId":"jerremyng"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2024-01-21"},{"lineNumber":130,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.MissingInfoException(\"Tasks needs a name! Or I cant remember it!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":131,"author":{"gitId":"jerremyng"},"content":"        } else if (startString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.MissingInfoException(\"Please tell me when it starts!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":133,"author":{"gitId":"jerremyng"},"content":"        } else if (endString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.MissingInfoException(\"Please tell me when it ends!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":135,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":136,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"jerremyng"},"content":"        //parse string","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"jerremyng"},"content":"            LocalDate startDate \u003d LocalDate.parse(startString, Task.getDateFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"jerremyng"},"content":"            LocalDate endDate \u003d LocalDate.parse(endString, Task.getDateFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"jerremyng"},"content":"            return new Command.EventCommand(task, startDate, endDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"jerremyng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.ParserException(\"Invalid date/time format for the deadline!\"","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"jerremyng"},"content":"                    + \"Please use a dd MMM yyyy format (e.g. 21 Jan 2000).\");","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":149,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"jerremyng":149}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"/** Helper class to manage all storage related methods of duke. */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    private File file;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     * Constructs a Storage object with the data file","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     * Verifies if this file exists, and will create a new file/directory if needed","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"            // Check if the parent directory exists; if not, create it","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"            File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"            if (!parentDir.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"                if (parentDir.mkdirs()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"                    System.out.println(\"Created parent directory at: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"                    throw new RuntimeException(\"Error creating parent directory at: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"            // Check if file exist, if not create","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"                System.out.println(\"Data not found, created new file at: \" + filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"                System.out.println(\"Data found at: \" + filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"            throw new RuntimeException(\"Error creating file: \" + e.getMessage(), e);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"     * Saves contents of taskList to memory","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"     * @param taskList TaskList instance to save","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"     * @see TaskList","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"                fw.write(task.getTokens() + System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"     * Loads taskList from datafile and returns a TaskList object","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"     * @return TaskList object","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"     * @throws DukeException.StorageException","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"     * @see TaskList","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"    public TaskList load() throws DukeException.StorageException{","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"            Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"                Task next_task \u003d parseLineFromStorage(s.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"                taskList.add(next_task);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.StorageException(\"File / Directory does not exist.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"        return taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"    private Task parseLineFromStorage(String tokens) throws DukeException.StorageException {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"            String[] data \u003d tokens.split(\",\");","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"            switch (data[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"                case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"                    return new Task.ToDos(data[1], Boolean.parseBoolean(data[2]));","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"                case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"                    return new Task.Events(data[1], Boolean.parseBoolean(data[2]),","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"                            LocalDate.parse(data[3], Task.getDateFormat()),","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"                            LocalDate.parse(data[4], Task.getDateFormat()));","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"                case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"                    return new Task.Deadlines(data[1], Boolean.parseBoolean(data[2]), LocalDate.parse(data[3], Task.getDateFormat()));","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"                default:","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"                    throw new DukeException.StorageException(\"Data file is corrupted, task type does not exist\");","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException | IllegalArgumentException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.StorageException(\"Data file is corrupted, error parsing data: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jerremyng":106}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"import java.text.DateFormat;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    /** Description of task as a string */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    private String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    /** Boolean Flag of whether the task is done */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     * Constructs task with specified description.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     * @param description Description of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"     * Constructs a task with done flag specified as a string. This method is used for storage activities.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"     * @param description Brief description of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"     * @param isDone String representing boolean value.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"    /** Sets this task as done */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"    public void setDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"    /** Sets this task as not done */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"        String mark \u003d this.isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"        return mark + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"    public static DateTimeFormatter getDateFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"        return Task.DATE_FORMATTER;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"     * Returns a string containing information of task in a clean machine-readable format","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"     * @return string with tokens separated by space","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"    public abstract String getTokens();","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"        public ToDo(String name) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"            super(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"        public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"            super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"        public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"         * @inheritDoc","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"         *","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"         * @return description + isDone + from + to","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"         */","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"        public String getTokens() {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"            return String.join(\",\", \"T\", super.description, String.valueOf(super.isDone));","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"    public static class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"        private LocalDate from;","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"        private LocalDate to;","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"        public Event(String name, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"            super(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"            this.from \u003d from;","lastModifiedDate":"2024-01-21"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"            this.to \u003d to;","lastModifiedDate":"2024-01-21"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"        public Event(String name, boolean isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"            super(name, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"            this.from \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"            this.to \u003d to;","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"        public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + this.from.format(Task.getDateFormat())","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"                    + \" to: \" + this.to.format(Task.getDateFormat()) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"         * @inheritDoc","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"         *","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"         * @return description + isDone + from + to","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"         */","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"jerremyng"},"content":"        public String getTokens() {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"jerremyng"},"content":"            return String.join(\",\", \"E\",","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"jerremyng"},"content":"                    super.description,","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"jerremyng"},"content":"                    String.valueOf(super.isDone),","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"jerremyng"},"content":"                    this.from.format(Task.getDateFormat()),","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"jerremyng"},"content":"                    this.to.format(Task.getDateFormat()));","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":124,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":125,"author":{"gitId":"jerremyng"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"jerremyng"},"content":"        private LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"jerremyng"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"jerremyng"},"content":"         * Contructs new deadlibe object with a description and a due date.","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"jerremyng"},"content":"         *","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"jerremyng"},"content":"         * @param description Brief description of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"jerremyng"},"content":"         * @param by LocalDateTine object","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"jerremyng"},"content":"         */","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"jerremyng"},"content":"        public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"jerremyng"},"content":"            super(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"jerremyng"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-01-21"},{"lineNumber":137,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":138,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":139,"author":{"gitId":"jerremyng"},"content":"        public Deadline(String name, boolean isDone, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"jerremyng"},"content":"            super(name, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"jerremyng"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":145,"author":{"gitId":"jerremyng"},"content":"        public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":146,"author":{"gitId":"jerremyng"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + this.by.format(Task.getDateFormat()) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":148,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"jerremyng"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"jerremyng"},"content":"         * @inheritDoc","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"jerremyng"},"content":"         *","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"jerremyng"},"content":"         * @return description + isDone + from + to","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"jerremyng"},"content":"         */","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"jerremyng"},"content":"        @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"jerremyng"},"content":"        public String getTokens() {","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"jerremyng"},"content":"            return String.join(\",\", \"D\", super.description,","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"jerremyng"},"content":"                    String.valueOf(super.isDone), this.by.format(Task.getDateFormat()));","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":160,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"jerremyng":160}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"import java.util.List;","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"public class TaskList implements Iterable\u003cTask\u003e{","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"        String out \u003d \"Here is the list of things I remember!\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"        for (Task currentItem : this.taskList) {","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"            out +\u003d count + \".\" + currentItem + \"\\n\";","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"            count++;","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"        return out.equals(\"\") ? \"Looks like you have nothing to do! Yay!\\n\" : out;","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        return taskList.iterator();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    public void add(Task taskName) {","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        this.taskList.add(taskName);","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    public Task getTask(int index) throws DukeException.IllegalParamException {","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"            return this.taskList.get(index - 1);","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.IllegalParamException(\"I cant do that! The task does not exist!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"    public void deleteTask(int index) throws DukeException.IllegalParamException {","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"            this.taskList.remove(index - 1);","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"            throw new DukeException.IllegalParamException(\"I cant delete that task! It does not exist!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"     * Returns count of number of tasks in list","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"     * @return int value","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"    public int countTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"jerremyng":54}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":" * Class to deal with interactions with the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":" *","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":" * This class requests input from the user and also show the status of their transaction through messages.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"        System.out.println(\"Hello and welcome! I\u0027m fakegpt\\nWhat can I do for you?:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    public void showBye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        System.out.println(\"Bye bye! Thanks for using me! I will remember the tasks you have to do!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"     * Displays the list to user","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    public void showList(TaskList list) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"        System.out.println(list);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    public void showLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"        System.out.println(\"-----------------------------------------------\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"     * Returns next input from user","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"     * @return a string from user input in CLI","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"     * Prints out a message describing error encountered.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"     * @param e DukeException object","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jerremyng":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"todo dropout","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"deadline have a breakdown /by Sunday","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"mark 3","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"mark 4","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"unmark 3","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"unmark 4","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"delete 3","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"delete 4","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"mark iwenf","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"bye","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"jerremyng":17}}]
