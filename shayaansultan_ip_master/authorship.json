[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"sourceCompatibility \u003d 11 // Added this line to fix the error","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"targetCompatibility \u003d 11 // Added this line to fix the error","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"// Rest of the code","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"    mainClass.set(\"bot.Launcher\")","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"    archiveFileName \u003d \"botFinalv2.jar\"","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"    archiveBaseName \u003d \"bot\"","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shayaansultan":23,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"# Bot User Guide","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"Welcome to Bot, your personal task manager. Bot is designed to help you keep track of your tasks, deadlines, and events. This guide will walk you through all the features you can use.","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"## Features","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"### Add Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"To add a task, use the `todo` command followed by the task description.","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"Example: `todo read book`","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"### Add Deadlines","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"To add a task with a deadline, use the `deadline` command followed by the task description and the deadline date. The deadline should be in the format \u0027dd/MM/yyyy HHmm\u0027.","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"Example: `deadline return book /by 02/12/2019 1800`","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"### Add Events","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"To add an event, use the `event` command followed by the event description, /from followed by the start date-time, /to followed by the end date-time. The date should be in the format \u0027dd/MM/yyyy HHmm\u0027.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"Example: `event student meeting /from 02/12/2019 1800 /to 02/12/2019 2000`","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"### Display Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"To display all tasks in the list, use the `list` command.","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"Example: `list`","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"### Delete Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"To delete a task from the list, use the `delete` command followed by the task number.","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"### Mark Task as Done","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"To mark a task as done, use the `mark` command followed by the task number.","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"Example: `mark 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"### Unmark Task as Done","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"To unmark a task as done, use the `unmark` command followed by the task number.","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"### Find Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"To find tasks that contain a keyword, use the `find` command followed by the keyword.","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"Example: `find book`","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"We hope this guide helps you make the most of Bot. Happy task managing!","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"shayaansultan":41,"-":14}},{"path":"src/main/java/bot/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":" * The Duke class represents a task manager bot.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"public class Bot extends Application {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    protected TaskList taskList; ","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    public Bot(String filePath) {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"            this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    public Bot() {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"            this.storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"            this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     * Runs the bot.","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        Bot bot \u003d new Bot(\"./data/duke.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        bot.ui.showWelcome();","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        String input \u003d bot.ui.readCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"        Handler handler \u003d new Handler(bot.taskList);","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"                handler.handle(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"                bot.ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"            input \u003d bot.ui.readCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"        bot.ui.showGoodbye();","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Bot.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"            stage.setTitle(\"Bot\");","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"            stage.show();","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"shayaansultan"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"shayaansultan"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"shayaansultan"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shayaansultan":87,"-":3}},{"path":"src/main/java/bot/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    static Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Deadline object.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"     * @param by          The deadline of the task, in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If the deadline is not in the correct format.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        assert description !\u003d null : \"Description is null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        assert by !\u003d null : \"Deadline is null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"                    \"Invalid date format. Please use dd/MM/yyyy HHmm format. Example: 02/12/2019 1800\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Invalid format for Deadline.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        return \"D | \" + super.toString() + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     * Creates a new Deadline object from a string.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"     * @param input The string to create the Deadline object from.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"     * @return A new Deadline object, or null if the Deadline object could not be","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"     *         created.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"    public static Deadline fromString(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        assert input !\u003d null : \"Input is null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        String[] split \u003d parser.parseDeadlineFromStorage(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"            Deadline deadline \u003d new Deadline(split[2], split[3]);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"            if (split[1].equals(\"X\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"                deadline.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"            return deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(\"Error creating deadline\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"            return null;","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"     * Returns a string representation of the task that can be written to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"     * @return A string representation of the task that can be written to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"        return \"D | \" + super.toString() + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"    public static String getHelpString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"        return \"Add Deadline: Adds a task with a deadline\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"                + \"  To add a deadline, use the following format\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"                + \"    deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"                + \"  The deadline should be in the format \u0027dd/MM/yyyy HHmm\u0027.\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"                + \"    Example: deadline return book /by 02/12/2019 1800\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":82}},{"path":"src/main/java/bot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":" * the speaker\u0027s face and a label","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     * right.","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"    private void flip() {","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"        db.flip();","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        return db;","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"shayaansultan":63}},{"path":"src/main/java/bot/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":" * The DukeException class represents an exception that is thrown when an error","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":" * occurs in the Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new DukeException object.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"     * @param message The error message.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"shayaansultan":16}},{"path":"src/main/java/bot/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" * The Event class represents a task with a start and end time.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Event object.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"     * @param from        The start time of the task, in the format \"dd/MM/yyyy","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     *                    HHmm\".","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     * @param to          The end time of the task, in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If the start or end time is not in the correct format.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"            this.from \u003d LocalDateTime.parse(from,","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"            this.to \u003d LocalDateTime.parse(to,","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"                    \"Invalid date format. Please use dd/MM/yyyy HHmm format. Example: 02/12/2019 1800\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        return \"E | \" + super.toString() + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\")) + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     * Creates a new Event object from a string.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"     * @param input The string to create the Event object from.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"     * @return A new Event object, or null if the Event object could not be created.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"    public static Event fromString(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        String[] split \u003d input.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"            Event event \u003d new Event(split[2], split[3], split[4]);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"            if (split[1].equals(\"X\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"                event.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"            return event;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(\"Error creating event\");","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"            return null;","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"     * Returns a string representation of the task that can be written to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"     * @return A string representation of the task that can be written to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        return \"E | \" + super.toString() + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")) + \" | \"","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"    public static String getHelpString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"        return \"Add Event: Adds an event to the task list.\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"                + \"  To add an event, use the following format:\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"                + \"    event \u003cdescription\u003e /from \u003cstart date\u003e \u003cstart time\u003e /to \u003cend date\u003e \u003cend time\u003e\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"                + \"  The date and time should be in the format dd/MM/yyyy HHmm.\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"                + \"    Example: event student meeting /from 02/12/2019 1800 /to 02/12/2019 2000\\n\";","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":82}},{"path":"src/main/java/bot/Handler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" * The Handler class is responsible for handling user input and executing the","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":" * corresponding commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"public class Handler {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Handler object.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     * @param taskList The list of tasks to be managed.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public Handler(TaskList taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    public String handle(String input) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"        assert input !\u003d null : \"Input is null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        String command \u003d parser.parseCommand(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"            output \u003d handleList();","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"            output \u003d handleMark(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"            output \u003d handleUnmark(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"            output \u003d handleDelete(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"            output \u003d handleFind(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"help\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"            output \u003d taskList.getHelpString();","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"            output \u003d handleAdd(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"        return output;","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"    private String handleList() {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        return taskList.displayTasks();","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"    private String handleMark(String input) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        int index \u003d parser.parseIndex(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.getSize() : \"Invalid task index\";","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        return taskList.markTaskAsDone(index);","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"    private String handleUnmark(String input) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"        int index \u003d parser.parseIndex(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.getSize() : \"Invalid task index\";","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        return taskList.unmarkTaskAsDone(index);","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"    private String handleAdd(String input) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"        String result \u003d taskList.addTask(input);","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"        assert result !\u003d null : \"Task was not added successfully\";","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"        return result;","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"    private String handleDelete(String input) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"        int index \u003d parser.parseIndex(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        return taskList.deleteTask(index);","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"    private String handleFind(String input) throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"        String keyword \u003d parser.parseDescription(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e keywordList \u003d taskList.findTasksFromKeyword(keyword);","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"        output +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"        for (Task task : keywordList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"            output +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"        return output;","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"shayaansultan":83}},{"path":"src/main/java/bot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"public class Launcher {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"        Application.launch(Bot.class, args);","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"shayaansultan":12}},{"path":"src/main/java/bot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    private Bot duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/human.png\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.png\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"        displayWelcomeMessage();","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    public void setDuke(Bot d) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"        Handler handler \u003d new Handler(duke.taskList);","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"            String response \u003d handler.handle(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"                    DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"                    DialogBox.getDukeDialog(e.getMessage(), dukeImage));","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"        Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.png\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"        DialogBox welcomeDialogBox \u003d DialogBox.getDukeDialog(\"Welcome to the application!\\nI am Bot! I can help you manage your tasks!\", dukeImage);","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        dialogContainer.getChildren().addAll(welcomeDialogBox);","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"shayaansultan":73}},{"path":"src/main/java/bot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":" * The Parser class is responsible for parsing user input into commands,","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":" * indices, descriptions, and dates.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"     * Splits the input into two parts.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     * @return An array of two strings.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"    public String[] parse(String input) throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"        assert input !\u003d null : \"Input is null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Please enter a command.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     * Parses the command from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"     * @return The command.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    public String parseCommand(String input) throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        assert input !\u003d null : \"Input is null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"            return input.split(\" \", 2)[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Invalid Format for Command.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"     * Parses the index from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"     * @return The index.","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"    public int parseIndex(String input) throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"        assert input !\u003d null : \"Input is null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"            if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"                throw new DukeException(\"Please enter an index.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"            assert index \u003e\u003d 0 : \"Invalid index\";","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"            return index;","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Index not parsed or index not an integer.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"     * Parses the description from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"     * @return The description.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"    public String parseDescription(String input) throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"        assert input !\u003d null : \"Input is null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"            return input.split(\" \", 2)[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Invalid Format for Description.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"     * Parses the deadline from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"     * @return An array of two strings: the task description and the deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"    public String[] parseDeadline(String input) throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"            // Remove the deadline in the beginning, then split by /by","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"            return input.split(\"deadline \")[1].split(\" /by \");","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Invalid Format for Deadline.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"shayaansultan"},"content":"     * Parses the event from the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"shayaansultan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"shayaansultan"},"content":"     * @return An array of three strings: the task description, the start time, and","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"shayaansultan"},"content":"     *         the end time.","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"shayaansultan"},"content":"    public String[] parseEvent(String input) throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"shayaansultan"},"content":"            System.out.println(\"input\");","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"shayaansultan"},"content":"            System.out.println(input);","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"shayaansultan"},"content":"            String[] split \u003d input.split(\" /from \");","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"shayaansultan"},"content":"            String beforeFrom \u003d split[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"shayaansultan"},"content":"            String afterFrom \u003d split[1];","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"shayaansultan"},"content":"            String description \u003d beforeFrom.split(\"event \")[1];","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"shayaansultan"},"content":"            String[] split2 \u003d afterFrom.split(\" /to \");","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"shayaansultan"},"content":"            String from \u003d split2[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"shayaansultan"},"content":"            String to \u003d split2[1];","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"shayaansultan"},"content":"            return new String[] { description, from, to };","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Invalid Format for Event.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"shayaansultan"},"content":"     * Parses the deadline from the storage input.","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"shayaansultan"},"content":"     * @param input The storage input.","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"shayaansultan"},"content":"     * @return An array of four strings: the task type, the task status, the task","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"shayaansultan"},"content":"     *         description, and the deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"shayaansultan"},"content":"    public String[] parseDeadlineFromStorage(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"shayaansultan"},"content":"        return input.split(\" \\\\| \", 4);","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shayaansultan":123}},{"path":"src/main/java/bot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":" * The Storage class is responsible for reading and writing tasks to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    private String filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"     * @param filePath The path of the file to read from and write to.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while creating the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        assert filePath !\u003d null : \"File path is null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(\"Reading file from \" + filePath + \"...\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"            createFolder();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"            createFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error creating file\");","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    private void createFolder() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"        Path path \u003d Paths.get(filePath).getParent();","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"        assert Files.exists(path) : \"Folder was not created successfully\";","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"    private void createFile() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        assert Files.exists(path) : \"File was not created successfully\";","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"     * @return A list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"                Task task \u003d Task.fromString(line);","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"                assert task !\u003d null : \"Task was not loaded successfully\";","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"        assert tasks !\u003d null : \"Tasks are null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"            lines.add(task.toFileString());","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"shayaansultan"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"shayaansultan"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"shayaansultan"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"shayaansultan"},"content":"        Files.write(path, lines);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"shayaansultan"},"content":"        assert Files.readAllLines(path).equals(lines) : \"Tasks were not saved successfully\";","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shayaansultan":92}},{"path":"src/main/java/bot/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":" * The Task class represents a task with a description and a completion status.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new Task object.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"     * Marks the task as done and prints a message.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    public String markAsDone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        return (\"Nice! I\u0027ve marked this task as done: \\n\" + this.toString() + \"\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"     * Unmarks the task as done and prints a message.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    public String unmarkDone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"       return (\"OK, I\u0027ve marked this task as not done yet: \\n\" + this.toString() + \"\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        return (isDone ? \"X\" : \" \") + \" | \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"     * Creates a Task object from a string.","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     * @param input The string to parse.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"     * @return A new Task object.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"    public static Task fromString(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"        Task task;","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        if (input.startsWith(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"            task \u003d ToDo.fromString(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        } else if (input.startsWith(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"            task \u003d Deadline.fromString(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"            task \u003d Event.fromString(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"     * Converts the task to a string for file storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"        return toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        return description;","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":72}},{"path":"src/main/java/bot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"public class TaskList {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new TaskList object with an empty task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new TaskList object with a given task list and storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"     * @param storage The storage to use.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    public TaskList(List\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new TaskList object with a given storage and loads tasks from","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"     * the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"     * @param storage The storage to use.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while loading tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"    public TaskList(Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"            this.tasks \u003d storage.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error loading tasks\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"     * Adds a task to the list and updates the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"     * @param task The task to add.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"    public String addTask(String task) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"        String command \u003d parser.parseCommand(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"            String description \u003d parser.parseDescription(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"                newTask \u003d new ToDo(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"            String[] deadline \u003d parser.parseDeadline(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"            newTask \u003d new Deadline(deadline[0], deadline[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"            String[] event \u003d parser.parseEvent(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"            newTask \u003d new Event(event[0], event[1], event[2]);","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"        assert tasks.contains(newTask) : \"New task should be added to the list\";","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"        updateStorage();","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"        return (\"Got it. I\u0027ve added this task: \\n\" + newTask.toString()","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"shayaansultan"},"content":"    public String displayTasks() {","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"shayaansultan"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"shayaansultan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"shayaansultan"},"content":"            output +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"shayaansultan"},"content":"        return output;","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"shayaansultan"},"content":"     * Marks a task as done and updates the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"shayaansultan"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"shayaansultan"},"content":"    public String markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"shayaansultan"},"content":"        assert index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size() : \"Task index out of range\";","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"shayaansultan"},"content":"        String output \u003d tasks.get(index - 1).markAsDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"shayaansultan"},"content":"            updateStorage();","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"shayaansultan"},"content":"            return output;","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error updating storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"shayaansultan"},"content":"     * Unmarks a task as done and updates the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"shayaansultan"},"content":"     * @param index The index of the task to unmark as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"shayaansultan"},"content":"    public String unmarkTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"shayaansultan"},"content":"        assert index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size() : \"Task index out of range\";","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"shayaansultan"},"content":"        String output \u003d tasks.get(index - 1).unmarkDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"shayaansultan"},"content":"            updateStorage();","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"shayaansultan"},"content":"            return output;","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error updating storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"shayaansultan"},"content":"     * Deletes a task from the list and updates the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"shayaansultan"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"shayaansultan"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"shayaansultan"},"content":"        Task removed \u003d tasks.remove(index - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"shayaansultan"},"content":"        assert !tasks.contains(removed) : \"Removed task should not be in the list\";","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"shayaansultan"},"content":"        String output \u003d (\"Noted. I\u0027ve removed this task: \\n\" + removed.toString()","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"shayaansultan"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":139,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"shayaansultan"},"content":"            updateStorage();","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"shayaansultan"},"content":"            return output;","lastModifiedDate":"2024-02-17"},{"lineNumber":142,"author":{"gitId":"shayaansultan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error updating storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"shayaansultan"},"content":"     * Updates the storage with the current list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"shayaansultan"},"content":"     * @throws DukeException If an error occurs while updating the storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"shayaansultan"},"content":"    public void updateStorage() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"shayaansultan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"shayaansultan"},"content":"            ui.printMessage(\"Tasks updated in storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"shayaansultan"},"content":"            throw new DukeException(\"Error updating storage\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"shayaansultan"},"content":"    public List\u003cTask\u003e findTasksFromKeyword(String keyword) {","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"shayaansultan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-05"},{"lineNumber":165,"author":{"gitId":"shayaansultan"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"shayaansultan"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"shayaansultan"},"content":"        return foundTasks;","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"shayaansultan"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"shayaansultan"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"shayaansultan"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"shayaansultan"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-18"},{"lineNumber":179,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":180,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":181,"author":{"gitId":"shayaansultan"},"content":"    public String getHelpString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"shayaansultan"},"content":"        return \"These are all the features you can use: \\n\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"shayaansultan"},"content":"                + ToDo.getHelpString() + \"\\n\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"shayaansultan"},"content":"                + Deadline.getHelpString() + \"\\n\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"shayaansultan"},"content":"                + Event.getHelpString() + \"\\n\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"shayaansultan"},"content":"                + \"Display Tasks: Displays all tasks in the list\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"shayaansultan"},"content":"                + \"  To display tasks, use the following command\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"shayaansultan"},"content":"                + \"    list\\n\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"shayaansultan"},"content":"                + \"Delete Tasks: Deletes a task from the list\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"shayaansultan"},"content":"                + \"  To delete a task, use the following format\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"shayaansultan"},"content":"                + \"    delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"shayaansultan"},"content":"                + \"    Example: delete 1\\n\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"shayaansultan"},"content":"                + \"Mark Task as Done: Marks a task as done\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"shayaansultan"},"content":"                + \"  To mark a task as done, use the following format\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"shayaansultan"},"content":"                + \"    mark \u003ctask number\u003e\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"shayaansultan"},"content":"                + \"    Example: mark 1\\n\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"shayaansultan"},"content":"                + \"Unmark Task as Done: Unmarks a task as done\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"shayaansultan"},"content":"                + \"  To unmark a task as done, use the following format\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"shayaansultan"},"content":"                + \"    unmark \u003ctask number\u003e\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"shayaansultan"},"content":"                + \"    Example: unmark 1\\n\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"shayaansultan"},"content":"                + \"Find Tasks: Finds tasks that contain a keyword\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":202,"author":{"gitId":"shayaansultan"},"content":"                + \"  To find tasks, use the following format\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":203,"author":{"gitId":"shayaansultan"},"content":"                + \"    find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"shayaansultan"},"content":"                + \"    Example: find book\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":206}},{"path":"src/main/java/bot/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":" * The ToDo class represents a to-do task.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a new ToDo object.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        return \"T | \" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     * Creates a ToDo object from a string.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"     * @param input The string to parse.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"     * @return A new ToDo object.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    public static ToDo fromString(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        String[] split \u003d input.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        ToDo todo \u003d new ToDo(split[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        if (split[1].equals(\"X\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"            todo.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        return todo;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    public static String getHelpString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"        return \"Add Todo: Adds a to-do task to the list.\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"                + \"  To add a to-do task, use the following format\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"                + \"    todo \u003cdescription\u003e\";","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":42}},{"path":"src/main/java/bot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" * The Ui class handles all user interactions.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"        System.out.println(\"Hello! I\u0027m Bot\\nWhat can I do for you? \\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"     * Prints a message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"     * @param message The message to print.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shayaansultan":42}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" textOverrun\u003d\"CLIP\"/\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"shayaansultan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bot.MainWindow\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"shayaansultan":19}},{"path":"src/test/java/bot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    public void testParse() throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"        String[] expected \u003d { \"todo\", \"Test ToDo\" };","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"        assertArrayEquals(expected, parser.parse(\"todo Test ToDo\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public void testParseCommand() throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(\"todo\", parser.parseCommand(\"todo Test ToDo\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    public void testParseIndex() throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(1, parser.parseIndex(\"delete 1\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    public void testParseDescription() throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(\"Test ToDo\", parser.parseDescription(\"todo Test ToDo\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    public void testParseDeadline() throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        String[] expected \u003d { \"Test Deadline\", \"2022-12-31\" };","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        assertArrayEquals(expected, parser.parseDeadline(\"deadline Test Deadline /by 2022-12-31\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    public void testParseEvent() throws DukeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        String[] expected \u003d { \"Test Event\", \"2022-12-31\", \"2023-01-01\" };","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        assertArrayEquals(expected, parser.parseEvent(\"event Test Event /from 2022-12-31 /to 2023-01-01\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shayaansultan":43}},{"path":"src/test/java/bot/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package bot;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"public class ToDoTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"    public void testToString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"        ToDo todo \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"        String expected \u003d \"T |   | Test ToDo\";","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    public void testFromString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"        String input \u003d \"T | X | Test ToDo\";","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"        ToDo todo \u003d ToDo.fromString(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        ToDo expected \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"        expected.markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(expected.toString(), todo.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shayaansultan":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shayaansultan":4}}]
