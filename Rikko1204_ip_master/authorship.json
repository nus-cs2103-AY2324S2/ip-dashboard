[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"    mainClass.set(\"arona.Launcher\")","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"    archiveBaseName \u003d \"aronav2\"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Rikko1204":16,"-":40}},{"path":"src/data/dummy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"T | 0 | food","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"D | 0 | movie | 2020-12-31","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"E | 0 | run | 2020-10-20 | 2021-12-20","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Rikko1204":3}},{"path":"src/data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"E | 1 | project meeting | 2020-12-31 | 2021-10-20","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"T | 0 | food","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"D | 1 | movie | 2019-01-01","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"D | 1 | run | 2020-03-04","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"T | 1 | food and movie","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"T | 0 | ace","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"D | 0 | ace | 2020-12-10","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Rikko1204":8}},{"path":"src/main/java/arona/AddDuplicateTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * Allow for user to add tasks to the tasklist given.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class AddDuplicateTask extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public AddDuplicateTask(String fullCommand) {","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"     * Convert the command and add the task into the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"     * @param taskList The class that contains the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * @param ui UI that handles all the console output.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     * @param storage Handle the loading and saving of data.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     * @throws FileException if file cannot be found.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     * @throws TaskException if command input does not match the requirements.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException, TaskException {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        int originalSize \u003d taskList.getTasks().size();","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        taskList.addTask(fullCommand);","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        int alteredSize \u003d taskList.getTasks().size();","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        // assert alteredSize \u003d\u003d originalSize + 1 : \"Task was not added to tasklist\";","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Rikko1204":31}},{"path":"src/main/java/arona/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * Allow for user to add tasks to the tasklist given.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class AddTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public AddTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"     * Convert the command and add the task into the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"     * @param taskList The class that contains the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * @param ui UI that handles all the console output.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     * @param storage Handle the loading and saving of data.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     * @throws FileException if file cannot be found.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     * @throws TaskException if command input does not match the requirements.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException, TaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        if (fullCommand.equals(\"no\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"            taskList.discardCommand();","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"            return;","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        int originalSize \u003d taskList.getTasks().size();","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        taskList.addTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        int alteredSize \u003d taskList.getTasks().size();","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        // assert alteredSize \u003d\u003d originalSize + 1 : \"Task was not added to tasklist\";","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":36}},{"path":"src/main/java/arona/Arona.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import java.io.OutputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":" * Main class where the program runs. Users can input commands","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":" * from console and respond to prompts","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"public class Arona  {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    private String name;","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     * Constructor to initialize the UI and fetch data from storage","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     * @throws TaskException if file cannot be found","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    public Arona() throws TaskException {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        System.setOut(new PrintStream(new OutputStream() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"            @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"            public void write(int b) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"                // Do nothing","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        }));","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        name \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"            taskList \u003d new TaskList(storage.load(), ui);","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        } catch (FileException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"            taskList \u003d new TaskList(ui);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"     * Allow for users to enter commands to perform various tasks,","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"     * such as add, delete, mark, unmark tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"     * @throws FileException if file cannot be found","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"     * @throws AronaException if there are errors in program logic","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"     * @throws IndexOutOfBoundsException if user enter a task number","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"     *      that does not exist","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"    public void run(String fullCommand) {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"            Command command \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"            command.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"        } catch (FileException | AronaException | TaskException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"            ui.setResponse(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"    public String getResponse() {","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        return ui.getResponse();","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"    public void greetUser() {","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"        ui.greetings();","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Rikko1204":72,"-":2}},{"path":"src/main/java/arona/AronaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"public class AronaException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    public AronaException(String string) {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"        super(string);","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Rikko1204":7}},{"path":"src/main/java/arona/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * Abstract class which can be extended from to specify","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" * type of command and how they can be executed","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    protected String fullCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    protected boolean exit;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    public Command(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * Convert the command and perform the action to the task in the tasklist","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     * @param taskList The class that contains the tasklist","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     * @param ui UI that handles all the console output","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"     * @param storage Handle the loading and saving of data","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"     * @throws FileException if file cannot be found","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"     * @throws TaskException if command input does not match the requirements","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws FileException, TaskException;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        return this.exit;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":28}},{"path":"src/main/java/arona/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"public enum CommandEnum {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    BYE,","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    LIST,","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    MARK,","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    UNMARK","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":8}},{"path":"src/main/java/arona/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":" * A type of task that contains a deadline.","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    private DateTimeFormatter targetFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by.format(targetFormatter) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        return super.getStatus();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"     * Process the string with unmodified date form which is to be saved in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"     * @return String that is to be processed and stored in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"    public String userInputToString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":36}},{"path":"src/main/java/arona/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * Allow for user to delete tasks from the tasklist given.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class DeleteTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public DeleteTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"     * Convert the command and delete the task from the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"     * @param taskList The class that contains the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * @param ui UI that handles all the console output.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     * @param storage Handle the loading and saving of data.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     * @throws FileException if file cannot be found.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     * @throws TaskException if command input does not match the requirements.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        int originalSize \u003d taskList.getTasks().size();","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        int taskNum \u003d Integer.parseInt(fullCommand.split(\" \", 0)[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        taskList.DeleteTask(taskNum);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        int alteredSize \u003d taskList.getTasks().size();","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        assert alteredSize \u003d\u003d originalSize - 1 : \"Task was not deleted\";","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"     * @return Check if the program should exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"        return this.exit;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":40}},{"path":"src/main/java/arona/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"    public static DialogBox getAronaDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"        db.flip();","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Rikko1204":61}},{"path":"src/main/java/arona/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":" * A type of task that has a start date and end date.","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    private DateTimeFormatter targetFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from.format(targetFormatter)","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"                + \" to: \" + this.to.format(targetFormatter) + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"     * Process the string with unmodified date form which is to be saved in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"     * @return String that is to be processed and stored in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"    public String userInputToString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":34}},{"path":"src/main/java/arona/FileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"public class FileException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    public FileException(String string) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"        super(string);","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":7}},{"path":"src/main/java/arona/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"public class FindTask extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    public FindTask(String fullCommand) {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException, TaskException {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        taskList.findTasks(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Rikko1204":11}},{"path":"src/main/java/arona/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Rikko1204":8}},{"path":"src/main/java/arona/ListTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * Allow for user to see the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class ListTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public ListTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"     * Prints the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"     * @param taskList The class that contains the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * @param ui UI that handles all the console output.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     * @param storage Handle the loading and saving of data.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     * @throws FileException if file cannot be found.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     * @throws TaskException if command input does not match the requirements.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        ui.printTasks(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":25}},{"path":"src/main/java/arona/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":" * A GUI for Arona using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    private Arona arona;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"            arona \u003d new Arona();","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setArona(arona);","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"            stage.setTitle(\"Arona\");","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"            stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"            e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Rikko1204":37}},{"path":"src/main/java/arona/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":" * Controller for arona.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    private Arona arona;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    private Stage stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Shiroko_Icon.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"    private Image aronaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Arona_Icon.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"    public void setArona(Arona arona) {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"        this.arona \u003d arona;","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"        showGreetings();","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"        String fullCommand \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"        arona.run(fullCommand);","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        String response \u003d arona.getResponse();","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"                DialogBox.getUserDialog(fullCommand, userImage),","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"                DialogBox.getAronaDialog(response, aronaImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"        if (fullCommand \u003d\u003d \"bye\") {","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"            stage.close();","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"    private void showGreetings() {","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"        arona.greetUser();","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"                DialogBox.getAronaDialog(arona.getResponse(), aronaImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Rikko1204":71}},{"path":"src/main/java/arona/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * Allow for user to mark tasks from the tasklist given.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class MarkTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public MarkTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"     * Convert the command and mark the task specified in the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"     * @param taskList The class that contains the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"     * @param ui UI that handles all the console output.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * @param storage Handle the loading and saving of data.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     * @throws FileException if file cannot be found.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     * @throws TaskException if command input does not match the requirements.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"        int taskNum \u003d Integer.parseInt(fullCommand.split(\" \", 0)[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        taskList.changeTaskStatus(taskNum, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        assert taskList.getTasks().get(taskNum - 1).getStatus() : \"Task was not marked done\";","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":28}},{"path":"src/main/java/arona/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":" * Takes an input and process the string.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"     * @param fullCommand Input from user that specify kind of command.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"     * @return A command that can be executed to perform it\u0027s actions.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * @throws AronaException if the user does not provide a task number.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public static Command parseCommand(String fullCommand) throws AronaException {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        String command \u003d fullCommand.split(\" \", 0)[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"        switch(command) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"            return new QuitApplication(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"            return new ListTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"            if (fullCommand.split(\" \", 0).length \u003d\u003d 1)","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"                throw new AronaException(\"Sensei! Please provide a task number!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"            return new MarkTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"            if (fullCommand.split(\" \", 0).length \u003d\u003d 1)","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"                throw new AronaException(\"Sensei! Please provide a task number!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"            return new UnmarkTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"            if (fullCommand.split(\" \", 0).length \u003d\u003d 1)","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"                throw new AronaException(\"Sensei! Please provide a task number!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"            return new DeleteTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"        case \"find\":","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"            if (fullCommand.split(\" \", 0).length \u003d\u003d 1)","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"                throw new AronaException(\"Sensei! Please provide a description of what you want to find!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"            return new FindTask(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"            return new AddTask(fullCommand);","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"            return new AddTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"        case \"event\":","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"            return new AddTask(fullCommand);","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"        case \"yes\":","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"            return new AddTask(fullCommand);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        case \"no\":","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"            return new AddTask(fullCommand);","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"            throw new AronaException(\"Sensei, Arona does not know what that means!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"     * Takes user input and parse the date into another format.","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"     * @param date Date given by user.","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"     * @return Formatted date.","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"     * @throws DateTimeParseException if user input date is of invalid format.","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"    public static LocalDate parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"        return LocalDate.parse(date, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"     * Takes a task and format it into a string that is to be saved in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"     * @param task Task to be saved.","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"     * @return Task in string format.","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"    public static String taskToFileOutput(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"        String output \u003d task.userInputToString()","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[T]\", \"T\")","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[D]\", \"D\")","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[E]\", \"E\")","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[ ]\", \" \\\\| 0 \\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[X]\", \" \\\\| 1 \\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\(by:\", \"\\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\)\", \"\")","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\(from:\", \"\\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"to:\", \"\\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\)\", \"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"        return output;","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"     * Takes a string from file and format it to be added into tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"     * @param input Task in string format to be added to tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"     * @return String format of task.","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"    public static String FileInputToTask(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"        String output \u003d input.replaceAll(\"\\\\| 0 \\\\|\", \"\")","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\| 1 \\\\|\", \"\")","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\|\", \"/\")","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"T\", \"todo\")","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"D\", \"deadline\")","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"E\", \"event\")","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"  \", \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"        return output;","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Rikko1204"},"content":"     * Takes a task in string format and find the status of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"Rikko1204"},"content":"     * @param input Task in string format.","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"Rikko1204"},"content":"     * @return Boolean indicating if the task is completed.","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Rikko1204"},"content":"    public static boolean FileInputToTaskStatus(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Rikko1204"},"content":"        String taskStatus \u003d input.split(\"\\\\|\", 0)[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Rikko1204"},"content":"        boolean isTaskDone \u003d taskStatus.trim().equals(\"1\") ? true : false;","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Rikko1204"},"content":"        return isTaskDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Rikko1204"},"content":"    public static String ExtractDescription(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"Rikko1204"},"content":"        String description \u003d input.split(\" \")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"Rikko1204"},"content":"        return description;","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":123}},{"path":"src/main/java/arona/QuitApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * Allow for user to quit application.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class QuitApplication extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public QuitApplication(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"     * Quit the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"     * @param taskList The class that contains the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * @param ui UI that handles all the console output.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     * @param storage Handle the loading and saving of data.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     * @throws FileException if file cannot be found.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     * @throws TaskException if command input does not match the requirements.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        ui.quitApplication();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":25}},{"path":"src/main/java/arona/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    private final String FILE_PATH \u003d \"./src/data/tasklist.txt\";","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cBoolean\u003e statuses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    public TwoArrayList load() throws FileException {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"                texts.add(Parser.FileInputToTask(line));","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"                statuses.add(Parser.FileInputToTaskStatus(line));","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"            reader.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"            return new TwoArrayList(texts, statuses);","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"            throw new FileException(\"Oops, Arona cannot find your task file!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"            throw new FileException(\"Sensei! There were some errors reading tasks from the file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws FileException {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"                // System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"                writer.write(Parser.taskToFileOutput(task));","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"            writer.flush();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"            writer.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"        } catch (IOException e ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"            throw new FileException(\"Sensei! There were some errors reading tasks from the file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":47}},{"path":"src/main/java/arona/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * Stores the task description and indicates if the task is completed.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"     * Process the string with unmodified date form which is to be saved in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"     * @return String that is to be processed and stored in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    public String userInputToString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        return description;","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"        return isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"    public void setStatusIcon(boolean status) {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":44}},{"path":"src/main/java/arona/TaskEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"public enum TaskEnum {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    TODO,","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    EVENT","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":7}},{"path":"src/main/java/arona/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    public TaskException(String string) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"        super(string);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":7}},{"path":"src/main/java/arona/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    private boolean awaitResponse;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    private String fullCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    private boolean isLoading;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    public TaskList(TwoArrayList tasksToAdd, Ui ui) throws TaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"        awaitResponse \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"        fullCommand \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        isLoading \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"        for (int i \u003d 0; i \u003c tasksToAdd.getList1().size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"            addTask(tasksToAdd.getList1().get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"            changeTaskStatus(i + 1, tasksToAdd.getList2().get(i));","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        isLoading \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"    public TaskList(Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        awaitResponse \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        fullCommand \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        isLoading \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"    public void addTask(String input) throws TaskException {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"        if (!awaitResponse) {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"            fullCommand \u003d input;","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"        String[] splitInput \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"        String type \u003d splitInput[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"        if (splitInput.length \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"            throw new TaskException(\"Sensei! Please enter some tasks!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"        } else if (!containsEnumValue(TaskEnum.class, type)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"            throw new TaskException(\"Sensei, Arona does not know what that means!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"        } else if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"            throw new TaskException(\"Sensei! Please provide some task description!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"        String[] info \u003d splitInput[1].split(\"/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(info[0]);","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        String description \u003d info[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"        if (description.equals(\"\")) throw new TaskException(\"Sensei! Please provide some task description!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"        if (containDuplicateTasks(description) \u0026\u0026 !awaitResponse \u0026\u0026 !isLoading) {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"            fullCommand \u003d input;","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"            ui.checkResponse();","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"            awaitResponse \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"            return;","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"        switch(type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"            tasks.add(new Todo(description));","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"            if (info.length \u003c 2) throw new TaskException(\"Sensei! Please provide a deadline!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"            String by \u003d info[1].replaceAll(\"by\", \"\").trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"                LocalDate date \u003d Parser.parseDate(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"                tasks.add(new Deadline(description, date));","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"                throw new TaskException(\"Sensei! The date format has to be in yyyy-mm-dd!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"        case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"            if (info.length \u003c 3) throw new TaskException(\"Sensei! Please provide an event begin and deadline.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"            String from \u003d info[1].replaceAll(\"from\", \"\").trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"            by \u003d info[2].replaceAll(\"to\", \"\").trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"                LocalDate dateFrom \u003d Parser.parseDate(from);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"                LocalDate dateBy \u003d Parser.parseDate(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"                tasks.add(new Event(description, dateFrom, dateBy));","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"                throw new TaskException(\"Sensei! The date format has to be in yyyy-mm-dd!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"            // No need to throw exception as it has been handled above.","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"        awaitResponse \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"        ui.taskAdded(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Rikko1204"},"content":"    public void DeleteTask(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Rikko1204"},"content":"        if (taskNum \u003e tasks.size()) throw new IndexOutOfBoundsException(\"Sensei, the task doesn\u0027t exist!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"        int index \u003d taskNum - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Rikko1204"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Rikko1204"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Rikko1204"},"content":"        ui.taskDeleted(task, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Rikko1204"},"content":"    public void changeTaskStatus(int taskNum, boolean status) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(taskNum);","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"Rikko1204"},"content":"        if (taskNum \u003e tasks.size()) throw new IndexOutOfBoundsException(\"Sensei! The task doesn\u0027t exist!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Rikko1204"},"content":"        int index \u003d taskNum - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Rikko1204"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Rikko1204"},"content":"        if (task.getStatus() \u003d\u003d status) {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Rikko1204"},"content":"            ui.isMarked(status);","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"Rikko1204"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Rikko1204"},"content":"        task.setStatusIcon(status);","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Rikko1204"},"content":"        if (status) {","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Rikko1204"},"content":"            ui.markTask();","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Rikko1204"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Rikko1204"},"content":"            ui.unmarkTask();","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Rikko1204"},"content":"//        ui.printTasks(tasks);","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Rikko1204"},"content":"    public void findTasks(String fullCommand) {","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"Rikko1204"},"content":"        ArrayList\u003cTask\u003e newTasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"Rikko1204"},"content":"        String keyword \u003d Parser.ExtractDescription(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"Rikko1204"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"Rikko1204"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"Rikko1204"},"content":"            boolean contains \u003d description.contains(keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"Rikko1204"},"content":"            if (contains) {","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"Rikko1204"},"content":"                newTasksList.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"Rikko1204"},"content":"        ui.printTasks(newTasksList);","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"Rikko1204"},"content":"    public boolean containDuplicateTasks(String keyword) {","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"Rikko1204"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"Rikko1204"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2024-02-14"},{"lineNumber":150,"author":{"gitId":"Rikko1204"},"content":"            if (description.equals(keyword)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":151,"author":{"gitId":"Rikko1204"},"content":"                return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":152,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":153,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":154,"author":{"gitId":"Rikko1204"},"content":"        return false;","lastModifiedDate":"2024-02-14"},{"lineNumber":155,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":156,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":157,"author":{"gitId":"Rikko1204"},"content":"    public void discardCommand() {","lastModifiedDate":"2024-02-14"},{"lineNumber":158,"author":{"gitId":"Rikko1204"},"content":"        awaitResponse \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":159,"author":{"gitId":"Rikko1204"},"content":"        fullCommand \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"Rikko1204"},"content":"        ui.discardDuplicateTask();","lastModifiedDate":"2024-02-14"},{"lineNumber":161,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":162,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":163,"author":{"gitId":"Rikko1204"},"content":"    private static \u003cE extends Enum\u003cE\u003e\u003e boolean containsEnumValue(Class\u003cE\u003e enumClass, String value) {","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"Rikko1204"},"content":"        for (Enum\u003cE\u003e enumConstant : enumClass.getEnumConstants()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"Rikko1204"},"content":"            if (enumConstant.name().equalsIgnoreCase(value)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"Rikko1204"},"content":"                return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"Rikko1204"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":171}},{"path":"src/main/java/arona/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * A type of task that has no dates involved.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     * Process the string with unmodified date form which is to be saved in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     * @return String that is to be processed and stored in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    public String userInputToString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":25}},{"path":"src/main/java/arona/TwoArrayList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"public class TwoArrayList {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cString\u003e list1;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cBoolean\u003e list2;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    public TwoArrayList(ArrayList\u003cString\u003e list1, ArrayList\u003cBoolean\u003e list2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        this.list1 \u003d list1;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"        this.list2 \u003d list2;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    public ArrayList\u003cString\u003e getList1() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"        return list1;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public ArrayList\u003cBoolean\u003e getList2() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        return list2;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":21}},{"path":"src/main/java/arona/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    private String logo \u003d        \"    _____ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"            /* */                \"   /  _  \\\\_______   ____   _____ _____ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"            /*   */              \"  /  /_\\\\  \\\\_  __  \\\\/  _ \\\\ /     \\\\___  \\\\ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"            /*   */              \" /    |    \\\\  | \\\\_ ( \u003c_\u003e )   |   \\\\/ __ \\\\_ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"            /* */                \" \\\\____|__  /__|    \\\\____/|___|_  (____  / \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"            /* */                \"         \\\\/                    \\\\/     \\\\/ \";","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    private String greetings \u003d \"こんにちは先生、私はアロナです. \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"            + \"どういうご用件ですか?　\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"            + \"ここで先生のスケジュールが決まります.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    private String goodbye \u003d \"Goodbye sensei! Hope to see you soon!\";","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    private String response;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public void greetings() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        response \u003d \"開始中... \\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"                + logo + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"                + greetings + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    public void quitApplication() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        response \u003d goodbye + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        String fullCommand \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        return fullCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"    public void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"        response \u003d \"Sensei! Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"            if (tasks.get(i) \u003d\u003d null) break;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"            response +\u003d i + 1 + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"            System.out.println(response);","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"    public void taskAdded(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"        response \u003d \"Arona has added this task to sensei\u0027s task list!: \\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"                + tasks.get(tasks.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"                + \"Arona has counted \" + tasks.size() + \" tasks in the list!\";","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(response);","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"    public void taskDeleted(Task task, int size) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        response \u003d \"Arona has removed this task!: \\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"                + \"Arona has counted \" + size + \" tasks in the list!\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"    public void isMarked(boolean status) {","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"        response \u003d \"Sensei, the task has already been marked as \" + (status ? \"done!\" : \"not done!\") + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"    public void markTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"        response \u003d \"Congratulation, sensei! Arona has marked the task as done!\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        response \u003d \"I understand, sensei! Arona has marked the task as not done!\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"    public void checkResponse() {","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"        response \u003d \"Sensei! Arona found this task in your tasklist! Do you want to add it again?\";","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"    public void discardDuplicateTask() {","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"        response \u003d \"Arona will be discarding this duplicate task!\";","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"    public String showLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"        return \"---------------------------------\";","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"    public String getResponse() {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"        return response;","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"    public void setResponse(String res) {","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"        response \u003d res;","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":89}},{"path":"src/main/java/arona/UnmarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":" * Allow for user to unmark tasks from the tasklist given.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class UnmarkTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    public UnmarkTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"     * Convert the command and unmark the task specified in the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"     * @param taskList The class that contains the tasklist.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * @param ui UI that handles all the console output.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     * @param storage Handle the loading and saving of data.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"     * @throws FileException if file cannot be found.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"     * @throws TaskException if command input does not match the requirements.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        int taskNum \u003d Integer.parseInt(fullCommand.split(\" \", 0)[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        taskList.changeTaskStatus(taskNum, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        assert !taskList.getTasks().get(taskNum - 1).getStatus() : \"Task was not marked undone\";","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Rikko1204":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"arona.MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" onKeyPressed\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Rikko1204":16}},{"path":"src/test/java/arona/AddTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"public class AddTaskTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public void addTaskTest_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"            TaskList tasklist \u003d new TaskList(ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"            Storage storage \u003d new Storage(\"./src/data/dummy.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"            String fullCommandOne \u003d \"todo food\";","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"            String fullCommandTwo \u003d \"deadline movie /by 2020-12-31\";","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"            String fullCommandThree \u003d \"event run /from 2020-10-20 /to 2021-12-20\";","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"            new AddTask(fullCommandOne).execute(tasklist, ui, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"            new AddTask(fullCommandTwo).execute(tasklist, ui, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"            new AddTask(fullCommandThree).execute(tasklist, ui, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"            assertEquals(\"[T][ ] food\", tasklist.getTasks().get(0).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"            assertEquals(\"[D][ ] movie (by: 31/12/2020)\", tasklist.getTasks().get(1).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"            assertEquals(\"[E][ ] run (from: 20/10/2020 to: 20/12/2021)\", tasklist.getTasks().get(2).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        } catch (FileException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Rikko1204":29}},{"path":"src/test/java/arona/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package arona;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    public void addTask_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"            TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"            String fullCommand \u003d \"deadline movie /by 2020-12-31\";","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"            taskList.addTask(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"            assertEquals(\"[D][ ] movie (by: 31/12/2020)\", taskList.getTasks().get(0).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    public void addTask_exceptionThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"            TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"            String fullCommand \u003d \"deadline /by 2020-12-31\";","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"            taskList.addTask(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"            assertEquals(\"Sensei! Please provide some task description!\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"    public void changeTaskStatus_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"            TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"            String fullCommand \u003d \"deadline movie /by 2020-12-31\";","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"            taskList.addTask(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"            taskList.changeTaskStatus(1, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"            assertEquals(\"[D][X] movie (by: 31/12/2020)\", taskList.getTasks().get(0).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"    public void changeTaskStatus_exceptionThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"            TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"            String fullCommand \u003d \"deadline movie /by 2020-12-31\";","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"            taskList.addTask(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"            taskList.changeTaskStatus(1, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"            assertEquals(\"[D][X] movie (by: 31/12/2020)\", taskList.getTasks().get(1).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"            assertEquals(\"Index 1 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Rikko1204":62}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"todo food","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Rikko1204":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"@REM REM compile the code into the bin folder","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"@REM javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"@REM IF ERRORLEVEL 1 (","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"@REM     echo ********** BUILD FAILURE **********","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"@REM     exit /b 1","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"@REM )","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"@REM REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"java -classpath \"..\\out\\production\\Personal Project\" arona.Arona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Rikko1204":8,"-":13}}]
