[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"    private String by;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"    private String from;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"    private String to;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":16}},{"path":"src/main/java/Shon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"public class Shon {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"    private final static String LINE \u003d \"    _______________\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"            \"_____________________________________________\";","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"        TodoList list \u003d new TodoList();","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"        print(\"Hello! I\u0027m Shon\", \"What can I do for you?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"            String[] s \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"            String action \u003d s[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"            switch (action) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"                case \"list\":","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"                    print(list.getList());","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"                    print(list.mark(Integer.parseInt(s[1])));","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"                    print(list.unmark(Integer.parseInt(s[1])));","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"                    print(list.addTodo(s[1]));","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"                    String[] d \u003d s[1].split(\" /by \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"shaunlxw"},"content":"                    print(list.addDeadline(d[0], d[1]));","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"shaunlxw"},"content":"                case \"event\":","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"                    String[] e \u003d s[1].split(\" /from \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"shaunlxw"},"content":"                    String[] duration \u003d e[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"shaunlxw"},"content":"                    print(list.addEvent(e[0], duration[0], duration[1]));","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"shaunlxw"},"content":"                default:","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"shaunlxw"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"shaunlxw"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"    private static void print(String... messages) {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"        for (String msg : messages) {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"            System.out.println(\"     \" + msg);","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"shaunlxw":56}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"abstract public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"    public String markAsDone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"        return this.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"    public String markAsNotDone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"        return this.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":11}},{"path":"src/main/java/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"public class TodoList {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"    public TodoList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"        this.list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"    public String[] addTodo(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"        this.list.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"        return addedTask(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"    public String[] addDeadline(String description, String by) {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"        this.list.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"        return addedTask(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"    public String[] addEvent(String description, String from, String to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"        this.list.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"        return addedTask(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"    public String[] getList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"        String[] output \u003d new String[this.list.size()+1];","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"shaunlxw"},"content":"        output[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"        for (int i \u003d 1; i \u003c this.list.size()+1; i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"shaunlxw"},"content":"            output[i] \u003d i + \".\" + this.list.get(i-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"shaunlxw"},"content":"        return output;","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"shaunlxw"},"content":"    public String[] mark(int i) {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d this.list.get(i-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"shaunlxw"},"content":"        String description \u003d task.markAsDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"        return new String[]{\"Nice! I\u0027ve marked this task as done:\", \"  \" + description};","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"shaunlxw"},"content":"    public String[] unmark(int i) {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d this.list.get(i-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"        String description \u003d task.markAsNotDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"        return new String[]{\"OK, I\u0027ve marked this task as not done yet:\", \"  \" + description};","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"    public String[] addedTask(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"        int size \u003d this.list.size();","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"        return new String[]{\"Got it. I\u0027ve added this task:\", \"  \" + task,","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"        String.format(\"Now you have %s %s in the list.\", size, size \u003c 2 ? \"task\" : \"tasks\")};","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"todo read book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"todo join sports club","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"mark 4","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"list","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"java -classpath ..\\bin Shon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"shaunlxw":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"java -classpath ../bin Shon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"shaunlxw":1}}]
