[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"   ","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"# Deprecated text-based UI","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"Prior to being added a GUI, this chatbot adopted a text-based UI, which is now deprecated. Relevant test files, which use the I/O redirection style automated testing, are kept in the `text-ui-test` folder for documentation purposes, but the text-based UI itself is no longer kept.","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"chin-herng":4,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"mainClassName \u003d \u0027bob.Launcher\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-params\u0027, version: \u00275.10.2\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"    mainClass.set(\"bob.Launcher\")","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"checkstyle {","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"chin-herng":24,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"# Bob User Guide","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"![Ui](Ui.png)","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"Welcome to Bob, your personal assistant chatbot designed to make your life easier and more organized. Bob is here to","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"help you keep track of various tasks effortlessly.","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"## Adding todos","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"Adds a todo to the task list.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"Example: `todo submit ip`","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"A todo with description \"submit ip\" will be added to the task list.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"added:","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"  [T][ ] submit ip","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"now you have 1 task(s)","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"Adds a deadline to the task list.","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"Format: `deadline TASK_DESCRIPTION /by d/M/yyyy HHmm`","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"Example: `deadline submit ip /by 29/2/2024 2359`","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"A deadline with description \"submit ip\" that is due on 29th February 2024 at 11:59pm will be added to the task list.","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"added:","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"  [D][ ] submit ip (by: Feb 29 2024 2359)","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"now you have 2 task(s)","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"## Adding events","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"Adds an event to the task list.","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"Format: `deadline TASK_DESCRIPTION /from d/M/yyyy HHmm /to d/M/yyyy HHmm`","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"Example: `event interest group session /from 5/3/2024 2000 /to 5/3/2024 2200`","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"An event with description \"interest group session\" that starts on 29th February 2024 at 8pm and ends at 10pm will be","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"added to the task list.","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"added:","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"  [E][ ] interest group session (from: Mar 05 2024 2000 to: Mar 05 2024 2200)","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"now you have 3 task(s)","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"## Adding periods","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"Adds a period to the task list. A period is a task that needs to be done within a certain period.","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"Format: `period TASK_DESCRIPTION /start d/M/yyyy HHmm /end d/M/yyyy HHmm`","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"Example: `period collect certificate /start 15/1/2024 0000 /end 25/1/2024 2359`","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"An event with description \"collect certificate\" that starts on 15th January 2024 at 12am and ends on 25th January 2024","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"at 11:59pm will be added to the task list.","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"added:","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"  [P][ ] collect certificate (start: Jan 15 2024 2000 end: Jan 25 2024 2359)","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"now you have 4 task(s)","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"## Listing tasks","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"Shows a list of tasks in the task list. There are two ways the list can be filtered:","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"- Show only undone deadlines and periods that are due in a specified number of days.","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"- Show only undone events that are occurring on a specific date. ","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"Format: `list [/due_in DAYS] [/on d/M/yyyy]`","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"Example: `list`","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"The list of tasks in the task list will be shown.","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"list of tasks:","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"1. [T][ ] submit ip","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"chin-herng"},"content":"2. [D][ ] submit ip (by: Feb 29 2024 2359)","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"chin-herng"},"content":"3. [E][ ] interest group session (from: Mar 05 2024 2000 to: Mar 05 2024 2200)","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"chin-herng"},"content":"4. [P][ ] collect certificate (start: Jan 15 2024 2000 end: Jan 25 2024 2359)","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"chin-herng"},"content":"Example: `list /due_in 1`","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"chin-herng"},"content":"The list of undone deadlines and periods that are due in 1 day will be shown.","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"chin-herng"},"content":"list of tasks:","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"chin-herng"},"content":"1. [D][ ] submit ip (by: Feb 29 2024 2359)","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"chin-herng"},"content":"Example: `list /on 5/3/2024`","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"chin-herng"},"content":"The list of undone events that are occurring on 5th March 2024 will be shown.","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"chin-herng"},"content":"list of tasks:","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"chin-herng"},"content":"1. [E][ ] interest group session (from: Mar 05 2024 2000 to: Mar 05 2024 2200)","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"chin-herng"},"content":"## Marking a task as done/undone","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"chin-herng"},"content":"Marks a task in the task list as done/undone.","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"chin-herng"},"content":"Format:","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"chin-herng"},"content":"- `mark INDEX`","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"chin-herng"},"content":"- `unmark INDEX`","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"chin-herng"},"content":"Example: `mark 1`","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"chin-herng"},"content":"The first task in the task list will be marked as done.","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"chin-herng"},"content":"good job!","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"chin-herng"},"content":"  [T][X] submit ip","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"chin-herng"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"chin-herng"},"content":"The first task in the task list will be marked as undone.","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"chin-herng"},"content":"ok you just undid this task","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"chin-herng"},"content":"  [T][ ] submit ip","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"chin-herng"},"content":"## Locating tasks by description","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"chin-herng"},"content":"Finds tasks whose descriptions contain the given keyword. Multiple keywords are treated as one keyword.","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":144,"author":{"gitId":"chin-herng"},"content":"Format: `find [KEYWORD]`","lastModifiedDate":"2024-03-01"},{"lineNumber":145,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":146,"author":{"gitId":"chin-herng"},"content":"Example: `find interest`","lastModifiedDate":"2024-03-01"},{"lineNumber":147,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"chin-herng"},"content":"The list of tasks whose descriptions contain the word \"interest\" will be shown.","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":151,"author":{"gitId":"chin-herng"},"content":"matching tasks:","lastModifiedDate":"2024-03-01"},{"lineNumber":152,"author":{"gitId":"chin-herng"},"content":"1. [E][ ] interest group session (from: Mar 05 2024 2000 to: Mar 05 2024 2200)","lastModifiedDate":"2024-03-01"},{"lineNumber":153,"author":{"gitId":"chin-herng"},"content":"```","lastModifiedDate":"2024-03-01"},{"lineNumber":154,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":155,"author":{"gitId":"chin-herng"},"content":"## Deleting tasks","lastModifiedDate":"2024-03-01"},{"lineNumber":156,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":157,"author":{"gitId":"chin-herng"},"content":"Deletes the specified task from the task list. The task to delete is specified by an index, which refers to the index","lastModifiedDate":"2024-03-01"},{"lineNumber":158,"author":{"gitId":"chin-herng"},"content":"number shown by executing `list`.","lastModifiedDate":"2024-03-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"chin-herng"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-03-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"chin-herng"},"content":"Example: `delete 4`","lastModifiedDate":"2024-03-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"chin-herng"},"content":"The 4th task in the task list will be deleted.","lastModifiedDate":"2024-03-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":167,"author":{"gitId":"chin-herng"},"content":"removed:","lastModifiedDate":"2024-03-01"},{"lineNumber":168,"author":{"gitId":"chin-herng"},"content":"  [P][ ] collect certificate (start: Jan 15 2024 2000 end: Jan 25 2024 2359)","lastModifiedDate":"2024-03-01"},{"lineNumber":169,"author":{"gitId":"chin-herng"},"content":"3 task(s) left","lastModifiedDate":"2024-03-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"chin-herng"},"content":"## Exiting the program","lastModifiedDate":"2024-03-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"chin-herng"},"content":"Exits the program.","lastModifiedDate":"2024-03-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":176,"author":{"gitId":"chin-herng"},"content":"Format: `exit`","lastModifiedDate":"2024-03-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":178,"author":{"gitId":"chin-herng"},"content":"Example: `exit`","lastModifiedDate":"2024-03-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":180,"author":{"gitId":"chin-herng"},"content":"The program will terminate.","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"chin-herng":163,"-":17}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import bob.exception.BobException;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" * Represents Bob itself. A \u003ccode\u003eBob\u003c/code\u003e object corresponds to an instance of the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"public class Bob {","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    private String initialMessage;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"     * Returns an instance of the program with its own storage, task list and UI.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     * @param dataPath The file path of the storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    public Bob(String dataPath) {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"            tasks \u003d new TaskList(storage.load(dataPath));","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"            initialMessage \u003d Ui.getGreetResponse();","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"            initialMessage \u003d Ui.getLoadingErrorResponse(e.getMessage());","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    public String getInitialMessage() {","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"        return initialMessage;","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"            return command.execute(storage, tasks);","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"chin-herng":44}},{"path":"src/main/java/bob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"public class Launcher {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"chin-herng":12}},{"path":"src/main/java/bob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.gui.MainWindow;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":" * A GUI for Bob using FXML.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    private final Bob bob \u003d new Bob(Storage.DATA_PATH);","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"        MainWindow mw \u003d new MainWindow(stage);","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"        mw.setBob(bob);","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"        mw.show();","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"chin-herng":19}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import bob.command.AddDeadlineCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import bob.command.AddEventCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import bob.command.AddPeriodCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"import bob.command.AddTodoCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"import bob.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"import bob.command.DeleteCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"import bob.command.ExitCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"import bob.command.ListCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"import bob.command.ListDueInCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"import bob.command.ListKeywordCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"import bob.command.ListOnDateCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"import bob.command.MarkCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"import bob.exception.BobException;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"import bob.exception.EmptyDescriptionException;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidCommandException;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidDateTimeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidDaysException;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidTaskIndexException;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"import bob.exception.ParameterNotFoundException;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":" * Utility class to make sense of the user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    public static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"    private static final String COMMAND_PERIOD \u003d \"period\";","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"    private static final String PATTERN_DATE \u003d \"d/M/yyyy\";","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"    private static final String PATTERN_DATE_TIME \u003d PATTERN_DATE + \" HHmm\";","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"    private static final DateTimeFormatter FORMATTER_DATE \u003d","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"            DateTimeFormatter.ofPattern(PATTERN_DATE);","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"    private static final DateTimeFormatter FORMATTER_DATE_TIME \u003d","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"            DateTimeFormatter.ofPattern(PATTERN_DATE_TIME);","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"    private static String[] splitByParameter(String[] splitString, String parameter) throws ParameterNotFoundException {","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"        String[] newSplitString \u003d splitString[0].split(\" /\" + parameter + \u0027 \u0027, 2);","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"        if (newSplitString.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"            // This implies the last missing parameter will be displayed, rather than the first","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"            throw new ParameterNotFoundException(parameter);","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"        return newSplitString;","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"     * Extracts the description and parameters from a given command.","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"     * @param parametersString The given command excluding the first word (the command itself).","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"     * @param parameters The parameters to extract.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"     * @return The description and the extracted parameters, respecting the indices of the specified parameters.","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"     * @throws ParameterNotFoundException If one of the parameters to extract has not been found.","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"    private static String[] extractParameters(","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"            String parametersString, String[] parameters) throws ParameterNotFoundException {","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"        // TODO: this method is a cruft and might be rewritten","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"        int n \u003d parameters.length;","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"        String[] result \u003d new String[n + 1];","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"        // Split the string repeatedly to extract the rightmost parameter","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"        String[] splitString \u003d new String[] { parametersString };","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"        for (int i \u003d n - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"            splitString \u003d splitByParameter(splitString, parameters[i]);","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"            result[i + 1] \u003d splitString[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"        // Assign result[0] to be the description before returning result","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"        result[0] \u003d splitString[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"        return result;","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"    private static Command parseListOn(String onString) throws InvalidDateTimeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"            LocalDate on \u003d LocalDate.parse(onString, FORMATTER_DATE);","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"chin-herng"},"content":"            return new ListOnDateCommand(on);","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"chin-herng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidDateTimeException(PATTERN_DATE, e.getParsedString());","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"chin-herng"},"content":"    private static Command parseListDueIn(String dueInString) throws InvalidDaysException {","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"chin-herng"},"content":"            int days \u003d Integer.parseInt(dueInString);","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"chin-herng"},"content":"            return new ListDueInCommand(days);","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"chin-herng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidDaysException(dueInString);","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":104,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"chin-herng"},"content":"     * Makes sense of the given user command that is either a \"list\", \"list on\" or \"list due in\".","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"chin-herng"},"content":"     * @param commandArgs The given user command split into the command itself and the remaining description.","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"chin-herng"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object corresponding to the parsed command.","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"chin-herng"},"content":"     * @throws ParameterNotFoundException If command has description but is missing the \"on\" and \"due_in\" parameters.","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidDateTimeException If the user has given an invalid date and time.","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidDaysException If the user has given an invalid number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"chin-herng"},"content":"    private static Command parseList(","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"chin-herng"},"content":"            String[] commandArgs) throws ParameterNotFoundException, InvalidDateTimeException, InvalidDaysException {","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"chin-herng"},"content":"        assert commandArgs[0].equals(COMMAND_LIST) : commandArgs[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"chin-herng"},"content":"        if (commandArgs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"chin-herng"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"chin-herng"},"content":"        // TODO: use extractParameters once it has been rewritten","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"chin-herng"},"content":"        String remaining \u003d commandArgs[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"chin-herng"},"content":"        // Try to extract \"on\" and \"due_in\" from the remaining portion of the command","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"chin-herng"},"content":"        String[] onSplit \u003d remaining.split(\"/on \", 2);","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"chin-herng"},"content":"        String[] dueInSplit \u003d remaining.split(\"/due_in \", 2);","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"chin-herng"},"content":"        // Check which parameter is being extracted","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"chin-herng"},"content":"        boolean hasOn \u003d onSplit.length \u003e 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"chin-herng"},"content":"        boolean hasDueIn \u003d dueInSplit.length \u003e 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"chin-herng"},"content":"        // Return the corresponding Command depending on the parameter extracted","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"chin-herng"},"content":"        if (!hasOn \u0026\u0026 !hasDueIn) {","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"chin-herng"},"content":"            throw new ParameterNotFoundException(new String[] { \"on\", \"due_in\" });","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"chin-herng"},"content":"        return hasOn ? parseListOn(onSplit[1]) : parseListDueIn(dueInSplit[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"chin-herng"},"content":"     * Makes sense of the given user command that is either a \"mark\", \"unmark\" or \"delete\".","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"chin-herng"},"content":"     * @param commandArgs The given user command split into the command itself and the remaining description.","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"chin-herng"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object corresponding to the parsed command.","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidTaskIndexException If the user has given an invalid task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"chin-herng"},"content":"     * @throws EmptyDescriptionException If the given command does not have a description.","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"chin-herng"},"content":"    private static Command parseDeleteOrMark(","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"chin-herng"},"content":"            String[] commandArgs) throws InvalidTaskIndexException, EmptyDescriptionException {","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"chin-herng"},"content":"        assert commandArgs[0].equals(Parser.COMMAND_DELETE) || commandArgs[0].equals(Parser.COMMAND_MARK)","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"chin-herng"},"content":"                || commandArgs[0].equals(Parser.COMMAND_UNMARK) : commandArgs[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"chin-herng"},"content":"            int taskIndex \u003d Integer.parseInt(commandArgs[1]) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"chin-herng"},"content":"            boolean isDelete \u003d commandArgs[0].equals(Parser.COMMAND_DELETE);","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"chin-herng"},"content":"            boolean isMark \u003d commandArgs[0].equals(Parser.COMMAND_MARK);","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"chin-herng"},"content":"            return isDelete ? new DeleteCommand(taskIndex) : new MarkCommand(taskIndex, isMark);","lastModifiedDate":"2024-02-29"},{"lineNumber":157,"author":{"gitId":"chin-herng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidTaskIndexException(commandArgs[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"chin-herng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"chin-herng"},"content":"            throw new EmptyDescriptionException(commandArgs[0]);","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"chin-herng"},"content":"    private static Command parseAddDeadline(","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"chin-herng"},"content":"            String commandArgs) throws ParameterNotFoundException, InvalidDateTimeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"chin-herng"},"content":"            String[] parameters \u003d Parser.extractParameters(commandArgs, new String[]{ \"by\" });","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"chin-herng"},"content":"            String description \u003d parameters[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parameters[1], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"chin-herng"},"content":"            return new AddDeadlineCommand(description, by);","lastModifiedDate":"2024-02-29"},{"lineNumber":171,"author":{"gitId":"chin-herng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidDateTimeException(PATTERN_DATE_TIME, e.getParsedString());","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"chin-herng"},"content":"    private static Command parseAddEvent(","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"chin-herng"},"content":"            String commandArgs) throws ParameterNotFoundException, InvalidDateTimeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"chin-herng"},"content":"            String[] parameters \u003d Parser.extractParameters(commandArgs, new String[] { \"from\", \"to\" });","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"chin-herng"},"content":"            String description \u003d parameters[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(parameters[1], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(parameters[2], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"chin-herng"},"content":"            return new AddEventCommand(description, from, to);","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"chin-herng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":185,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidDateTimeException(PATTERN_DATE_TIME, e.getParsedString());","lastModifiedDate":"2024-02-29"},{"lineNumber":186,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":187,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":188,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":189,"author":{"gitId":"chin-herng"},"content":"    private static Command parseAddPeriod(","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"chin-herng"},"content":"            String commandArgs) throws ParameterNotFoundException, InvalidDateTimeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"chin-herng"},"content":"            String[] parameters \u003d Parser.extractParameters(commandArgs, new String[] { \"start\", \"end\" });","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"chin-herng"},"content":"            String description \u003d parameters[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(parameters[1], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(parameters[2], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"chin-herng"},"content":"            return new AddPeriodCommand(description, start, end);","lastModifiedDate":"2024-02-29"},{"lineNumber":197,"author":{"gitId":"chin-herng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidDateTimeException(PATTERN_DATE_TIME, e.getParsedString());","lastModifiedDate":"2024-02-29"},{"lineNumber":199,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":200,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":201,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":202,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"chin-herng"},"content":"     * Makes sense of the given user command that is either a \"todo\", \"deadline\" or \"event\".","lastModifiedDate":"2024-02-15"},{"lineNumber":204,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":205,"author":{"gitId":"chin-herng"},"content":"     * @param commandArgs The given user command split into the command itself and the remaining description.","lastModifiedDate":"2024-02-15"},{"lineNumber":206,"author":{"gitId":"chin-herng"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object corresponding to the parsed command.","lastModifiedDate":"2024-02-15"},{"lineNumber":207,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidDateTimeException If the user has given an invalid date and time.","lastModifiedDate":"2024-02-15"},{"lineNumber":208,"author":{"gitId":"chin-herng"},"content":"     * @throws EmptyDescriptionException If the given command does not have a description.","lastModifiedDate":"2024-02-15"},{"lineNumber":209,"author":{"gitId":"chin-herng"},"content":"     * @throws ParameterNotFoundException If the given command does not have the expected parameters.","lastModifiedDate":"2024-02-15"},{"lineNumber":210,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":211,"author":{"gitId":"chin-herng"},"content":"    private static Command parseAdd(","lastModifiedDate":"2024-02-12"},{"lineNumber":212,"author":{"gitId":"chin-herng"},"content":"            String[] commandArgs) throws InvalidDateTimeException,","lastModifiedDate":"2024-02-15"},{"lineNumber":213,"author":{"gitId":"chin-herng"},"content":"            EmptyDescriptionException, ParameterNotFoundException {","lastModifiedDate":"2024-02-15"},{"lineNumber":214,"author":{"gitId":"chin-herng"},"content":"        assert commandArgs[0].equals(COMMAND_TODO) || commandArgs[0].equals(COMMAND_DEADLINE)","lastModifiedDate":"2024-02-29"},{"lineNumber":215,"author":{"gitId":"chin-herng"},"content":"                || commandArgs[0].equals(COMMAND_EVENT) || commandArgs[0].equals(COMMAND_PERIOD) : commandArgs[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":216,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":217,"author":{"gitId":"chin-herng"},"content":"        // Add command without a description","lastModifiedDate":"2024-02-15"},{"lineNumber":218,"author":{"gitId":"chin-herng"},"content":"        if (commandArgs.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":219,"author":{"gitId":"chin-herng"},"content":"            throw new EmptyDescriptionException(commandArgs[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":220,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":221,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":222,"author":{"gitId":"chin-herng"},"content":"        // TODO: can be improved by mapping each task type to a list of parameters","lastModifiedDate":"2024-02-29"},{"lineNumber":223,"author":{"gitId":"chin-herng"},"content":"        // Undefined behaviour when there are multiple instances of the same parameter","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"chin-herng"},"content":"        String taskType \u003d commandArgs[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":225,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":226,"author":{"gitId":"chin-herng"},"content":"        // Return the corresponding Command depending on the type of task to be added","lastModifiedDate":"2024-02-15"},{"lineNumber":227,"author":{"gitId":"chin-herng"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-10"},{"lineNumber":228,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2024-02-15"},{"lineNumber":229,"author":{"gitId":"chin-herng"},"content":"            return new AddTodoCommand(commandArgs[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":230,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2024-02-15"},{"lineNumber":231,"author":{"gitId":"chin-herng"},"content":"            return parseAddDeadline(commandArgs[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":232,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2024-02-29"},{"lineNumber":233,"author":{"gitId":"chin-herng"},"content":"            return parseAddEvent(commandArgs[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":234,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_PERIOD:","lastModifiedDate":"2024-02-29"},{"lineNumber":235,"author":{"gitId":"chin-herng"},"content":"            return parseAddPeriod(commandArgs[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":236,"author":{"gitId":"chin-herng"},"content":"        default:","lastModifiedDate":"2024-02-29"},{"lineNumber":237,"author":{"gitId":"chin-herng"},"content":"            throw new AssertionError();","lastModifiedDate":"2024-02-29"},{"lineNumber":238,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":239,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":240,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":241,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":242,"author":{"gitId":"chin-herng"},"content":"     * Makes sense of the \"find\" command.","lastModifiedDate":"2024-02-16"},{"lineNumber":243,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":244,"author":{"gitId":"chin-herng"},"content":"     * @param commandArgs The given user command split into the command itself and the remaining description.","lastModifiedDate":"2024-02-16"},{"lineNumber":245,"author":{"gitId":"chin-herng"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object corresponding to the parsed command.","lastModifiedDate":"2024-02-16"},{"lineNumber":246,"author":{"gitId":"chin-herng"},"content":"     * @throws EmptyDescriptionException If the given command does not have a description.","lastModifiedDate":"2024-02-16"},{"lineNumber":247,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":248,"author":{"gitId":"chin-herng"},"content":"    public static Command parseFind(String[] commandArgs) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-15"},{"lineNumber":249,"author":{"gitId":"chin-herng"},"content":"        assert commandArgs[0].equals(COMMAND_FIND) : commandArgs[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":250,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":251,"author":{"gitId":"chin-herng"},"content":"        // Find command without a description","lastModifiedDate":"2024-02-16"},{"lineNumber":252,"author":{"gitId":"chin-herng"},"content":"        if (commandArgs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":253,"author":{"gitId":"chin-herng"},"content":"            throw new EmptyDescriptionException(commandArgs[0]);","lastModifiedDate":"2024-02-15"},{"lineNumber":254,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":255,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":256,"author":{"gitId":"chin-herng"},"content":"        // The remaining portion of the command is the keyword","lastModifiedDate":"2024-02-16"},{"lineNumber":257,"author":{"gitId":"chin-herng"},"content":"        String keyword \u003d commandArgs[1];","lastModifiedDate":"2024-02-15"},{"lineNumber":258,"author":{"gitId":"chin-herng"},"content":"        return new ListKeywordCommand(keyword);","lastModifiedDate":"2024-02-15"},{"lineNumber":259,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":260,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":261,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":262,"author":{"gitId":"chin-herng"},"content":"     * Makes sense of the given user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":263,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":264,"author":{"gitId":"chin-herng"},"content":"     * @param input The given user command.","lastModifiedDate":"2024-02-29"},{"lineNumber":265,"author":{"gitId":"chin-herng"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object corresponding to the parsed command.","lastModifiedDate":"2024-02-15"},{"lineNumber":266,"author":{"gitId":"chin-herng"},"content":"     * @throws BobException If there is an error parsing the given user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":267,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":268,"author":{"gitId":"chin-herng"},"content":"    public static Command parse(String input) throws BobException {","lastModifiedDate":"2024-02-29"},{"lineNumber":269,"author":{"gitId":"chin-herng"},"content":"        String[] commandArgs \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2024-02-29"},{"lineNumber":270,"author":{"gitId":"chin-herng"},"content":"        assert commandArgs.length \u003e 0 : \"commandArgs is empty\";","lastModifiedDate":"2024-02-29"},{"lineNumber":271,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":272,"author":{"gitId":"chin-herng"},"content":"        // Set command to be the command entered by the user, rather than the entire line of string","lastModifiedDate":"2024-02-15"},{"lineNumber":273,"author":{"gitId":"chin-herng"},"content":"        String command \u003d commandArgs[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":274,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":275,"author":{"gitId":"chin-herng"},"content":"        // Parse the command differently depending on the type of command encountered","lastModifiedDate":"2024-02-15"},{"lineNumber":276,"author":{"gitId":"chin-herng"},"content":"        switch (command) {","lastModifiedDate":"2024-02-29"},{"lineNumber":277,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2024-02-16"},{"lineNumber":278,"author":{"gitId":"chin-herng"},"content":"            return parseList(commandArgs);","lastModifiedDate":"2024-02-12"},{"lineNumber":279,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2024-02-16"},{"lineNumber":280,"author":{"gitId":"chin-herng"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-29"},{"lineNumber":281,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":282,"author":{"gitId":"chin-herng"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-29"},{"lineNumber":283,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":284,"author":{"gitId":"chin-herng"},"content":"            return parseDeleteOrMark(commandArgs);","lastModifiedDate":"2024-02-12"},{"lineNumber":285,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2024-02-16"},{"lineNumber":286,"author":{"gitId":"chin-herng"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-28"},{"lineNumber":287,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2024-02-16"},{"lineNumber":288,"author":{"gitId":"chin-herng"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-28"},{"lineNumber":289,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2024-02-16"},{"lineNumber":290,"author":{"gitId":"chin-herng"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-29"},{"lineNumber":291,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_PERIOD:","lastModifiedDate":"2024-02-29"},{"lineNumber":292,"author":{"gitId":"chin-herng"},"content":"            return parseAdd(commandArgs);","lastModifiedDate":"2024-02-12"},{"lineNumber":293,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2024-02-16"},{"lineNumber":294,"author":{"gitId":"chin-herng"},"content":"            return parseFind(commandArgs);","lastModifiedDate":"2024-02-15"},{"lineNumber":295,"author":{"gitId":"chin-herng"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2024-02-29"},{"lineNumber":296,"author":{"gitId":"chin-herng"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-29"},{"lineNumber":297,"author":{"gitId":"chin-herng"},"content":"        default:","lastModifiedDate":"2024-01-28"},{"lineNumber":298,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-28"},{"lineNumber":299,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":300,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":301,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":301}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"import bob.exception.LoadingException;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"import bob.exception.SavingException;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"import bob.task.Deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"import bob.task.Event;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"import bob.task.Period;","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"import bob.task.Todo;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":" * Represents the storage for the program. A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":" * a file acting as the storage for the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"    private static final String DATA_DIR \u003d \"data\";","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    public static final String DATA_PATH \u003d DATA_DIR + \"/bob.txt\";","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    private static final DateTimeFormatter FORMATTER_DATE_TIME \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"    private File dataFile;","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"     * Retrieves the data file to be loaded from hard disk,","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"     * creating the required directory and/or the file if necessary.","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"     * @param dataPath The path on which the data file lives.","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"     * @return The retrieved data file to be loaded from hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"     * @throws IOException If there has been an error creating the directory and/or file.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"    private static File createOrRetrieve(String dataPath) throws IOException {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"        Path path \u003d Paths.get(dataPath);","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"        Path parent \u003d path.getParent();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"        Files.createDirectories(parent);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"        if (Files.notExists(path)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"            return Files.createFile(path).toFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"        return path.toFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"    private static boolean getDone(String parameter) throws LoadingException {","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"        if (!parameter.equals(\"true\") \u0026\u0026 !parameter.equals(\"false\")) {","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"            throw new LoadingException(\"invalid value for isDone detected\");","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"        return Boolean.parseBoolean(parameter);","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"     * Makes sense of a line in the data file to be converted into a task.","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"     * @param line A line in the data file.","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"     * @return The task represented by the given line.","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"     * @throws LoadingException If the given line is of incorrect format and does not represent any task.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"    // TODO: Once extractParameter is rewritten, we can move this to Parser","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"    private static Task parseStorageLine(String line) throws LoadingException {","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"        String[] parameters \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"        // The first part of the split indicates the task type","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"        String taskType \u003d parameters[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"        // The second part of the split indicates whether the task is done","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"        boolean isDone \u003d getDone(parameters[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"            Task task \u003d getTask(parameters, taskType);","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"            task.setDone(isDone);","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"            return task;","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"            throw new LoadingException(e.getMessage());","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"    private static Task getTask(String[] parameters, String taskType) throws LoadingException {","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"        // The third part of the split indicates the task description","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"        String description \u003d parameters[2];","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"chin-herng"},"content":"        // Parse the remaining parts of the split according to the task type","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"chin-herng"},"content":"        Task task;","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"chin-herng"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"chin-herng"},"content":"        case Todo.STORAGE_INDICATOR:","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"chin-herng"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"chin-herng"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"chin-herng"},"content":"        case Deadline.STORAGE_INDICATOR:","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parameters[3], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"chin-herng"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"chin-herng"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"chin-herng"},"content":"        case Event.STORAGE_INDICATOR:","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(parameters[3], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(parameters[4], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"chin-herng"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"chin-herng"},"content":"            break;","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"chin-herng"},"content":"        case Period.STORAGE_INDICATOR:","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(parameters[3], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"chin-herng"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(parameters[4], FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"chin-herng"},"content":"            task \u003d new Period(description, start, end);","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"chin-herng"},"content":"            break;","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"chin-herng"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"chin-herng"},"content":"            throw new LoadingException(\"i don\u0027t recognise this storage indicator\");","lastModifiedDate":"2024-02-29"},{"lineNumber":112,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"chin-herng"},"content":"        return task;","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"chin-herng"},"content":"     * Utility method to format the given \u003ccode\u003eLocalDateTime\u003c/code\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"chin-herng"},"content":"     * using the predefined \u003ccode\u003eDateTimeFormatter\u003c/code\u003e.","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"chin-herng"},"content":"     * @param dateTime The given \u003ccode\u003eLocalDateTime\u003c/code\u003e.","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"chin-herng"},"content":"     * @return The formatted string to be stored in the storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"chin-herng"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"chin-herng"},"content":"        return dateTime.format(FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"chin-herng"},"content":"    private ArrayList\u003cTask\u003e loadData() throws IOException, LoadingException {","lastModifiedDate":"2024-02-29"},{"lineNumber":128,"author":{"gitId":"chin-herng"},"content":"        try (Scanner s \u003d new Scanner(dataFile)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":129,"author":{"gitId":"chin-herng"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-29"},{"lineNumber":130,"author":{"gitId":"chin-herng"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"chin-herng"},"content":"                tasks.add(parseStorageLine(s.nextLine()));","lastModifiedDate":"2024-02-29"},{"lineNumber":132,"author":{"gitId":"chin-herng"},"content":"            }","lastModifiedDate":"2024-02-29"},{"lineNumber":133,"author":{"gitId":"chin-herng"},"content":"            return tasks;","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"chin-herng"},"content":"     * Loads data from hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"chin-herng"},"content":"     * @param dataPath The file path in which the data to be loaded is stored.","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"chin-herng"},"content":"     * @return A list of tasks loaded from hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"chin-herng"},"content":"     * @throws LoadingException If an error occurred while loading the tasks from hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"chin-herng"},"content":"    public ArrayList\u003cTask\u003e load(String dataPath) throws LoadingException {","lastModifiedDate":"2024-02-13"},{"lineNumber":145,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"chin-herng"},"content":"            dataFile \u003d createOrRetrieve(dataPath);","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"chin-herng"},"content":"            return loadData();","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"chin-herng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"chin-herng"},"content":"            throw new LoadingException(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"chin-herng"},"content":"    private void writeTask(BufferedWriter bw, Task task) throws IOException {","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"chin-herng"},"content":"        bw.write(task.getStorageFormat());","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"chin-herng"},"content":"        bw.newLine();","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":157,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":158,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"chin-herng"},"content":"     * Saves a new task to hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"chin-herng"},"content":"     * @param task The new task to be saved to hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"chin-herng"},"content":"     * @throws SavingException If an error occurred while saving the new task to hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"chin-herng"},"content":"    public void saveTask(Task task) throws SavingException {","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"chin-herng"},"content":"            FileWriter fw \u003d new FileWriter(dataFile.getAbsoluteFile(), true);","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"chin-herng"},"content":"            try (BufferedWriter bw \u003d new BufferedWriter(fw)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"chin-herng"},"content":"                writeTask(bw, task);","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"chin-herng"},"content":"            }","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"chin-herng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":171,"author":{"gitId":"chin-herng"},"content":"            throw new SavingException(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":172,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":175,"author":{"gitId":"chin-herng"},"content":"    private void rewriteFile(BufferedWriter bw, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"chin-herng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"chin-herng"},"content":"            writeTask(bw, task);","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"chin-herng"},"content":"        bw.flush();","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"chin-herng"},"content":"     * Update the storage with a specified list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":184,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":185,"author":{"gitId":"chin-herng"},"content":"     * @param tasks The list of tasks to update the storage with.","lastModifiedDate":"2024-02-15"},{"lineNumber":186,"author":{"gitId":"chin-herng"},"content":"     * @throws SavingException If an error occurred while saving the tasks in the list of tasks to hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":187,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"chin-herng"},"content":"    public void refresh(ArrayList\u003cTask\u003e tasks) throws SavingException {","lastModifiedDate":"2024-02-12"},{"lineNumber":189,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":190,"author":{"gitId":"chin-herng"},"content":"            FileWriter fw \u003d new FileWriter(dataFile.getAbsoluteFile());","lastModifiedDate":"2024-02-12"},{"lineNumber":191,"author":{"gitId":"chin-herng"},"content":"            try (BufferedWriter bw \u003d new BufferedWriter(fw)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":192,"author":{"gitId":"chin-herng"},"content":"                rewriteFile(bw, tasks);","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"chin-herng"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":194,"author":{"gitId":"chin-herng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"chin-herng"},"content":"            throw new SavingException(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":196,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chin-herng":198}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidPeriodException;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidTaskIndexException;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"import bob.exception.SavingException;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"import bob.task.Deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"import bob.task.Event;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"import bob.task.Period;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"import bob.task.Todo;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":" * Represents the list of tasks for remembered by the program. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":" * a list storing the tasks remembered by the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"     * Returns an empty list of tasks to be used throughout the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"     * Returns an initialised list of tasks to be used throughout the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"        assert tasks !\u003d null : \"tasks is null\";","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"     * Returns the number of tasks currently remembered by the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"     * @return The size of the list of tasks currently remembered by the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"     * Returns the list of tasks after applying a specified filter.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"     * @param filter The filter to apply.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"     * @return The filtered list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"    private ArrayList\u003cTask\u003e listWithFilter(Predicate\u003cTask\u003e filter) {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"        return tasks.parallelStream().filter(filter).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"     * Returns the list of tasks without any filter.","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"    public ArrayList\u003cTask\u003e list() {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"        ArrayList\u003cTask\u003e result \u003d listWithFilter(task -\u003e true);","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"        assert result.size() \u003d\u003d getSize() : String.format(","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"                \"result.size(): %d, getSize(): %d\", result.size(), getSize());","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"        return listWithFilter(task -\u003e true);","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"     * Returns the list of tasks occurring on a specified day.","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"     * @param date The date on which the returned tasks will occur.","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"     * @return The list of tasks occurring on the specified date.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"    public ArrayList\u003cTask\u003e listOnDate(LocalDate date) {","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"        return listWithFilter(task -\u003e task.isOccurringOn(date));","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"     * Returns the list of tasks due in a specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"     * @param days The number of days in which the returned tasks will be due.","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"     * @return The list of tasks due in the specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"    public ArrayList\u003cTask\u003e listDueIn(int days) {","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"        return listWithFilter(task -\u003e task.isDueIn(days));","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"chin-herng"},"content":"     * Returns the list of tasks matching a specified keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"chin-herng"},"content":"     * @param keyword The keyword which the returned tasks will match.","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"chin-herng"},"content":"     * @return The list of tasks matching the specified keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"chin-herng"},"content":"    public ArrayList\u003cTask\u003e listKeyword(String keyword) {","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"chin-herng"},"content":"        return listWithFilter(task -\u003e task.hasKeyword(keyword));","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"chin-herng"},"content":"     * Adds a todo to the list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"chin-herng"},"content":"     * @param description The description of the todo to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"chin-herng"},"content":"     * @return The added todo.","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"chin-herng"},"content":"    public Task addTodo(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"chin-herng"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"chin-herng"},"content":"        return task;","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"chin-herng"},"content":"     * Adds a deadline to the list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"chin-herng"},"content":"     * @param description The description of the deadline to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"chin-herng"},"content":"     * @param by The due time of the deadline to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"chin-herng"},"content":"     * @return The added deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"chin-herng"},"content":"    public Task addDeadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"chin-herng"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"chin-herng"},"content":"        return task;","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"chin-herng"},"content":"     * Adds an event to the list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"chin-herng"},"content":"     * @param description The description of the event to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"chin-herng"},"content":"     * @param from The start time of the event to be added.","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"chin-herng"},"content":"     * @param to The end time of the event to be added.","lastModifiedDate":"2024-02-29"},{"lineNumber":132,"author":{"gitId":"chin-herng"},"content":"     * @return The added event.","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidPeriodException If the end time of the event is earlier than its start time.","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"chin-herng"},"content":"    public Task addEvent(String description, LocalDateTime from, LocalDateTime to) throws InvalidPeriodException {","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"chin-herng"},"content":"        // Check whether event is invalid","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"chin-herng"},"content":"        if (to.isBefore(from)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidPeriodException();","lastModifiedDate":"2024-02-29"},{"lineNumber":139,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"chin-herng"},"content":"        // Add and return the event","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"chin-herng"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"chin-herng"},"content":"        return task;","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"chin-herng"},"content":"     * Adds a period to the list of tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"chin-herng"},"content":"     * @param description The description of the period to be added.","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"chin-herng"},"content":"     * @param start The start time of the period to be added.","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"chin-herng"},"content":"     * @param end The end time of the period to be added.","lastModifiedDate":"2024-02-29"},{"lineNumber":153,"author":{"gitId":"chin-herng"},"content":"     * @return The added period.","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidPeriodException If the end time of the period is earlier than its start time.","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"chin-herng"},"content":"    public Task addPeriod(String description, LocalDateTime start, LocalDateTime end) throws InvalidPeriodException {","lastModifiedDate":"2024-02-29"},{"lineNumber":157,"author":{"gitId":"chin-herng"},"content":"        // Check whether period is invalid","lastModifiedDate":"2024-02-29"},{"lineNumber":158,"author":{"gitId":"chin-herng"},"content":"        if (end.isBefore(start)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidPeriodException();","lastModifiedDate":"2024-02-29"},{"lineNumber":160,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":161,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"chin-herng"},"content":"        // Add and return the period","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d new Period(description, start, end);","lastModifiedDate":"2024-02-29"},{"lineNumber":164,"author":{"gitId":"chin-herng"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"chin-herng"},"content":"        return task;","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":169,"author":{"gitId":"chin-herng"},"content":"     * Marks or unmarks a task with a specified task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":170,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":171,"author":{"gitId":"chin-herng"},"content":"     * @param taskIndex The task index of the task to be marked or unmarked.","lastModifiedDate":"2024-02-15"},{"lineNumber":172,"author":{"gitId":"chin-herng"},"content":"     * @param isDone Whether to mark or unmark the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":173,"author":{"gitId":"chin-herng"},"content":"     * @return The marked or unmarked task.","lastModifiedDate":"2024-02-15"},{"lineNumber":174,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidTaskIndexException If the given task index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"chin-herng"},"content":"    public Task mark(int taskIndex, boolean isDone) throws InvalidTaskIndexException {","lastModifiedDate":"2024-02-12"},{"lineNumber":177,"author":{"gitId":"chin-herng"},"content":"        // Check whether task index is out of bounds","lastModifiedDate":"2024-02-15"},{"lineNumber":178,"author":{"gitId":"chin-herng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d getSize()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":179,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidTaskIndexException(String.valueOf(taskIndex + 1), getSize());","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"chin-herng"},"content":"        // Mark the task using isDone and return it","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":184,"author":{"gitId":"chin-herng"},"content":"        task.setDone(isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"chin-herng"},"content":"        return task;","lastModifiedDate":"2024-02-12"},{"lineNumber":186,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":187,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":188,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"chin-herng"},"content":"     * Deletes a task with a specified task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":190,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"chin-herng"},"content":"     * @param taskIndex The task index of the task to be deleted.","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"chin-herng"},"content":"     * @return The deleted task.","lastModifiedDate":"2024-02-15"},{"lineNumber":193,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidTaskIndexException If the given task index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":195,"author":{"gitId":"chin-herng"},"content":"    public Task delete(int taskIndex) throws InvalidTaskIndexException {","lastModifiedDate":"2024-02-12"},{"lineNumber":196,"author":{"gitId":"chin-herng"},"content":"        // Check whether task index is out of bounds","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"chin-herng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d getSize()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":198,"author":{"gitId":"chin-herng"},"content":"            throw new InvalidTaskIndexException(String.valueOf(taskIndex + 1), getSize());","lastModifiedDate":"2024-02-12"},{"lineNumber":199,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":200,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":201,"author":{"gitId":"chin-herng"},"content":"        // Delete and return the task","lastModifiedDate":"2024-02-15"},{"lineNumber":202,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":203,"author":{"gitId":"chin-herng"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":204,"author":{"gitId":"chin-herng"},"content":"        return task;","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":207,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":208,"author":{"gitId":"chin-herng"},"content":"     * Updates the storage with the current state of the list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":209,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":210,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to perform the update on.","lastModifiedDate":"2024-02-15"},{"lineNumber":211,"author":{"gitId":"chin-herng"},"content":"     * @throws SavingException If an error occurred while updating the storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":212,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":213,"author":{"gitId":"chin-herng"},"content":"    public void updateStorage(Storage storage) throws SavingException {","lastModifiedDate":"2024-02-12"},{"lineNumber":214,"author":{"gitId":"chin-herng"},"content":"        storage.refresh(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":215,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":216,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chin-herng":216}},{"path":"src/main/java/bob/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" * Utility class to handle the user interface (UI) of the program. The class contains various methods to","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" * construct responses to the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    private static final String EXIT \u003d \"ok\";","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    private static final String GREET \u003d \"yo im bob\\nwhat do you want\";","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    private static final int INDENT_SPACE_COUNT \u003d 2;","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    private static final String HEADER_ADD \u003d \"added:\";","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"    private static final String HEADER_DELETE \u003d \"removed:\";","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    private static final String HEADER_FIND \u003d \"matching tasks:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"    private static final String HEADER_LIST \u003d \"list of tasks:\";","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    private static final String HEADER_LOADING_ERROR \u003d \"wait what happened i cant load any data\";","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"    private static final String FOOTER_LOADING_ERROR \u003d \"lets just assume you have no tasks\";","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    private static final String HEADER_MARK \u003d \"good job!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    private static final String HEADER_UNMARK \u003d \"ok you just undid this task\";","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    private static final String FOOTER_DELETE \u003d \"%d task(s) left\";","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"    private static final String FOOTER_NUMBER_OF_TASKS \u003d \"now you have %d task(s)\";","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    private static final String PATTERN_DATE_TIME \u003d \"MMM dd yyyy HHmm\";","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    private static final DateTimeFormatter FORMATTER_DATE_TIME \u003d DateTimeFormatter.ofPattern(PATTERN_DATE_TIME);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"     * Utility method to format the given \u003ccode\u003eLocalDateTime\u003c/code\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"     * using the predefined \u003ccode\u003eDateTimeFormatter\u003c/code\u003e.","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"     * @param dateTime The given \u003ccode\u003eLocalDateTime\u003c/code\u003e.","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"     * @return The formatted string to be displayed to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"        return dateTime.format(FORMATTER_DATE_TIME);","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"     * Displays the specified lines of output to the user after applying indentations.","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"     * @param lines The lines of output to be indented and displayed to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"    public static String getResponse(String ... lines) {","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"        return String.join(\"\\n\", lines);","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"     * Displays the loading error message.","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"    public static String getLoadingErrorResponse(String message) {","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"        return getResponse(HEADER_LOADING_ERROR, message, FOOTER_LOADING_ERROR);","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"     * Greets the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"    public static String getGreetResponse() {","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"        return getResponse(GREET);","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"    // The methods below all display the result of a command.","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"    // As we have more and more commands, it might be better to have CommandResult classes that encapsulates","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"    // whatever is to be displayed after each command.","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"     * Displays the result of adding a task.","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"     * @param task The added task.","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"     * @param numberOfTasks The number of tasks after adding the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"    public static String getAddResponse(Task task, int numberOfTasks) {","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"        String content \u003d \" \".repeat(INDENT_SPACE_COUNT) + task;","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"        String footer \u003d String.format(FOOTER_NUMBER_OF_TASKS, numberOfTasks);","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"        return getResponse(HEADER_ADD, content, footer);","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"chin-herng"},"content":"     * Displays the result of marking or unmarking a task.","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"chin-herng"},"content":"     * @param task The marked or unmarked task.","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"chin-herng"},"content":"     * @param isDone Whether the task is marked or unmarked.","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"chin-herng"},"content":"    public static String getMarkResponse(Task task, boolean isDone) {","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"chin-herng"},"content":"        return getResponse(isDone ? HEADER_MARK : HEADER_UNMARK, \" \".repeat(INDENT_SPACE_COUNT) + task);","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"chin-herng"},"content":"     * Displays the result of deleting a task.","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"chin-herng"},"content":"     * @param task The deleted task.","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"chin-herng"},"content":"     * @param numberOfTasks The number of tasks after deleting the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"chin-herng"},"content":"    public static String getDeleteResponse(Task task, int numberOfTasks) {","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"chin-herng"},"content":"        String indentedTask \u003d \" \".repeat(INDENT_SPACE_COUNT) + task;","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"chin-herng"},"content":"        String footer \u003d String.format(FOOTER_DELETE, numberOfTasks);","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"chin-herng"},"content":"        return getResponse(HEADER_DELETE, indentedTask, footer);","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"chin-herng"},"content":"     * Displays a specified list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"chin-herng"},"content":"     * @param tasks The specified list of tasks to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"chin-herng"},"content":"     * @param header The header of the display.","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"chin-herng"},"content":"    public static String getListResponse(ArrayList\u003cTask\u003e tasks, String header) {","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"chin-herng"},"content":"        // Prepare an array to store the lines to display, setting the first element as the header line","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"chin-herng"},"content":"        String[] lines \u003d new String[tasks.size() + 1];","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"chin-herng"},"content":"        lines[0] \u003d header;","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"chin-herng"},"content":"        // Go through the given list and add them into lines","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"chin-herng"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"chin-herng"},"content":"            lines[i + 1] \u003d (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"chin-herng"},"content":"        return getResponse(lines);","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"chin-herng"},"content":"     * Displays a specified list of tasks using the default list header.","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"chin-herng"},"content":"     * @param tasks The specified list of tasks to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"chin-herng"},"content":"    public static String getListResponse(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"chin-herng"},"content":"        return getListResponse(tasks, HEADER_LIST);","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"chin-herng"},"content":"     * Displays a specified list of tasks using the find header.","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"chin-herng"},"content":"     * @param tasks The specified list of tasks to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"chin-herng"},"content":"    public static String getFindResponse(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"chin-herng"},"content":"        return getListResponse(tasks, HEADER_FIND);","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":148,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"chin-herng"},"content":"     * Displays the exit message.","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"chin-herng"},"content":"    public static String getExitResponse() {","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"chin-herng"},"content":"        return getResponse(EXIT);","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":155}},{"path":"src/main/java/bob/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an action to add a task. An \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * a command to add a task with a specified description.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"    protected String description;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to add a task with a specified description.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the task to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":18}},{"path":"src/main/java/bob/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import bob.exception.SavingException;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":" * Represents an action to add a deadline. An \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":" * a command to add a deadline with a specified description and due time.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to add a deadline with a specified description and due time.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the deadline to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     * @param by The due time for the deadline to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    public AddDeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to add a deadline with a specified description and due time.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to save the new deadline in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list to store the new deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"     * @return The response as a result of adding the deadline.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"     * @throws SavingException If there was an error saving the new deadline in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) throws SavingException {","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d taskList.addDeadline(description, by);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"        storage.saveTask(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"        return Ui.getAddResponse(task, taskList.getSize());","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":43}},{"path":"src/main/java/bob/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidPeriodException;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import bob.exception.SavingException;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":" * Represents an action to add an event. An \u003ccode\u003eAddEventCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":" * a command to add an event with a specified description, start time and end time.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to add an event with a specified description, start time and end time.","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the event to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"     * @param from The start time for the event to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"     * @param to The end time for the event to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    public AddEventCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to add an event with a specified description, start time and end time.","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to save the new event in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list to store the new event.","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"     * @return The response as a result of adding the event.","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"     * @throws SavingException If there was an error saving the new event in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) throws SavingException, InvalidPeriodException {","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d taskList.addEvent(description, from, to);","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"        storage.saveTask(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"        return Ui.getAddResponse(task, taskList.getSize());","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":47}},{"path":"src/main/java/bob/command/AddPeriodCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidPeriodException;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import bob.exception.SavingException;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":" * Represents an action to add a task. An \u003ccode\u003eAddPeriodCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":" * a command to add a task with a specified description, start time and end time.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"public class AddPeriodCommand extends AddCommand {","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to add a task with a specified description, start time and end time.","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the task to be added.","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"     * @param start The start time for the task to be added.","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"     * @param end The end time for the task to be added.","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    public AddPeriodCommand(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"        super(description);","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to add a task with a specified description, start time and end time.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to save the new task in hard disk.","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list to store the new task.","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"     * @return The response as a result of adding the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"     * @throws SavingException If there was an error saving the new task in hard disk.","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) throws SavingException, InvalidPeriodException {","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d taskList.addPeriod(description, start, end);","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"        storage.saveTask(task);","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"        return Ui.getAddResponse(task, taskList.getSize());","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"chin-herng":47}},{"path":"src/main/java/bob/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.exception.SavingException;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" * Represents an action to add a todo. An \u003ccode\u003eAddTodoCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" * a command to add a todo with a specified description.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to add a todo with a specified description.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the todo to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to add a todo with a specified description.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to save the new todo in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list to store the new todo.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"     * @return The response as a result of adding the todo.","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"     * @throws SavingException If there was an error saving the new todo in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) throws SavingException {","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d taskList.addTodo(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"        storage.saveTask(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"        return Ui.getAddResponse(task, taskList.getSize());","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":37}},{"path":"src/main/java/bob/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.exception.BobException;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":" * Represents an arbitrary action. A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":" * an action to execute according to the command entered by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     * Executes the encapsulated action.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to save the changes resulting from execution of the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list to keep track of the tasks before and after executing the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"     * @return The response as a result of executing the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     * @throws BobException If there is an error executing the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    public abstract String execute(Storage storage, TaskList taskList) throws BobException;","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":21}},{"path":"src/main/java/bob/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidTaskIndexException;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.exception.SavingException;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" * Represents an action to delete a task. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":" * a command to delete a task with a task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to delete a task with a specified task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"     * @param taskIndex The task index for the task to be deleted.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to delete a task with a specified task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to update the task list in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list to store the list of tasks after the deletion.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"     * @return The response as a result of deleting the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidTaskIndexException If the specified task index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"     * @throws SavingException If there was an error updating the task list in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) throws InvalidTaskIndexException, SavingException {","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d taskList.delete(taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"        taskList.updateStorage(storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"        return Ui.getDeleteResponse(task, taskList.getSize());","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":41}},{"path":"src/main/java/bob/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":" * Represents an action to show the exit message. An \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":" * a command to exit the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to show the exit message.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage during which the program exits.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list during which the program exits.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"     * @return The exit message to be displayed.","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"        return Ui.getExitResponse();","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":23}},{"path":"src/main/java/bob/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":" * Represents an action to list the tasks. A \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":" * a command to list all tasks currently in the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to list the tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to retrieve the tasks to list.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list that stores the tasks to be listed.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"     * @return The response containing the list of tasks to be displayed.","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"        return Ui.getListResponse(taskList.list());","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":23}},{"path":"src/main/java/bob/command/ListDueInCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":" * Represents an action to list the tasks due in a specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":" * A \u003ccode\u003eListDueInCommand\u003c/code\u003e object corresponds to a command to list all tasks currently in the task list","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" * that is due in a specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"public class ListDueInCommand extends ListCommand {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    private final int days;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to list the tasks due in a specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     * @param days The number of days in which the listed tasks are due in.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    public ListDueInCommand(int days) {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"        this.days \u003d days;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to list the tasks due in a specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to retrieve the tasks to list.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list that stores the tasks that might be listed.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"     * @return The response containing the list of tasks to be displayed.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"        return Ui.getListResponse(taskList.listDueIn(days));","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":35}},{"path":"src/main/java/bob/command/ListKeywordCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":" * Represents an action to list the tasks matching a specified keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":" * A \u003ccode\u003eListKeywordCommand\u003c/code\u003e object corresponds to a command to list all tasks currently in the task list","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" * that have a specified keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"public class ListKeywordCommand extends ListCommand {","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to list the tasks matching a specified keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     * @param keyword The keyword which the listed tasks are to match.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    public ListKeywordCommand(String keyword) {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to list the tasks matching a specified keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to retrieve the tasks to list.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list that stores the tasks that might be listed.","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"     * @return The response containing the list of tasks to be displayed.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"        return Ui.getFindResponse(taskList.listKeyword(keyword));","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"chin-herng":35}},{"path":"src/main/java/bob/command/ListOnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" * Represents an action to list the tasks on a specified day.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" * A \u003ccode\u003eListOnDateCommand\u003c/code\u003e object corresponds to a command to list all tasks currently in the task list","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":" * that is occurring on a specified date.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"public class ListOnDateCommand extends ListCommand {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to list the tasks on a specified day.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"     * @param date The date on which the listed tasks are to occur.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    public ListOnDateCommand(LocalDate date) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to list the tasks on a specified day.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to retrieve the tasks to list.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list that stores the tasks that might be listed.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"     * @return The response containing the list of tasks to be displayed.","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"        return Ui.getListResponse(taskList.listOnDate(date));","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":37}},{"path":"src/main/java/bob/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import bob.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.exception.InvalidTaskIndexException;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.exception.SavingException;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" * Represents an action to mark or unmark a task with a specified task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":" * A \u003ccode\u003eMarkCommand\u003c/code\u003e object corresponds to a command to mark a task as done or undone.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    private final boolean isDone;","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     * Returns a command to mark or unmark a task with a specified task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     * @param taskIndex The task index for the task to be marked or unmarked.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     * @param isDone Whether the task is to be marked or unmarked.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    public MarkCommand(int taskIndex, boolean isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     * Executes the command to mark or unmark a task with a specified task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"     * @param storage The storage to update the task list in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"     * @param taskList The task list to store the list of tasks after the mark or unmark.","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"     * @return The response as a result of marking or unmarking the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"     * @throws InvalidTaskIndexException If the specified task index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"     * @throws SavingException If there was an error updating the task list in hard disk.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"    public String execute(Storage storage, TaskList taskList) throws InvalidTaskIndexException, SavingException {","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"        Task task \u003d taskList.mark(taskIndex, isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"        taskList.updateStorage(storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"        return Ui.getMarkResponse(task, task.getDone());","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":44}},{"path":"src/main/java/bob/exception/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error specific to Bob. A \u003ccode\u003eBobException\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * an error that is specific to the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"public class BobException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"     * Returns an error specific to Bob with a specified message.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"     * @param message The message for the error specific to Bob.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    public BobException(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"        super(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":16}},{"path":"src/main/java/bob/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error indicating that a command is given without a description.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * An \u003ccode\u003eEmptyDescriptionException\u003c/code\u003e object corresponds to an error indicating that a command","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * that requires a description is given without a description.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"public class EmptyDescriptionException extends BobException {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"    private static final String MESSAGE \u003d \"%s what\";","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     * Returns an error indicating that a command is given without a description.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     * @param command The command that expects a description.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    public EmptyDescriptionException(String command) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"        super(String.format(MESSAGE, command));","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":19}},{"path":"src/main/java/bob/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error indicating that an invalid command has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * An \u003ccode\u003eInvalidCommandException\u003c/code\u003e object corresponds to an error indicating","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * that an undefined command has been entered by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"public class InvalidCommandException extends BobException {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"    private static final String MESSAGE \u003d \"what\";","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     * Returns an error indicating that an invalid command has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"        super(MESSAGE);","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":17}},{"path":"src/main/java/bob/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error indicating that an invalid date and time has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * An \u003ccode\u003eInvalidDateTimeException\u003c/code\u003e object corresponds to an error indicating","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * that a date and time of an invalid format has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"public class InvalidDateTimeException extends BobException {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"    private static final String MESSAGE \u003d \"i only understand %s, but you gave me %s\";","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     * Returns an error indicating that an invalid date and time has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     * @param format The expected date and time format.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"     * @param parsedString The date and time given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    public InvalidDateTimeException(String format, String parsedString) {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"        super(String.format(MESSAGE, format, parsedString));","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":20}},{"path":"src/main/java/bob/exception/InvalidDaysException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error indicating that an invalid number of days has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * An \u003ccode\u003eInvalidDaysException\u003c/code\u003e object corresponds to an error indicating","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * that the number of days given by the user is not an integer.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"public class InvalidDaysException extends BobException {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"    private static final String MESSAGE \u003d \"how many days is %s days???\";","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     * Returns an error indicating that an invalid number of days has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     * @param parsedString The number of days given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    public InvalidDaysException(String parsedString) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"        super(String.format(MESSAGE, parsedString));","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":19}},{"path":"src/main/java/bob/exception/InvalidPeriodException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error indicating that an invalid period has been given by the user.","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * An \u003ccode\u003eInvalidPeriodException\u003c/code\u003e object corresponds to an error indicating","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * that the start time of the period given by the user is later than its end time.","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"public class InvalidPeriodException extends BobException {","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"    private static final String MESSAGE \u003d \"it ends before it starts???\";","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     * Returns an error indicating that an invalid period has been given by the user.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public InvalidPeriodException() {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"        super(MESSAGE);","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"chin-herng":17}},{"path":"src/main/java/bob/exception/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error indicating that an invalid task index has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * An \u003ccode\u003eInvalidTaskIndexException\u003c/code\u003e object corresponds to an error indicating","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * that the task index given by the user is not a number or is out of range.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"public class InvalidTaskIndexException extends BobException {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"    private static final String MESSAGE_NAN \u003d \"%s? that\u0027s not even a number\";","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"    private static final String MESSAGE_OUT_OF_BOUNDS \u003d \"bro i want a number between 1 and %s but you gave me %s\";","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     * Returns an error indicating that an invalid task index has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"     * @param parsedString The task index given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    public InvalidTaskIndexException(String parsedString) {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"        super(String.format(MESSAGE_NAN, parsedString));","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     * Returns an error indicating that an invalid task index has been given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"     * @param parsedString The task index given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"     * @param numberOfTasks The number of tasks currently in the task list,","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"     *                      to indicate the expected range of task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"    public InvalidTaskIndexException(String parsedString, int numberOfTasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        super(String.format(MESSAGE_OUT_OF_BOUNDS, numberOfTasks, parsedString));","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"chin-herng":31}},{"path":"src/main/java/bob/exception/LoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error occurred during the loading of tasks from storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * A \u003ccode\u003eLoadingException\u003c/code\u003e object corresponds to an error arising from loading the tasks stored in storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"public class LoadingException extends BobException {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"     * Returns an error occurred during the loading of tasks from storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"     * @param message The message for the error occurred during the loading of tasks from storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    public LoadingException(String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"        super(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":16}},{"path":"src/main/java/bob/exception/ParameterNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error indicating that a parameter has not been found in the command given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * A \u003ccode\u003eParameterNotFoundException\u003c/code\u003e object corresponds to an error indicating","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * that an expected parameter is missing in the command given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"public class ParameterNotFoundException extends BobException {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"    private static final String MESSAGE \u003d \"tell me what\u0027s your %s\";","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     * Returns an error indicating that a parameter has not been found in the command given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     * @param parameter The parameter that has not been found.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    public ParameterNotFoundException(String parameter) {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"        super(String.format(MESSAGE, parameter));","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     * Returns an error indicating that a parameter has not been found in the command given by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     * @param parameters The possible expected parameters that has not been found.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"    public ParameterNotFoundException(String[] parameters) {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"        super(String.format(MESSAGE, String.join(\" or \", parameters)));","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"chin-herng":28}},{"path":"src/main/java/bob/exception/SavingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents an error occurred during the saving of tasks to storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * A \u003ccode\u003eSavingException\u003c/code\u003e object corresponds to an error arising from saving the tasks to storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"public class SavingException extends BobException {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"    private static final String MESSAGE \u003d \"i cant save this task because %s\";","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"     * Returns an error occurred during the saving of tasks to storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     * @param message The message for the error occurred during the saving of tasks to storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    public SavingException(String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"        super(String.format(MESSAGE, message));","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":18}},{"path":"src/main/java/bob/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.gui;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    private static final double DISPLAY_PICTURE_SIZE \u003d 100;","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"    private static final int DISPLAY_PICTURE_RADIUS \u003d 45;","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    private static final Color USER_BACKGROUND_COLOR \u003d Color.web(\"#37CAEC\");","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"    private static final Color BOB_BACKGROUND_COLOR \u003d Color.web(\"#2A93D5\");","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"        double centerLocation \u003d DISPLAY_PICTURE_SIZE / 2;","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"        displayPicture.setClip(new Circle(centerLocation, centerLocation, DISPLAY_PICTURE_RADIUS));","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"     * Fix the label height to avoid being resized by the scroll pane.","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"    @FXML","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"        dialog.setMaxHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"    private void flip() {","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"    private void setBackgroundColor(Color color) {","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"        setBackground(new Background(new BackgroundFill(color, new CornerRadii(0), new Insets(0))));","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"        db.setBackgroundColor(USER_BACKGROUND_COLOR);","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"        return db;","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"    public static DialogBox getBobDialog(String text, Image img) {","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"        db.setBackgroundColor(BOB_BACKGROUND_COLOR);","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"        db.flip();","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"        return db;","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"chin-herng":89}},{"path":"src/main/java/bob/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.gui;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import java.net.URL;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.Bob;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import bob.Parser;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":" * The \u003ccode\u003eMainWindow\u003c/code\u003e control. Provides the layout for the other controls.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"public class MainWindow extends VBox {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"    private static final String IMAGE_BOB \u003d \"DaDuke.png\";","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    private static final String IMAGE_USER \u003d \"DaUser.png\";","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    private static final String PATH_IMAGES \u003d \"/images/\";","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    private static final String PATH_STYLESHEETS \u003d \"/stylesheets/\";","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    private static final String STYLESHEET \u003d \"styles.css\";","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"    private Stage stage;","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"    private Bob bob;","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(PATH_IMAGES + IMAGE_USER)));","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"    private final Image bobImage \u003d new Image(","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(PATH_IMAGES + IMAGE_BOB)));","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"     * Returns a \u003ccode\u003eMainWindow\u003c/code\u003e control that provides the layout for the other controls.","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"     * @param stage The stage that is set to show the control","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"    public MainWindow(Stage stage) {","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/MainWindow.fxml\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"            Scene scene \u003d new Scene(this);","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"            URL url \u003d Objects.requireNonNull(MainWindow.class.getResource(PATH_STYLESHEETS + STYLESHEET));","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"            scene.getStylesheets().add(url.toExternalForm());","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"            stage.setTitle(\"Bob\");","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"            this.stage \u003d stage;","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"    public void setBob(Bob b) {","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"        bob \u003d b;","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"        dialogContainer.getChildren().add(DialogBox.getBobDialog(bob.getInitialMessage(), bobImage));","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"chin-herng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"chin-herng"},"content":"        String response \u003d bob.getResponse(input);","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"chin-herng"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"chin-herng"},"content":"        DialogBox bobDialog \u003d DialogBox.getBobDialog(response, bobImage);","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"chin-herng"},"content":"        dialogContainer.getChildren().addAll(userDialog, bobDialog);","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"chin-herng"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"chin-herng"},"content":"        if (input.equals(Parser.COMMAND_EXIT)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"chin-herng"},"content":"            stage.close();","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"chin-herng"},"content":"    public void show() {","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"chin-herng"},"content":"        stage.show();","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"chin-herng":106}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" * Represents a deadline with a specified description and due time. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" * a task with a description and a due time.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public static final String STORAGE_INDICATOR \u003d \"D\";","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     * Returns a deadline with a specified description and due time.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     * @param by The due time for the deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"        super(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     * Returns storage format of the deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the deadline in storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"        return STORAGE_INDICATOR + \" | \" + super.getStorageFormat() + \" | \"","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"                + Storage.formatDateTime(by);","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"     * Returns whether the deadline is due in a specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"     * @param days The number of days in which the deadline is said to be due.","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"     * @return Whether the deadline is due in the specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"    public boolean isDueIn(int days) {","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"        boolean isUpcoming \u003d by.isAfter(LocalDateTime.now());","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"        boolean isWithin \u003d ChronoUnit.DAYS.between(LocalDateTime.now(), by) \u003c\u003d days;","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"        return isUpcoming \u0026\u0026 isWithin \u0026\u0026 !isDone;","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the deadline to be displayed to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Ui.formatDateTime(by) + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":62}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" * Represents an event with a specified description, start time and end time.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" * An \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a task with a description, a start time and an end time.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public static final String STORAGE_INDICATOR \u003d \"E\";","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"     * Returns an event with a specified description, start time and end time.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     * @param from The start time for the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"     * @param to The end time for the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"        super(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"     * Returns storage format of the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the event in storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"        return STORAGE_INDICATOR + \" | \" + super.getStorageFormat() + \" | \"","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"                + Storage.formatDateTime(from) + \" | \" + Storage.formatDateTime(to);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"     * Returns whether the event is occurring on a specified day.","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"     * @param date The date on which the event is said to occur on.","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"     * @return Whether the event is occurring on the specified date.","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"    public boolean isOccurringOn(LocalDate date) {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"        return !(date.isBefore(from.toLocalDate()) || date.isAfter(to.toLocalDate()));","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the event to be displayed to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + Ui.formatDateTime(from)","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"                + \" to: \" + Ui.formatDateTime(to) + \u0027)\u0027;","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":64}},{"path":"src/main/java/bob/task/Period.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import bob.Storage;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import bob.Ui;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":" * Represents a task that need to be done within a certain period.","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":" * A \u003ccode\u003ePeriod\u003c/code\u003e object corresponds to a task to be done from a certain start date to end date.","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"public class Period extends Task {","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public static final String STORAGE_INDICATOR \u003d \"P\";","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"     * Returns a task with a specified description, start time and end time.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     * @param start The start time for the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"     * @param end The end time for the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    public Period(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"        super(description);","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"     * Returns storage format of the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the task in storage.","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"        return STORAGE_INDICATOR + \" | \" + super.getStorageFormat() + \" | \"","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"                + Storage.formatDateTime(start) + \" | \" + Storage.formatDateTime(end);","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"     * Returns whether the task is due in a specified number of days.","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"     * @param days The number of days in which the task is said to be due.","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"     * @return Whether the task is due in the specified number of days.","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"    public boolean isDueIn(int days) {","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"        boolean hasStarted \u003d start.isBefore(LocalDateTime.now());","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"        boolean isUpcoming \u003d end.isAfter(LocalDateTime.now());","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"        boolean isWithin \u003d ChronoUnit.DAYS.between(LocalDateTime.now(), end) \u003c\u003d days;","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"        return hasStarted \u0026\u0026 isUpcoming \u0026\u0026 isWithin \u0026\u0026 !isDone;","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the task to be displayed to the user.","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"        return \"[P]\" + super.toString() + \" (start: \" + Ui.formatDateTime(start)","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"                + \" end: \" + Ui.formatDateTime(end) + \u0027)\u0027;","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"chin-herng":67}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * Represents a task with a specified description. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" * a task with a description.","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"    private static final String DONE_ICON \u003d \"X\";","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    private static final String NOT_DONE_ICON \u003d \" \";","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"     * Returns a task with a specified description.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"     * @return The done icon if the task is done, and the not done icon otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"        return (isDone ? DONE_ICON : NOT_DONE_ICON);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"     * Getter for the \u003ccode\u003eisDone\u003c/code\u003e field.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"     * @return Whether the task is done.","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"    public boolean getDone() {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"        return isDone;","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"     * Setter for the \u003ccode\u003eisDone\u003c/code\u003e field.","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"     * @param isDone Whether the task is to be set as done or undone.","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"     * Returns storage format of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the task in storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"        return (isDone ? \"true\" : \"false\") + \" | \" + description;","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"     * Returns whether the task is occurring on a specified day.","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"     * @param date The date on which the task is said to occur on.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"     * @return Whether the task is occurring on the specified date.","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"    public boolean isOccurringOn(LocalDate date) {","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"        return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"     * Returns whether the task is due in a specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"     * @param days The number of days in which the task is said to be due.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"     * @return Whether the task is due in the specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"    public boolean isDueIn(int days) {","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"        return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"     * Returns whether the task matches a specified keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"     * @param keyword The keyword which the task is said to match.","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"     * @return Whether the task has the specified keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"        return description.contains(keyword);","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"chin-herng"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the task to be displayed to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"chin-herng"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"chin-herng"},"content":"        return \u0027[\u0027 + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":101}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":" * Represents a todo with a specified description. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":" * a todo with a description.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"    public static final String STORAGE_INDICATOR \u003d \"T\";","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"     * Returns a todo with a specified description.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"     * @param description The description for the todo.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"        super(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"     * Returns storage format of the todo.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the todo in storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"        return STORAGE_INDICATOR + \" | \" + super.getStorageFormat();","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"     * Returns the string representation of the todo.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"     * @return The string representation of the todo to be displayed to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":38}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"         spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"chin-herng":16}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"VBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"   \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"               vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"      \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"   \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"   \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"         prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"/\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"              prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"   \u003c/HBox\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"chin-herng":22}},{"path":"src/test/java/bob/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import bob.exception.BobException;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"    // These tests are essentially testing extractParameters and are thus redundant.","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"    // Will be removed and replaced by only a few tests once extractParameters are rewritten.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public void parse_listWithDescription_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"list a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"tell me what\u0027s your on or due_in\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    public void parse_listOnInvalidDate_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"list /on a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"i only understand d/M/yyyy, but you gave me a\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    public void parse_listOnInvalidDays_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"list /due_in a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"how many days is a days???\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"    public void parse_markInvalidTaskIndex_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"mark a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"a? that\u0027s not even a number\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"    public void parse_deleteInvalidTaskIndex_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"delete a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"a? that\u0027s not even a number\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"    public void parse_markEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"mark\");","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"mark what\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"    public void parse_deleteEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"delete\");","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"delete what\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"    public void parse_addDeadlineInvalidDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"deadline a /by a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"i only understand d/M/yyyy HHmm, but you gave me a\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"chin-herng"},"content":"    public void parse_addEventInvalidDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"event a /from a /to a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"i only understand d/M/yyyy HHmm, but you gave me a\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"chin-herng"},"content":"    public void parse_addTodoEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"todo what\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"chin-herng"},"content":"    public void parse_addDeadlineEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"deadline\");","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"deadline what\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"chin-herng"},"content":"    public void parse_addEventEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"event\");","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"event what\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"chin-herng"},"content":"    public void parse_addDeadlineMissingBy_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"deadline a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"tell me what\u0027s your by\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"chin-herng"},"content":"    public void parse_addEventMissingFrom_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"event a /to 12/2/2024 2158\");","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"tell me what\u0027s your from\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"chin-herng"},"content":"    public void parse_addEventMissingTo_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"event a /from 12/2/2024 2158\");","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"tell me what\u0027s your to\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"chin-herng"},"content":"    public void parse_addPeriodMissingStart_exceptionThrown() {","lastModifiedDate":"2024-02-29"},{"lineNumber":164,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"period a /end 12/2/2024 2158\");","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"tell me what\u0027s your start\", e.getMessage());","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":171,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"chin-herng"},"content":"    public void parse_addEventMissingEnd_exceptionThrown() {","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"period a /start 12/2/2024 2158\");","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"tell me what\u0027s your end\", e.getMessage());","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"chin-herng"},"content":"    public void parse_findEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-15"},{"lineNumber":184,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":185,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"find\");","lastModifiedDate":"2024-02-15"},{"lineNumber":186,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-15"},{"lineNumber":187,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"find what\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":190,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":193,"author":{"gitId":"chin-herng"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":194,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":195,"author":{"gitId":"chin-herng"},"content":"            Parser.parse(\"\");","lastModifiedDate":"2024-02-12"},{"lineNumber":196,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":197,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":198,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"what\", e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":199,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":200,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":201,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":201}},{"path":"src/test/java/bob/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"import bob.exception.BobException;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"import bob.task.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"import bob.task.TaskStub;","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"    private static final int NUMBER_OF_TASKS \u003d 8;","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    private static final String[] FILE_CONTENTS \u003d new String[] {","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"        \"T | false | a\",","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"        \"T | true | a\",","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"        \"D | false | a | 2024-02-12T23:12:00\",","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"        \"D | true | a | 2024-02-12T23:12:00\",","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"        \"E | false | a | 2024-02-11T23:12:00 | 2024-02-12T23:12:00\",","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"        \"E | true | a | 2024-02-11T23:12:00 | 2024-02-12T23:12:00\",","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        \"P | false | a | 2024-02-11T23:12:00 | 2024-02-12T23:12:00\",","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"        \"P | true | a | 2024-02-11T23:12:00 | 2024-02-12T23:12:00\"","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"    };","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    private static final String[] EXPECTED_TASKS \u003d new String[] {","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"        \"[T][ ] a\",","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"        \"[T][X] a\",","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"        \"[D][ ] a (by: Feb 12 2024 2312)\",","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"        \"[D][X] a (by: Feb 12 2024 2312)\",","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"        \"[E][ ] a (from: Feb 11 2024 2312 to: Feb 12 2024 2312)\",","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"        \"[E][X] a (from: Feb 11 2024 2312 to: Feb 12 2024 2312)\",","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"        \"[P][ ] a (start: Feb 11 2024 2312 end: Feb 12 2024 2312)\",","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"        \"[P][X] a (start: Feb 11 2024 2312 end: Feb 12 2024 2312)\"","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"    };","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"    @TempDir","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"    Path sharedTempDir;","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"    private void compareWithExpected(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_TASKS; i++) {","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"            assertEquals(EXPECTED_TASKS[i], tasks.get(i).toString());","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"    public void load_validDataFile_success() throws IOException {","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"        Path dataPath \u003d sharedTempDir.resolve(\"bob.txt\");","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(dataPath.toFile().getAbsoluteFile()));","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"        for (String fileContent : FILE_CONTENTS) {","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"            bw.write(fileContent);","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"            bw.newLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"        bw.flush();","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"        bw.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new Storage().load(dataPath.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"            compareWithExpected(tasks);","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"    public void load_invalidStorageIndicator_exceptionThrown() throws IOException {","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"        Path dataPath \u003d sharedTempDir.resolve(\"bob.txt\");","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(dataPath.toFile().getAbsoluteFile()));","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"        bw.write(\"A | false | a\");","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"        bw.flush();","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"        bw.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"chin-herng"},"content":"            new Storage().load(dataPath.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"i don\u0027t recognise this storage indicator\", e.getMessage());","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"chin-herng"},"content":"    public void load_invalidIsDone_exceptionThrown() throws IOException {","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"chin-herng"},"content":"        Path dataPath \u003d sharedTempDir.resolve(\"bob.txt\");","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"chin-herng"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(dataPath.toFile().getAbsoluteFile()));","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"chin-herng"},"content":"        bw.write(\"T | 1 | a\");","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"chin-herng"},"content":"        bw.flush();","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"chin-herng"},"content":"        bw.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"chin-herng"},"content":"            new Storage().load(dataPath.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"invalid value for isDone detected\", e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"chin-herng"},"content":"    public void load_generalInvalid_exceptionThrown() throws IOException {","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"chin-herng"},"content":"        Path dataPath \u003d sharedTempDir.resolve(\"bob.txt\");","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"chin-herng"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(dataPath.toFile().getAbsoluteFile()));","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"chin-herng"},"content":"        bw.write(\"T | true\");","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"chin-herng"},"content":"        bw.flush();","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"chin-herng"},"content":"        bw.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"chin-herng"},"content":"            new Storage().load(dataPath.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"Index 2 out of bounds for length 2\", e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"chin-herng"},"content":"    public void saveTask() throws IOException {","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"chin-herng"},"content":"        Path dataPath \u003d sharedTempDir.resolve(\"bob.txt\");","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"chin-herng"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"chin-herng"},"content":"            storage.load(dataPath.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"chin-herng"},"content":"            Task task \u003d new TaskStub(\"a\");","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"chin-herng"},"content":"            storage.saveTask(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":134,"author":{"gitId":"chin-herng"},"content":"            Scanner s \u003d new Scanner(dataPath.toFile());","lastModifiedDate":"2024-02-13"},{"lineNumber":135,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"storage format\", s.nextLine());","lastModifiedDate":"2024-02-13"},{"lineNumber":136,"author":{"gitId":"chin-herng"},"content":"            s.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":137,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":138,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"chin-herng"},"content":"    private static void checkFile(Scanner s) {","lastModifiedDate":"2024-02-29"},{"lineNumber":143,"author":{"gitId":"chin-herng"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":144,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"storage format\", s.nextLine());","lastModifiedDate":"2024-02-29"},{"lineNumber":145,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":146,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":147,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"chin-herng"},"content":"    public void refresh() throws IOException {","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"chin-herng"},"content":"        Path dataPath \u003d sharedTempDir.resolve(\"bob.txt\");","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"chin-herng"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-29"},{"lineNumber":153,"author":{"gitId":"chin-herng"},"content":"        tasks.add(new TaskStub(\"a\"));","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"chin-herng"},"content":"        tasks.add(new TaskStub(\"a\"));","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"chin-herng"},"content":"        tasks.add(new TaskStub(\"a\"));","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":157,"author":{"gitId":"chin-herng"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(dataPath.toFile().getAbsoluteFile()));","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"chin-herng"},"content":"        for (String fileContent : FILE_CONTENTS) {","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"chin-herng"},"content":"            bw.write(fileContent);","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"chin-herng"},"content":"            bw.newLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"chin-herng"},"content":"        bw.flush();","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"chin-herng"},"content":"        bw.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":164,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"chin-herng"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"chin-herng"},"content":"            storage.load(dataPath.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":168,"author":{"gitId":"chin-herng"},"content":"            storage.refresh(tasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":169,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":170,"author":{"gitId":"chin-herng"},"content":"            Scanner s \u003d new Scanner(dataPath.toFile());","lastModifiedDate":"2024-02-13"},{"lineNumber":171,"author":{"gitId":"chin-herng"},"content":"            checkFile(s);","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"chin-herng"},"content":"            s.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":173,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":174,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":175,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":176,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":177,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"chin-herng":177}},{"path":"src/test/java/bob/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import java.util.List;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"import bob.exception.BobException;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"import bob.task.TaskStub;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    public void addEvent_invalidEvent_exceptionThrown() {","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"            new TaskList().addEvent(\"\", LocalDateTime.now().plusDays(1), LocalDateTime.now());","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"it ends before it starts???\", e.getMessage());","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    public void addPeriod_invalidPeriod_exceptionThrown() {","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"            new TaskList().addPeriod(\"\", LocalDateTime.now().plusDays(1), LocalDateTime.now());","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"it ends before it starts???\", e.getMessage());","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"    public void mark_nonPositiveTaskIndex_exceptionThrown() {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(List.of(new TaskStub(\"a\"))));","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"            taskList.mark(-1, true);","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"bro i want a number between 1 and 1 but you gave me 0\", e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"    public void mark_tooLargeTaskIndex_exceptionThrown() {","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(List.of(new TaskStub(\"a\"))));","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"            taskList.mark(1, true);","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"bro i want a number between 1 and 1 but you gave me 2\", e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"    public void delete_nonPositiveTaskIndex_exceptionThrown() {","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(List.of(new TaskStub(\"a\"))));","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"            taskList.delete(-1);","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"bro i want a number between 1 and 1 but you gave me 0\", e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"    public void delete_tooLargeTaskIndex_exceptionThrown() {","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(List.of(new TaskStub(\"a\"))));","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"chin-herng"},"content":"            taskList.delete(1);","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"chin-herng"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"chin-herng"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"chin-herng"},"content":"            assertEquals(\"bro i want a number between 1 and 1 but you gave me 2\", e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"chin-herng"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"chin-herng":79}},{"path":"src/test/java/bob/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"import java.util.List;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import bob.task.TaskStub;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"public class UiTest {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public void getListResponse_nonEmptyTasks() {","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"a\\n1. a\\n2. a\\n3. a\", Ui.getListResponse(new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"                new TaskStub(\"a\"),","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"                new TaskStub(\"a\"),","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"                new TaskStub(\"a\")","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"        )), \"a\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"    public void getListResponse_emptyTasks() {","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"a\", Ui.getListResponse(new ArrayList\u003c\u003e(), \"a\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"chin-herng":26}},{"path":"src/test/java/bob/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import java.time.Month;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public void getStorageFormat() {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"D | false | a | 2024-02-12T19:37:00\", new Deadline(\"a\",","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0))","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"                .getStorageFormat());","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"        Deadline deadline \u003d new Deadline(\"a\",","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0));","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"        deadline.setDone(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"D | true | a | 2024-02-12T19:37:00\", deadline.getStorageFormat());","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    public void isDueIn() {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Deadline(\"\", LocalDateTime.now().plusDays(9)).isDueIn(7));","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Deadline(\"\", LocalDateTime.now().minusDays(1)).isDueIn(0));","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Deadline(\"\",","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0))","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"                .isDueIn(-1));","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"        assertTrue(new Deadline(\"\", LocalDateTime.now().plusHours(1)).isDueIn(0));","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Deadline(\"\", LocalDateTime.now().minusHours(1)).isDueIn(0));","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"    public void toString_notDone() {","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"[D][ ] a (by: Feb 12 2024 1937)\", new Deadline(\"a\",","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0))","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"                .toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"    public void toString_done() {","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"        Deadline deadline \u003d new Deadline(\"a\",","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0));","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"        deadline.setDone(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"[D][X] a (by: Feb 12 2024 1937)\", deadline.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":50}},{"path":"src/test/java/bob/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"import java.time.Month;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"public class EventTest {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    public void getStorageFormat() {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"E | false | a | 2024-02-11T19:37:00 | 2024-02-12T19:37:00\", new Event(\"a\",","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0))","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"                .getStorageFormat());","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"        Event event \u003d new Event(\"a\",","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0));","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"        event.setDone(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"E | true | a | 2024-02-11T19:37:00 | 2024-02-12T19:37:00\", event.getStorageFormat());","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    public void isOccurringOn() {","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Event(\"a\",","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 13, 19, 37, 0))","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"                .isOccurringOn(LocalDate.of(2024, Month.FEBRUARY, 10)));","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"        assertTrue(new Event(\"a\",","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 13, 19, 37, 0))","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"                .isOccurringOn(LocalDate.of(2024, Month.FEBRUARY, 11)));","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"        assertTrue(new Event(\"a\",","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 13, 19, 37, 0))","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"                .isOccurringOn(LocalDate.of(2024, Month.FEBRUARY, 12)));","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"        assertTrue(new Event(\"a\",","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 13, 19, 37, 0))","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"                .isOccurringOn(LocalDate.of(2024, Month.FEBRUARY, 13)));","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Event(\"a\",","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 13, 19, 37, 0))","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"                .isOccurringOn(LocalDate.of(2024, Month.FEBRUARY, 14)));","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"    public void toString_notDone() {","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"[E][ ] a (from: Feb 11 2024 1937 to: Feb 12 2024 1937)\", new Event(\"a\",","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0))","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"                .toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"    public void toString_done() {","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"chin-herng"},"content":"        Event event \u003d new Event(\"a\",","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0));","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"chin-herng"},"content":"        event.setDone(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"[E][X] a (from: Feb 11 2024 1937 to: Feb 12 2024 1937)\", event.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":72}},{"path":"src/test/java/bob/task/PeriodTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"import java.time.Month;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"public class PeriodTest {","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    public void getStorageFormat() {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"P | false | a | 2024-02-11T19:37:00 | 2024-02-12T19:37:00\", new Period(\"a\",","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0))","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"                .getStorageFormat());","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"        Period period \u003d new Period(\"a\",","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0));","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"        period.setDone(true);","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"P | true | a | 2024-02-11T19:37:00 | 2024-02-12T19:37:00\", period.getStorageFormat());","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"    public void isDueIn() {","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Period(\"\",","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now(),","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().plusDays(9)).isDueIn(7));","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Period(\"\",","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().minusDays(2),","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().minusDays(1)).isDueIn(0));","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Period(\"\",","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now(),","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().plusHours(1)).isDueIn(-1));","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"chin-herng"},"content":"        assertTrue(new Period(\"\",","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().minusHours(1),","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().plusHours(1)).isDueIn(0));","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Period(\"\",","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().minusHours(2),","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().minusHours(1)).isDueIn(0));","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"chin-herng"},"content":"        assertFalse(new Period(\"\",","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().plusHours(1),","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.now().plusHours(2)).isDueIn(0));","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"chin-herng"},"content":"    public void toString_notDone() {","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"[P][ ] a (start: Feb 11 2024 1937 end: Feb 12 2024 1937)\", new Period(\"a\",","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0))","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"chin-herng"},"content":"                .toString());","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"chin-herng"},"content":"    public void toString_done() {","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"chin-herng"},"content":"        Period period \u003d new Period(\"a\",","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 11, 19, 37, 0),","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"chin-herng"},"content":"                LocalDateTime.of(2024, Month.FEBRUARY, 12, 19, 37, 0));","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"chin-herng"},"content":"        period.setDone(true);","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"[P][X] a (start: Feb 11 2024 1937 end: Feb 12 2024 1937)\", period.toString());","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"chin-herng":65}},{"path":"src/test/java/bob/task/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":" * Represents a stub class in place of \u003ccode\u003eTask\u003c/code\u003e. A \u003ccode\u003eTaskStub\u003c/code\u003e object corresponds to","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":" * a concrete instance of a general \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"    public TaskStub(String description) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"        super(description);","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    public boolean isOccurringOn(LocalDate date) {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"        return description.equals(\"a\");","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    public boolean isDueIn(int days) {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"        return description.equals(\"a\");","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"        return \"storage format\";","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"        return description;","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"chin-herng":33}},{"path":"src/test/java/bob/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"package bob.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"    public void getStorageFormat() {","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"T | false | a\", new Todo(\"a\").getStorageFormat());","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"        Todo todo \u003d new Todo(\"a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"        todo.setDone(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"T | true | a\", todo.getStorageFormat());","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"    public void toString_notDone() {","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"[T][ ] a\", new Todo(\"a\").toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"    public void toString_done() {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"        Todo todo \u003d new Todo(\"a\");","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"        todo.setDone(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"        assertEquals(\"[T][X] a\", todo.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"chin-herng":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chin-herng"},"content":"list","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"chin-herng"},"content":"list /on 6/6/2024","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"chin-herng"},"content":"list /on a","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"chin-herng"},"content":"list /due_in 300","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"chin-herng"},"content":"list /due_in 7","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"chin-herng"},"content":"list /due_in a","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"chin-herng"},"content":"list a","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"chin-herng"},"content":"todo","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"chin-herng"},"content":"todo test","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"deadline","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"chin-herng"},"content":"deadline test","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"chin-herng"},"content":"deadline test /by a","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"chin-herng"},"content":"deadline test /by 12/2/2024 1123","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"chin-herng"},"content":"event","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"chin-herng"},"content":"event test","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"chin-herng"},"content":"event test /from 12/2/2024 1123","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"chin-herng"},"content":"event test /from 12/2/2024 1123 /to 11/2/2024 1123","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"event test /from 11/2/2024 1123 /to 12/2/2024 1123","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"chin-herng"},"content":"mark 10","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"chin-herng"},"content":"mark -1","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"chin-herng"},"content":"mark a","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"chin-herng"},"content":"mark 5","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"chin-herng"},"content":"unmark 10","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"chin-herng"},"content":"unmark -1","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"chin-herng"},"content":"unmark a","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"chin-herng"},"content":"unmark 5","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"chin-herng"},"content":"delete 10","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"chin-herng"},"content":"delete -1","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"chin-herng"},"content":"delete a","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"chin-herng"},"content":"delete 5","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"chin-herng"},"content":"find","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"chin-herng"},"content":"find book","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"chin-herng"},"content":"exit","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chin-herng":33}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"chin-herng"},"content":"javac  -cp ..\\src\\main\\java\\bob -Xlint:none -d ..\\bin ..\\src\\main\\java\\bob\\*.java ..\\src\\main\\java\\bob\\command\\*.java ..\\src\\main\\java\\bob\\exception\\*.java ..\\src\\main\\java\\bob\\task\\*.java","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chin-herng"},"content":"java -classpath ..\\bin bob.Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chin-herng":2,"-":19}}]
