[{"path":"src/main/java/Dude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanguoyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"tanguoyang"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"tanguoyang"},"content":"// Base Task class","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"tanguoyang"},"content":"abstract class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"tanguoyang"},"content":"    String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"tanguoyang"},"content":"    boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"tanguoyang"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"tanguoyang"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"tanguoyang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"tanguoyang"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"tanguoyang"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"tanguoyang"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"tanguoyang"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"tanguoyang"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"tanguoyang"},"content":"    public abstract String toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"tanguoyang"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"tanguoyang"},"content":"// ToDo subclass","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"tanguoyang"},"content":"class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"tanguoyang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"tanguoyang"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"tanguoyang"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"tanguoyang"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"tanguoyang"},"content":"        return \"[T]\" + (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"tanguoyang"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"tanguoyang"},"content":"// Deadline subclass","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"tanguoyang"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"tanguoyang"},"content":"    String by;","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"tanguoyang"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"tanguoyang"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"tanguoyang"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"tanguoyang"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"tanguoyang"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"tanguoyang"},"content":"        return \"[D]\" + (isDone ? \"[X] \" : \"[ ] \") + description + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"tanguoyang"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"tanguoyang"},"content":"// Event subclass","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"tanguoyang"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"tanguoyang"},"content":"    String start;","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"tanguoyang"},"content":"    String end;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"tanguoyang"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"tanguoyang"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"tanguoyang"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"tanguoyang"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"tanguoyang"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"tanguoyang"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"tanguoyang"},"content":"        return \"[E]\" + (isDone ? \"[X] \" : \"[ ] \") + description + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"tanguoyang"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"tanguoyang"},"content":"public class Dude {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"tanguoyang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"tanguoyang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"tanguoyang"},"content":"        System.out.println(\"Hello! I\u0027m Dude\");","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"tanguoyang"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"tanguoyang"},"content":"        while (true) {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"tanguoyang"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"tanguoyang"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"tanguoyang"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"tanguoyang"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"tanguoyang"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"tanguoyang"},"content":"                } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"tanguoyang"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"tanguoyang"},"content":"                        System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"tanguoyang"},"content":"                } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"tanguoyang"},"content":"                    int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"tanguoyang"},"content":"                    if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"tanguoyang"},"content":"                        throw new IndexOutOfBoundsException(\"Task number does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"tanguoyang"},"content":"                    tasks.get(index).markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"tanguoyang"},"content":"                    System.out.println(\"Marked as done: \" + tasks.get(index));","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"tanguoyang"},"content":"                } else if (input.startsWith(\"undo \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"tanguoyang"},"content":"                    int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"tanguoyang"},"content":"                    if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"tanguoyang"},"content":"                        throw new IndexOutOfBoundsException(\"Task number does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"tanguoyang"},"content":"                    tasks.get(index).markAsNotDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"tanguoyang"},"content":"                    System.out.println(\"Marked as not done: \" + tasks.get(index));","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"tanguoyang"},"content":"                } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"tanguoyang"},"content":"                    int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"tanguoyang"},"content":"                    if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"tanguoyang"},"content":"                        throw new IndexOutOfBoundsException(\"Task number does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"tanguoyang"},"content":"                    Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"tanguoyang"},"content":"                    System.out.println(\"Deleted: \" + removedTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"tanguoyang"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"tanguoyang"},"content":"                    String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"tanguoyang"},"content":"                    String command \u003d parts[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"tanguoyang"},"content":"                    String taskInfo \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"tanguoyang"},"content":"                    switch (command.toLowerCase()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"tanguoyang"},"content":"                        case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"tanguoyang"},"content":"                            tasks.add(new ToDo(taskInfo));","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"tanguoyang"},"content":"                            System.out.println(\"Added ToDo: \" + taskInfo);","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"tanguoyang"},"content":"                            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"tanguoyang"},"content":"                        case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"tanguoyang"},"content":"                            if (!taskInfo.contains(\" /by \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"tanguoyang"},"content":"                                throw new IllegalArgumentException(","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"tanguoyang"},"content":"                                        \"Invalid deadline format. Use \u0027/by\u0027 to specify the deadline.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"tanguoyang"},"content":"                            }","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"tanguoyang"},"content":"                            String[] deadlineParts \u003d taskInfo.split(\" /by \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"tanguoyang"},"content":"                            tasks.add(new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"tanguoyang"},"content":"                            System.out.println(\"Added Deadline: \" + deadlineParts[0]);","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"tanguoyang"},"content":"                            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"tanguoyang"},"content":"                        case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"tanguoyang"},"content":"                            if (!taskInfo.contains(\" /from \") || !taskInfo.contains(\" /to \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"tanguoyang"},"content":"                                throw new IllegalArgumentException(","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"tanguoyang"},"content":"                                        \"Invalid event format. Use \u0027/from\u0027 and \u0027/to\u0027 to specify the event times.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"tanguoyang"},"content":"                            }","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"tanguoyang"},"content":"                            String[] eventParts \u003d taskInfo.split(\" /from \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"tanguoyang"},"content":"                            String[] eventTimes \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"tanguoyang"},"content":"                            tasks.add(new Event(eventParts[0], eventTimes[0], eventTimes[1]));","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"tanguoyang"},"content":"                            System.out.println(\"Added Event: \" + eventParts[0]);","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"tanguoyang"},"content":"                            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"tanguoyang"},"content":"                        default:","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"tanguoyang"},"content":"                            System.out.println(\"Unknown command\");","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"tanguoyang"},"content":"                            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"tanguoyang"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"tanguoyang"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(\"Error: Please enter a valid task number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"tanguoyang"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"tanguoyang"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"tanguoyang"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"tanguoyang"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"tanguoyang"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"tanguoyang"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tanguoyang":156,"-":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanguoyang"},"content":"todo apple","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"tanguoyang"},"content":"deadline pear /by 5jan","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"tanguoyang"},"content":"event orange /from 10jan /to 20jan","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"tanguoyang"},"content":"done 0","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"tanguoyang"},"content":"done 1","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"tanguoyang"},"content":"done 2","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"tanguoyang"},"content":"delete 0","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"tanguoyang"},"content":"bye","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"tanguoyang":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tanguoyang"},"content":"java -classpath ..\\bin Dude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanguoyang":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tanguoyang"},"content":"java -classpath ../bin Dude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanguoyang":1,"-":37}}]
