[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"# William User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"William is a **desktop application designed for managing tasks such as to-dos, events, and deadlines.** Optimized for use via the Command Line Interface (CLI), it features a One Piece theme, catering to fans of One Piece or anime in general. If you\u0027re a fast typist, William can track your tasks more swiftly than Luffy\u0027s journey to becoming the King of Pirates—a saga so lengthy, it\u0027s hard to keep up with.","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"## Quick Start","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"1. Ensure that you have Java `11` or above installed on your Computer","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"2. Download the latest `William.jar` from [here](https://github.com/KhoonSun47/ip/releases)","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your William","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar William.jar` command to run the application. A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing `list` and pressing enter will show you the list of tasks.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"   ![Ui](./docs/Ui.png)","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"Some example commands you can try","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"   - `list`: Lists all the tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"   - `todo cs2103 assignment`: Add a todo with a description of the cs2103 assignment to your list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"   - `delete 3`: Deletes the 3rd task in the list","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"   - `bye`: Exits the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"6. Refer to [Features](#features) below for details of each command","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"## Features","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"ℹ️ Notes about the command format:","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"  e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter that can be used as `todo play games`.","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"- Parameters must be in fixed order.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"  e.g. in `event DESCRIPTION /from FROM_DATE /to TO_DATE`, `FROM_DATE` must always be before `TO_DATE`.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"  as space characters surrounding line breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"Shows a list of all tasks in the task list.  ","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"Format: `list`","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"### Listing all tasks (sorted in priority): `sort`","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"Shows a list of all tasks in the task list, sorted by the priority of the task.  ","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"Format: `sort`","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"Adds a todo to the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"Format: `todo DESCRIPTION​`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"Examples","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"- `todo math homework`","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"- `todo cs2103 assignment`","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"### Adding a deadline: `deadline` ","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"Adds a deadline to the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"Format: `deadline DESCRIPTION /by DD/MM/YYYY HHMM`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"- `deadline cs3230 assignment 1 /by 19/02/2024 2359`","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"- `deadline homework /by 12/12/2024 2359`","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"### Adding an event: `event`","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"Adds an event to the task list","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"Format: `event DESCRIPTION /from DD/MM/YYYY HHMM /to DD/MM/YYYY HHMM`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"- `event Travis Scott concert /from 01/01/2024 2100 /to 02/01/2024 0400`","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"- `event F1 /from 01/09/2024 2100 /to 02/09/2024 0100`","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"\u003e The FROM DATE must always be before the TO DATE!","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"### Finding task by description: `find`","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"Finds tasks whose descriptions contain any of the given keywords.","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"- The search is case-sensitive. e.g `play` will not match `Play`","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"- Only the description is searched.","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"- Partial words will be matched e.g. `pla` will match `play`","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"- Task matching at least one keyword will be returned e.g. `CS` will return `CS3230`, `CS2103`","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"  ","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"- `find play` returns `play games`","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"- `find CS` returns `CS3230`, `CS2103`","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"Format: `delete INDEX` ","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"- Deletes the task at the specified `INDEX`.","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` refers to the index number shown in the displayed task list","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"- `delete 3` deletes the 3rd task in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"### Marking a task as Done: `mark`","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"Marks the task at the specified index as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"- Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"- `mark 3` marks the 3rd task as done in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"### Marking a task as Not Done: `unmark`","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"Marks the task at the specified index as not done.","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"- Unmarks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"- `unmark 3` marks the 2nd task as not done in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"### Add Priority to a task: `priority`","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"Priorities the task at a specified index  ","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"Format: `priority /id INDEX /priority PRIORITY_LEVEL`","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"- Prioritise the task at a specified `INDEX` with an appropriate `PRIORITY_LEVEL`","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"- The `PRIORITY_LEVEL` has 4 categories only: `HIGH`, `MEDIUM`, `LOW`, `NONE`","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"- `priority /id 1 /priority high`","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"- `priority /id 2 /priority none`","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"Exits the program.","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"Format: `bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"### Saving the data","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"William\u0027s data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"### Editing the data file","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"William\u0027s data is saved automatically as a `.txt` file `[JAR file location]/data/tasks.txt`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"\u003e [!CAUTION]","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"Caution: If your changes to the data file make its format invalid, Willaim will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"\u003e ","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"\u003e Furthermore, certain edits can cause William to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"## FAQ","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"Q: How do I transfer my data to another Computer?","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"A: Install the app on the other computer and overwrite the empty data file it creates with the file that contains the data of your previous William home folder.","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"## Command Summary","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"| Action  | Format, Examples |","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"| :---: | :---: |","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"| **ToDo**  | `todo DESCRIPTION` \u003cbr\u003e​ e.g. `todo math homework` |","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"| **Deadline**  | `deadline DESCRIPTION /by DD/MM/YYYY HHMM` \u003cbr\u003e e.g. `deadline homework /by 12/12/2024 2359` |","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"| **Event**  | `event DESCRIPTION /from DD/MM/YYYY HHMM /to DD/MM/YYYY HHMM` \u003cbr\u003e e.g. `event F1 /from 01/09/2024 2100 /to 02/09/2024 0100` |","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"| **List**  | `list` |","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"| **Find**  | `find KEYWORD [MORE_KEYWORDS]` |","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"| **Delete**  | `delete INDEX` \u003cbr\u003e e.g. `delete 3` |","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"| **Mark**  | `mark INDEX` \u003cbr\u003e e.g. `mark 3` |","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"| **Unmark**  | `unmark INDEX` \u003cbr\u003e e.g. `unmark 3` |","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"| **Priority**  | `priority /id INDEX /priority PRIORITY_LEVEL` \u003cbr\u003e e.g. `priority /id 1 /priority high` |","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"| **Sort**  | `sort` |","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"| **Bye**  | `bye` |","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"KhoonSun47":154}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    archiveBaseName \u003d \"William\"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KhoonSun47":23,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"T | 0 | homework | NILL | NILL | NONE","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"E | 0 | cs2103 assignment 2 | 18/2/2024 1800 | 25/2/2024 1100 | NONE","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"D | 0 | ma1522 assignment 2 | 25/2/2024 2359 | NILL | NONE","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"KhoonSun47":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"# William User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"William is a **desktop application designed for managing tasks such as to-dos, events, and deadlines.** Optimized for use via the Command Line Interface (CLI), it features a One Piece theme, catering to fans of One Piece or anime in general. If you\u0027re a fast typist, William can track your tasks more swiftly than Luffy\u0027s journey to becoming the King of Pirates—a saga so lengthy, it\u0027s hard to keep up with.","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"## Quick Start","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"1. Ensure that you have Java `11` or above installed on your Computer","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"2. Download the latest `William.jar` from [here](https://github.com/KhoonSun47/ip/releases)","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your William","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar William.jar` command to run the application. A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing `list` and pressing enter will show you the list of tasks.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"   ![Ui](./Ui.png)","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"   Some example commands you can try","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    - `list`: Lists all the tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    - `todo cs2103 assignment`: Add a todo with a description of the cs2103 assignment to your list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    - `delete 3`: Deletes the 3rd task in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    - `bye`: Exits the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"6. Refer to [Features](#features) below for details of each command","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"## Features","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"ℹ️ Notes about the command format:","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"  e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter that can be used as `todo play games`.","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"- Parameters must be in fixed order.\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"  e.g. in `event DESCRIPTION /from FROM_DATE /to TO_DATE`, `FROM_DATE` must always be before `TO_DATE`.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"  as space characters surrounding line breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"Shows a list of all tasks in the task list.  ","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"Format: `list`","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"### Listing all tasks (sorted in priority): `sort`","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"Shows a list of all tasks in the task list, sorted by the priority of the task.  ","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"Format: `sort`","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"Adds a todo to the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"Format: `todo DESCRIPTION​`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"Examples","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"- `todo math homework`","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"- `todo cs2103 assignment`","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"Adds a deadline to the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"Format: `deadline DESCRIPTION /by DD/MM/YYYY HHMM`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"- `deadline cs3230 assignment 1 /by 19/02/2024 2359`","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"- `deadline homework /by 12/12/2024 2359`","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"### Adding an event: `event`","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"Adds an event to the task list","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"Format: `event DESCRIPTION /from DD/MM/YYYY HHMM /to DD/MM/YYYY HHMM`\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"- `event Travis Scott concert /from 01/01/2024 2100 /to 02/01/2024 0400`","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"- `event F1 /from 01/09/2024 2100 /to 02/09/2024 0100`","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"- **IMPORTANT**: The `FROM DATE` must always be before the `TO DATE`!","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"### Finding task by description: `find`","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"Finds tasks whose descriptions contain any of the given keywords.","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"- The search is case-sensitive. e.g `play` will not match `Play`","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"- Only the description is searched.","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"- Partial words will be matched e.g. `pla` will match `play`","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"- Task matching at least one keyword will be returned e.g. `CS` will return `CS3230`, `CS2103`","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"- `find play` returns `play games`","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"- `find CS` returns `CS3230`, `CS2103`","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"- Deletes the task at the specified `INDEX`.","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` refers to the index number shown in the displayed task list","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"- `delete 3` deletes the 3rd task in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"### Marking a task as Done: `mark`","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"Marks the task at the specified index as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"- Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"- `mark 3` marks the 3rd task as done in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"### Marking a task as Not Done: `unmark`","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"Marks the task at the specified index as not done.","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"- Unmarks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"- `unmark 3` marks the 2nd task as not done in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"### Add Priority to a task: `priority`","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"Priorities the task at a specified index","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"Format: `priority /id INDEX /priority PRIORITY_LEVEL`","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"- Prioritise the task at a specified `INDEX` with an appropriate `PRIORITY_LEVEL`","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"- The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"- The `PRIORITY_LEVEL` has 4 categories only: `HIGH`, `MEDIUM`, `LOW`, `NONE`","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"Examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"- `priority /id 1 /priority high`","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"- `priority /id 2 /priority none`","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"Exits the program.","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"Format: `bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"### Saving the data","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"William\u0027s data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"### Editing the data file","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"William\u0027s data is saved automatically as a `.txt` file `[JAR file location]/data/tasks.txt`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"### Caution","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"If your changes to the data file make its format invalid (e.g. adding a new field), William will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it. ","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"However, if your changes to the data file interfere with the syntax (e.g. changing the `DATE` format, or adding a new `PRIORITY_LEVEL`), William will not detect this and it will lead to errors when using the application (This feature could be added in during a new version).","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"Furthermore, certain edits can cause William to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"## FAQ","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"Q: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"A: Install the app on the other computer and overwrite the empty data file it creates with the file that contains the data of your previous William home folder.","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"## Command Summary","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"| Action        | Format, Examples |","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"|---------------|------------------|","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"| **ToDo**      | `todo DESCRIPTION` \u003cbr\u003e​ e.g. `todo math homework` |","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"| **Deadline**  | `deadline DESCRIPTION /by DD/MM/YYYY HHMM` \u003cbr\u003e e.g. `deadline homework /by 12/12/2024 2359` |","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"| **Event**     | `event DESCRIPTION /from DD/MM/YYYY HHMM /to DD/MM/YYYY HHMM` \u003cbr\u003e e.g. `event F1 /from 01/09/2024 2100 /to 02/09/2024 0100` |","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"| **List**      | `list` |","lastModifiedDate":"2024-02-20"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"| **Find**      | `find KEYWORD [MORE_KEYWORDS]` |","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"| **Delete**    | `delete INDEX` \u003cbr\u003e e.g. `delete 3` |","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"| **Mark**      | `mark INDEX` \u003cbr\u003e e.g. `mark 3` |","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"| **Unmark**    | `unmark INDEX` \u003cbr\u003e e.g. `unmark 3` |","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"| **Priority**  | `priority /id INDEX /priority PRIORITY_LEVEL` \u003cbr\u003e e.g. `priority /id 1 /priority high` |","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"| **Sort**      | `sort` |","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"| **Bye**       | `bye` |","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"KhoonSun47":144,"-":14}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"import ui.Main;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"public class Launcher {","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"KhoonSun47":11}},{"path":"src/main/java/enums/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package enums;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":" * Contains the list of commands to be used in the switch case for William.java","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"public enum Commands {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    LIST, BYE, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, PRIORITY, SORT","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"KhoonSun47":8}},{"path":"src/main/java/enums/Priorities.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package enums;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":" * Contains the list of priorities","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"public enum Priorities {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    NONE, LOW, MEDIUM, HIGH;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"KhoonSun47":8}},{"path":"src/main/java/exceptions/WilliamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":" * Represents exceptions specific to William class","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"public class WilliamException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    public WilliamException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":10}},{"path":"src/main/java/primary/William.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package primary;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":" * Main class for this chatbot","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"public class William {","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"     * Constructor to initialise the UI, and load tasks into ArrayList","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    public William() {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        this.ui.loadTasks();","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"     * Gets response from chatbot based on user input","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * @return The response from the chatbot","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public String getChatBotResponse(String userInput) {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        return ui.interactWithUser(userInput);","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"KhoonSun47":28}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    private LocalDateTime byDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    public Deadline(String name, LocalDateTime byDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    public Deadline(String name, LocalDateTime byDate, boolean isDone, String priority) {","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"        super(name, isDone, priority);","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.outputDateAsString(byDate) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        return \"D\";","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        return new String[] { super.convertDateToString(byDate), \"NILL\" };","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":33}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    private LocalDateTime fromDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"    private LocalDateTime toDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"    public Event(String name, LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    public Event(String name, LocalDateTime fromDate, LocalDateTime toDate, boolean isDone, String priority) {","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"        super(name, isDone, priority);","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + super.outputDateAsString(fromDate) + \" to: \"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"                + super.outputDateAsString(toDate) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        return \"E\";","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        return new String[] { super.convertDateToString(fromDate), super.convertDateToString(toDate) };","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":37}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy EEEE, ha\");","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    private String name;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"    private String type;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    private String priority;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    private String[] times;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        this.priority \u003d \"NONE\";","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    public Task(String name, boolean isDone, String priority) {","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    public boolean toggleMarkStatus(boolean isMark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        if (this.isDone \u003d\u003d isMark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"            return false;","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        this.isDone \u003d isMark;","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        return true;","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        return this.type;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        return this.times;","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    public String getName() {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        return this.name;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    public String getPriority() {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        return this.priority;","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    public void setPriority(String priority) {","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    public String outputDateAsString(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        return dateTime.format(OUTPUT_FORMAT);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    public String convertDateToString(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        return dateTime.format(INPUT_FORMAT);","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        return \"[\" + this.getStatusIcon() + \"][Priority: \" + this.priority + \"] \" + this.name;","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"KhoonSun47":75}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    public Todo(String name, boolean isDone, String priority) {","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"        super(name, isDone, priority);","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"        return \"T\";","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        return new String[] { \"NILL\", \"NILL\" };","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":27}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":" * Provides the layout for dialog box between William chatbot and user","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        displayPicture.setFitHeight(60.0);","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        displayPicture.setFitWidth(60.0);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        Rectangle clip \u003d new Rectangle(","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                displayPicture.getFitWidth(), displayPicture.getFitHeight()","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        );","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        clip.setArcWidth(20);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        clip.setArcHeight(20);","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"     * right.","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    private void flip() {","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    public static DialogBox getWilliamDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        db.flip();","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        return db;","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"KhoonSun47":72}},{"path":"src/main/java/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import primary.William;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":" * A GUI for William using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    private William william \u003d new William();","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"            primaryStage.setTitle(\"William\");","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWilliam(william);","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"            primaryStage.show();","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"KhoonSun47":34}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import primary.William;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    private William william;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private final Image USER_IMAGE \u003d new Image(this.getClass().getResourceAsStream(\"/images/luffy.jpeg\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    private final Image WILLIAM_IMAGE \u003d new Image(this.getClass().getResourceAsStream(\"/images/chopper.jpeg\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        dialogContainer","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"                .getChildren()","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"                .add(DialogBox.getWilliamDialog(\"Hello! I\u0027m William! \"","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"                        + \"What can I do for you?\", WILLIAM_IMAGE));","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    public void setWilliam(William william) {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        this.william \u003d william;","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"     * Duke\u0027s reply and then appends them to the dialog container. Clears the user","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"     * input after processing.","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        String response \u003d william.getChatBotResponse(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"                DialogBox.getUserDialog(input, USER_IMAGE),","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                DialogBox.getWilliamDialog(response, WILLIAM_IMAGE));","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"KhoonSun47":53}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.io.File;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import enums.Commands;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import utilities.AdditionalInfoParser;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import utilities.Parser;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import utilities.Storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import utilities.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":" * Deals with interactions with the user","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    private static String filePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public Ui() {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        this.loadTasks();","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"     * Returns the enum command","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input that is a command in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"     * @return output Output that is a command in Commands format","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the command does not exist in the Commands class","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    public Commands retrieveCommand(String input) throws WilliamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"            return Commands.valueOf(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"                    \"This command \" + input + \" does not exist, please try again!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"     * Processes user input and returns a response","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"     * @param userInput The user input to process","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"     * @return A response based on the processed input","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    public String interactWithUser(String userInput) {","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        Parser parser \u003d new Parser(taskList, storage);","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        Commands command \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        String[] texts \u003d AdditionalInfoParser.retrieveTexts(userInput);","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"            command \u003d retrieveCommand(texts[0].toUpperCase());","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"            return e.getMessage() + \"\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        return parser.parseCommands(command, texts[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"     * Loads tasks into the arraylist. If the file does not exist or the format is wrong, initializes an","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"     * empty list first.","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    public void loadTasks() {","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"            File directory \u003d file.getParentFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"            List\u003cTask\u003e tasks \u003d this.storage.loadFromFile();","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"            this.taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"                    \"File not found at \" + filePath + \", hence initializing an empty task list.\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":84}},{"path":"src/main/java/utilities/AdditionalInfoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":" * Deals with formatting the additional information","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class AdditionalInfoParser {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"     * Returns the split input after getting the user input","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input from the user","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"     * @return string[] String[] consisting of two variables: [0] \u003d\u003d command, [1] \u003d\u003d","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"     *         additional information","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    public static String[] retrieveTexts(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        String[] splitResults \u003d new String[2];","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"        int indexOfFirstSpace \u003d input.indexOf(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"        if (indexOfFirstSpace \u003d\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"            splitResults[0] \u003d input;","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"            splitResults[1] \u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"            splitResults[0] \u003d input.substring(0, indexOfFirstSpace);","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"            splitResults[1] \u003d input.substring(indexOfFirstSpace + 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        return splitResults;","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     * Splits the input regardless of \u0027/by\u0027, \u0027/to\u0027, \u0027/id\u0027, \u0027/priority\u0027, \u0027/from\u0027","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * @param input    Input that is the additional details","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     * @param keywords The splitting conditions","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"     * @return string[] An array of String that contains the name and dates in","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"     *         separated form","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the input does not contain the keywords","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public static String[] splitInput(String input, String... keywords) throws WilliamException {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        checkAdditionalDetailEmpty(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        ArrayList\u003cString\u003e parts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        String currentPart \u003d input;","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"            if (currentPart.contains(keyword)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"                String[] splitParts \u003d currentPart.split(keyword, 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                parts.add(splitParts[0].trim());","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"                currentPart \u003d splitParts.length \u003e 1 ? splitParts[1] : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                throw new WilliamException(\"The input does not contain the required \u0027\" + keyword","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                        + \"\u0027 keyword. Please try again!\");","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        parts.add(currentPart.trim());","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        // Assertion to check that the array is not empty after splitting","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        assert parts.isEmpty() \u003d\u003d false : \"Array should not be empty after splitting by keywords\";","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        return parts.toArray(new String[0]);","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"     * Checks whether the additional detail is empty","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input that is the additional detail","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the description of the additional detail is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"    public static void checkAdditionalDetailEmpty(String input) throws WilliamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                    \"The description of a task should not be empty. Please try again!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        // Assertion to check that input is not empty after passing the initial check","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        assert input !\u003d null \u0026\u0026 input.trim().isEmpty() \u003d\u003d false : \"Input should not be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":81}},{"path":"src/main/java/utilities/DateAndTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":" * Deals with formatting dates and times","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"public class DateAndTimeParser {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"            DateTimeFormatter.ofPattern(\"d/M/uuuu HHmm\").withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"     * Checks whether the input matches the date and time format","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"     * @param input The date and time of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the format of the date and time is wrong","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public static void acceptDateAndTime(String input) throws WilliamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"            LocalDateTime.parse(input, INPUT_FORMAT);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"            // Assertion to check that the input can be parsed successfully, shows that the","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"            // format is matched","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"            assert true;","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(\"The date and time format is invalid. Please try again!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * Checks whether the \u0027/from\u0027 date is before the \u0027/to\u0027 date","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"     * @param fromDate The input date \u0027/from\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"     * @param toDate   The input date \u0027/to\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the \u0027/from\u0027 date is not before the \u0027/to\u0027 date","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public static void checkWhetherToAndFromValid(String fromDate, String toDate)","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"            throws WilliamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime fromDateFormatted \u003d LocalDateTime.parse(fromDate, INPUT_FORMAT);","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime toDateFormatted \u003d LocalDateTime.parse(toDate, INPUT_FORMAT);","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        if (fromDateFormatted.isEqual(toDateFormatted)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"                    \"The \u0027/from\u0027 date and time cannot be equal to \u0027/to\u0027 date and time. Please try again!\");","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        if (fromDateFormatted.isBefore(toDateFormatted) \u003d\u003d false) {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                    \"The \u0027/from\u0027 date and time should be before \u0027/to\u0027 date and time. Please try again!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        // Assertion to check that fromDateFormatted is before toDateFormatted","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        assert fromDateFormatted.isBefore(toDateFormatted) : \"From date is before to date.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"     * Returns a String date that is converted to LocalDateTime date","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"     * @param date Date in String","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"     * @return Date in LocalDateTime","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    public static LocalDateTime convertStringToDate(String date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime dateFormatted \u003d LocalDateTime.parse(date, INPUT_FORMAT);","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        // Assertion to check that the conversion result is not null","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        assert dateFormatted !\u003d null : \"Date conversion results in not a null object.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        return dateFormatted;","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":74}},{"path":"src/main/java/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import enums.Commands;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"     * Initialises the tasklist and the storage","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"     * @param taskList Arraylist of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * @param storage  Storage class to write to file","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public Parser(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"     * Receives the command based on the user input and the additional information to perform","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * chatbox task","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     * @param command               Command based on the user input","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation Additional information that contains the details of the task,","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     *                              dates and time","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"     * @return Response based on the user input","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    public String parseCommands(Commands command, String additionalInformation) {","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        String response;","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"            switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"            case TODO:","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d handleTodo(additionalInformation);","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d handleDeadline(additionalInformation);","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"            case EVENT:","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d handleEvent(additionalInformation);","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            case LIST:","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d taskList.printList();","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"            case SORT:","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d taskList.printListSortedByPriority();","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"            case DELETE:","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d taskList.deleteFromList(additionalInformation);","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"            case MARK:","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d handleMarkAndUnmark(additionalInformation, true);","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d handleMarkAndUnmark(additionalInformation, false);","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"            case FIND:","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d handleFind(additionalInformation);","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"            case PRIORITY:","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d handlePriority(additionalInformation);","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"            case BYE:","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d handleBye();","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"                response \u003d \"Unknown command.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException | IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        return response + \"\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"     * Handles toDo task, and add toDo into arraylist of tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation Information to be added as ToDo task","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"     * @return String that says ToDo task has been added","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"    private String handleTodo(String additionalInformation) throws WilliamException {","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        AdditionalInfoParser.checkAdditionalDetailEmpty(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"        Todo newTodo \u003d new Todo(additionalInformation);","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"        this.taskList.addTask(newTodo);","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        return \"Added todo: \" + newTodo.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"     * Handles deadline task, and add deadline into arraylist of tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation Information to be added as Deadline task","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"     * @return String that says Deadline task has been added","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"    private String handleDeadline(String additionalInformation) throws WilliamException {","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"        String[] deadlineDetails \u003d AdditionalInfoParser.splitInput(additionalInformation, \" /by \");","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"        DateAndTimeParser.acceptDateAndTime(deadlineDetails[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineDetails[0],","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"                DateAndTimeParser.convertStringToDate(deadlineDetails[1]));","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"        this.taskList.addTask(newDeadline);","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"        return \"Added deadline: \" + newDeadline.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"     * Handles event task, and add event into arraylist of tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation Information to be added as Event task","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"     * @return String that says Event task has been added","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"    private String handleEvent(String additionalInformation) throws WilliamException {","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"        String[] eventDetails \u003d","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"                AdditionalInfoParser.splitInput(additionalInformation, \" /from \", \" /to \");","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        DateAndTimeParser.acceptDateAndTime(eventDetails[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"        DateAndTimeParser.acceptDateAndTime(eventDetails[2]);","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"        DateAndTimeParser.checkWhetherToAndFromValid(eventDetails[1], eventDetails[2]);","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"        Event newEvent \u003d","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"                new Event(eventDetails[0], DateAndTimeParser.convertStringToDate(eventDetails[1]),","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"                        DateAndTimeParser.convertStringToDate(eventDetails[2]));","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"        this.taskList.addTask(newEvent);","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"        return \"Added event: \" + newEvent.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"     * Handles mark and unmark task","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation Information of the task that is being selected to be mark/unmark","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"     * @param isMark                Either mark which is true, or unmark which is false","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"     * @return String that says whether the task has been mark or unmark","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"    private String handleMarkAndUnmark(String additionalInformation, boolean isMark)","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"            throws WilliamException {","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"        AdditionalInfoParser.checkAdditionalDetailEmpty(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"        boolean isMarkChanged \u003d this.taskList.markAndUnmark(additionalInformation, isMark);","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"        if (isMarkChanged \u003d\u003d false) {","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"            return \"It has already been marked \" + (isMark ? \"done\" : \"not done\") + \".\";","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"        if (isMark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"            return \"Nice! I\u0027ve marked this task as done.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"            return \"OK, I\u0027ve marked this task as not done yet.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"     * Handles finding task based on the task id","lastModifiedDate":"2024-02-06"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation Information of the task that is being selected to be find","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"     * @return Strings of task that has been found","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"    private String handleFind(String additionalInformation) throws WilliamException {","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"        return this.taskList.findTasks(additionalInformation);","lastModifiedDate":"2024-02-17"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"     * Handles the event where user exits the chatbot, and add the updated tasks into file","lastModifiedDate":"2024-02-06"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"     * @return Strings that says the user has exited the chatbot","lastModifiedDate":"2024-02-15"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-06"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"    private String handleBye() throws IOException {","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"KhoonSun47"},"content":"        this.storage.writeToFile(this.taskList.getTasks());","lastModifiedDate":"2024-02-17"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"        System.exit(0);","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"     * Handles prioritising task","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation Information of the task to be prioritised","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"KhoonSun47"},"content":"     * @return String that says that whether the task has been prioritised","lastModifiedDate":"2024-02-18"},{"lineNumber":186,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"KhoonSun47"},"content":"    private String handlePriority(String additionalInformation) throws WilliamException {","lastModifiedDate":"2024-02-18"},{"lineNumber":188,"author":{"gitId":"KhoonSun47"},"content":"        String[] priorityDetails \u003d","lastModifiedDate":"2024-02-18"},{"lineNumber":189,"author":{"gitId":"KhoonSun47"},"content":"                AdditionalInfoParser.splitInput(additionalInformation, \"/id \", \"/priority \");","lastModifiedDate":"2024-02-18"},{"lineNumber":190,"author":{"gitId":"KhoonSun47"},"content":"        return this.taskList.prioritiseTask(priorityDetails[1], priorityDetails[2]);","lastModifiedDate":"2024-02-18"},{"lineNumber":191,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":192,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":192}},{"path":"src/main/java/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    // MATCHING_PATTERN has been improved by AI, the previous pattern","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    // cannot be detected when given a wrong format","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    private final String MATCHING_PATTERN \u003d \"^\\\\s*(\\\\S+)\\\\s*\\\\|\\\\s*(\\\\S+)\\\\s*\\\\|\"","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"            + \"\\\\s*([^|]+?)\\\\s*\\\\|\\\\s*([^|]+?)\\\\s*\\\\|\\\\s*([^|]+?)\\\\s*\\\\|\\\\s*([^|\\\\s]+?)\\\\s*$\";","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * Loads tasks from the hard disk","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"     * @return arraylist ArrayList of tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the lists in the txt file is not in the expected format OR if the","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"     *                          pattern is wrong","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public List\u003cTask\u003e loadFromFile() throws FileNotFoundException, WilliamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        Pattern pattern \u003d Pattern.compile(MATCHING_PATTERN);","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"            Matcher matcher \u003d pattern.matcher(sc.nextLine());","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"            if (matcher.matches() \u003d\u003d false) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"                throw new WilliamException(\"The lists is not in the expected format OR The pattern is wrong!\");","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"            String type \u003d matcher.group(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"            boolean isDone \u003d Integer.parseInt(matcher.group(2)) \u003d\u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"            String name \u003d matcher.group(3);","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"            String firstPart \u003d matcher.group(4);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"            String secondPart \u003d matcher.group(5);","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"            String priority \u003d matcher.group(6);","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"            addTaskToList(type, isDone, name, firstPart, secondPart, priority, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        sc.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        return tasks;","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"     * Add task into list of tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"     * @param type       Type of task","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"     * @param isDone     Status of task","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"     * @param name       Description of task","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"     * @param firstPart  First part of the date (/by or /from)","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"     * @param secondPart Second part of the date (/to)","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"     * @param priority   Priority of the task","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"     * @param tasks      List of tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"    public void addTaskToList(String type, boolean isDone, String name, String firstPart,","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"                              String secondPart, String priority, List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        switch (type) {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"        case \"T\":","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            tasks.add(new Todo(name, isDone, priority));","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        case \"E\":","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"            tasks.add(new Event(name, DateAndTimeParser.convertStringToDate(firstPart),","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"                 DateAndTimeParser.convertStringToDate(secondPart), isDone, priority));","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        case \"D\":","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"            tasks.add(new Deadline(name, DateAndTimeParser.convertStringToDate(firstPart),","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"                 isDone, priority));","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        default:","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"     * Saves tasks into hard disk","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"     * @throws IOException if the arraylist cannot be written to the file","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"    public void writeToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"        int actualSize \u003d tasks.size() - 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"                String name \u003d task.getName();","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"                String priority \u003d task.getPriority();","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"                int isDone \u003d task.getIsDone() ? 1 : 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"                String[] times \u003d task.getTimes();","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"                if (i !\u003d actualSize) {","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"                    sb.append(task.getType()).append(\" | \").append(isDone).append(\" | \")","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"                            .append(name).append(\" | \").append(times[0]).append(\" | \")","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"                            .append(times[1]).append(\" | \").append(priority).append(System.lineSeparator());","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"                    sb.append(task.getType()).append(\" | \").append(isDone).append(\" | \")","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"                            .append(name).append(\" | \").append(times[0]).append(\" | \")","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"                            .append(times[1]).append(\" | \").append(priority);","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"KhoonSun47":128}},{"path":"src/main/java/utilities/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" * Deals with loading tasks and saving tasks into a list (it simulates saving","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":" * and loading task from a text file for the ParserTest)","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public StorageStub(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        super(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    public List\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    public void writeToFile(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KhoonSun47":30}},{"path":"src/main/java/utilities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import enums.Priorities;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":" * Contains the task list e.g. it has operations to add/delete tasks in the list","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"     * Constructor if there is no existing file","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"     * Constructor if there is an existing txt file with tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     * Getter method for task","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     * @return arraylist Arraylist of tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"     * Returns a string representation of all the tasks in the list","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"     * @return A string listing all tasks or stating that the list is empty","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    public String printList() {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"            return \"Your list is empty. Please add some tasks to the list first!\" + \"\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"            List\u003cString\u003e tasks \u003d IntStream.range(0, this.tasks.size())","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"                    .mapToObj(i -\u003e (i + 1) + \". \" + this.tasks.get(i).toString())","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"            return \"Here are the tasks in your list:\\n\" + String.join(\"\\n\", tasks) + \"\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"     * Returns a string representation of all the tasks in the list, sorted by priority","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"     * @return A string listing all tasks sorted by priority or stating that the list is empty","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    public String printListSortedByPriority() {","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"            return \"Your list is empty. Please add some tasks to the list first!\" + \"\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"            List\u003cString\u003e sortedTasks \u003d this.tasks.stream()","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"                    .sorted(Comparator.comparing(","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"                            task -\u003e {","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"                                try {","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                                    return Priorities.valueOf(task.getPriority().toUpperCase());","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                                } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"                                    return Priorities.NONE;","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"                                }","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                            },","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"                            Comparator.comparingInt(Priorities::ordinal).reversed()","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"                    ))","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"                    .map(Task::toString)","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            List\u003cString\u003e tasks \u003d IntStream.range(0, sortedTasks.size())","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"                    .mapToObj(i -\u003e (i + 1) + \". \" + sortedTasks.get(i))","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"            return \"Here are the tasks in your list, sorted by priority:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"                    + String.join(\"\\n\", tasks) + \"\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"     * Adds task into the list of tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"     * @param task Input that is the task (could be todo, deadline or event)","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"     * Deletes the specified task from the list and returns a message of the task being deleted","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"     * @param input The ID of the task to delete","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"     * @return String that says whether the task has been deleted","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"    public String deleteFromList(String input) {","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"            return \"There are no tasks to be deleted. Please add some tasks to the list first!\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"                int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"                int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"                Task removedTask \u003d this.tasks.remove(actualId);","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"                sb.append(\"Noted. I\u0027ve removed this task:\\n\").append(removedTask.toString())","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"                        .append(\"\\nNow you have \").append(this.tasks.size())","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"                        .append(\" tasks in the list.\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"                return \"The Task ID is invalid. Please enter a valid number!\" + \"\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"    /***","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"     * Marks/Un-marks the task as done","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"     * @param input ID of the task","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"     * @param isMark True or False","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"     * @return Whether has it been successfully mark/un-mark","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"    public boolean markAndUnmark(String input, boolean isMark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"        int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"        int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"        boolean isMarkChanged \u003d this.tasks.get(actualId).toggleMarkStatus(isMark);","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"        return isMarkChanged;","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"     * Finds tasks based on whether their description contains the input","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input from the user to find the task","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"     * @return A message with the matching tasks or a message that says no task is found","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If no tasks match the provided input","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"    public String findTasks(String input) throws WilliamException {","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cString\u003e tasks \u003d IntStream.range(0, this.tasks.size())","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"                .filter(i -\u003e this.tasks.get(i).getName().contains(input))","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + this.tasks.get(i).toString())","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"                    \"No tasks match the provided input: \" + input + \". Please try again!\" + \"\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"        return \"Here are the matching tasks in your list:\\n\" + String.join(\"\\n\", tasks) + \"\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"     * Prioritise task based on their user\u0027s priority level","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"     * @param id            ID of the task","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"     * @param priorityLevel Priority level of the task","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"     * @return String indicating that the task has been prioritised","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the provided input does not match","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"    public String prioritiseTask(String id, String priorityLevel) throws WilliamException {","lastModifiedDate":"2024-02-18"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"        Priorities priority;","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"        int actualId \u003d Integer.parseInt(id) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"        if (actualId \u003c 0 || actualId \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(\"Task ID does not exist. Please try again!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"            priority \u003d Priorities.valueOf(priorityLevel.toUpperCase());","lastModifiedDate":"2024-02-18"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(\"Invalid priority level. Please try again!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"KhoonSun47"},"content":"        tasks.get(actualId).setPriority(priority.name());","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"KhoonSun47"},"content":"        return \"Task with ID \" + id + \" has been prioritised to \" + priority + \" priority.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":186,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":187}},{"path":"src/main/java/utilities/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" * Contains the task list e.g. it has operations to add/delete tasks in the list (it simulates these","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":" * operations for the ParserTest)","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public TaskListStub() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public String deleteFromList(String input) {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        if (actualId \u003e\u003d 0 \u0026\u0026 actualId \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"            tasks.remove(actualId);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        return null;","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    public boolean markAndUnmark(String input, boolean isMark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        boolean status \u003d true;","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        if (actualId \u003e\u003d 0 \u0026\u0026 actualId \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"            Task task \u003d tasks.get(actualId);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"            status \u003d task.toggleMarkStatus(isMark);","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        return status;","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KhoonSun47":50}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" spacing\u003d\"10\" style\u003d\"-fx-background-color: #FAFAFA; -fx-border-color: brown; -fx-border-width: 2px; -fx-padding: 10; \" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxWidth\u003d\"Infinity\" style\u003d\"-fx-padding: 10; \"/\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"KhoonSun47":11}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: #FAFAFA;\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" AnchorPane.topAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\" AnchorPane.bottomAnchor\u003d\"52.0\" AnchorPane.leftAnchor\u003d\"10.0\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #FFFFFF; -fx-border-color: transparent; -fx-border-width: 0; -fx-padding: 0;\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"10\" style\u003d\"-fx-background-color: #FFFFFF;\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    \u003cHBox spacing\u003d\"10\" alignment\u003d\"CENTER_LEFT\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"            \u003cTextField fx:id\u003d\"userInput\" prefHeight\u003d\"41.0\" onAction\u003d\"#handleUserInput\" HBox.hgrow\u003d\"ALWAYS\" style\u003d\"-fx-font-family: \u0027Arial\u0027; -fx-font-size: 16px; -fx-padding: 10;\"/\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"            \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"37.0\" prefWidth\u003d\"86.0\" text\u003d\"Send\" style\u003d\"-fx-font-weight: bold; -fx-font-family: \u0027Arial\u0027; -fx-font-size: 16px; -fx-background-color: linear-gradient(from 25% 25% to 100% 100%, #4CAF50, #81C784); -fx-text-fill: white; -fx-effect: dropshadow( three-pass-box , rgba(0,0,0,0.8) , 5, 0.0 , 0 , 1 );\"/\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"        \u003c/children\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"KhoonSun47":24}},{"path":"src/test/java/utilities/DateAndTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":" * Test class for the DateAndTimeParser in utilities package","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"public class DateAndTimeParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the acceptDateAndTime method with the correct input, no exception thrown","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    public void acceptDateAndTime_correctDateTime_noException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"        assertDoesNotThrow(() -\u003e DateAndTimeParser.acceptDateAndTime(\"12/12/2023 1800\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        assertDoesNotThrow(() -\u003e DateAndTimeParser.acceptDateAndTime(\"13/12/2023 1700\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the acceptDateAndTime method with the wrong input, exception thrown","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    public void acceptDateAndTime_incorrectDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"            DateAndTimeParser.acceptDateAndTime(\"12-12-2023 5pm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"            assertEquals(\"The date and time format is invalid. Please try again!\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the acceptDateAndTime method with the wrong input, exception thrown","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    public void acceptDateAndTime_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"            DateAndTimeParser.acceptDateAndTime(\"30/02/2024 1200\");","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"            fail();","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"            assertEquals(\"The date and time format is invalid. Please try again!\", e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the checkWhetherToAndFromValid method with the correct input, no exception thrown","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    public void checkWhetherToAndFromValid_correctToAndFrom_noException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        assertDoesNotThrow(() -\u003e DateAndTimeParser.checkWhetherToAndFromValid(\"11/12/2023 1800\",","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                \"12/12/2023 1800\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the checkWhetherToAndFromValid method with the wrong input, exception thrown","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    public void checkWhetherToAndFromValid_fromDateAfterToDate_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"            DateAndTimeParser.checkWhetherToAndFromValid(\"13/12/2023 1800\", \"12/12/2023 1800\");","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"            assertEquals(","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                    \"The \u0027/from\u0027 date and time should be before \u0027/to\u0027 date and time. Please try again!\",","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"                    e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the checkWhetherToAndFromValid method with the wrong input, exception thrown","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"    public void checkWhetherToAndFromValid_fromDateEqualToDate_exceptionThrown() {","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"            DateAndTimeParser.checkWhetherToAndFromValid(\"12/12/2023 1800\", \"12/12/2023 1800\");","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"            fail();","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"            assertEquals(","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"                    \"The \u0027/from\u0027 date and time cannot be equal to \u0027/to\u0027 date and time. Please try again!\",","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"                    e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the convertStringToDate method with the correct input","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    public void convertStringToDate() {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime expectedDate \u003d LocalDateTime.of(2023, 12, 12, 18, 0);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime actualDate \u003d DateAndTimeParser.convertStringToDate(\"12/12/2023 1800\");","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedDate, actualDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KhoonSun47":101}},{"path":"src/test/java/utilities/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import enums.Commands;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":" * Test class for the Parser in the utilities packages","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    private TaskListStub taskListStub;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    private StorageStub storageStub;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub \u003d new TaskListStub();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        storageStub \u003d new StorageStub(\"noStringPath\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        parser \u003d new Parser(taskListStub, storageStub);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for toDo switch case for the correct input (assertTrue if it","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * is added successfully, assertFalse if its not added successfully)","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_toDoCommand_addsToDo() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        String additionalInfo \u003d \"Read Book\";","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.TODO, additionalInfo);","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().get(0) instanceof Todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for toDo switch case for the incorrect input (assertTrue since","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"     * it should not be added, and list should be empty)","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_incorrectToDoCommand_doesNotAddTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.TODO, \"\");","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for deadline switch case for the correct input (assertTrue if","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"     * it is added successfully, assertFalse if its not added successfully)","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_deadlineCommand_addsDeadline() {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        String additionalInfo \u003d \"CS2103 Assignment 1 /by 12/12/2023 1800\";","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.DEADLINE, additionalInfo);","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().get(0) instanceof Deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for deadline switch case for the incorrect input (assertTrue","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"     * since it should not be added, and list should be empty)","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_incorrectDeadlineCommand_doesNotAddTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.DEADLINE, \"CS2103 Assignment 1\");","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.DEADLINE, \"CS2103 Assignment 1 /by\");","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.DEADLINE, \"CS2103 Assignment 1 /by 12/12/2023 6pm\");","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for event switch case for the correct input (assertTrue if it","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"     * is added successfully, assertFalse if its not added successfully)","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_eventCommand_addsDeadline() {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        String additionalInfo \u003d \"CS2103 Assignment 2 /from 12/12/2023 1800 /to 13/12/2023 1700\";","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.EVENT, additionalInfo);","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().get(0) instanceof Event);","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for event switch case for the incorrect input (assertTrue","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"     * since it should not be added, and list should be empty)","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_incorrectEventCommand_doesNotAddTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.EVENT, \"CS2103 Assignment 2\");","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.EVENT, \"CS2103 Assignment 2 /from 12/12/2023 1800 \");","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.EVENT, \"CS2103 Assignment 2 /from 12/12/2023 1800 /to \");","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.EVENT,","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"                \"CS2103 Assignment 2 /from 12/12/2023 1800 /to 11/12/2023 1900\");","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.EVENT,","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"                \"CS2103 Assignment 2 /from 12/12/2023 6pm /to 12/12/2023 7pm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for delete switch case, check whether a task has been deleted","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"     * successfully","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_deleteCommand_deleteTaskFromList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"        Todo todo \u003d new Todo(\"Test Task Added To File\");","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub.addTask(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"        // Since there is only one task, the ID of the task is 1","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.DELETE, \"1\");","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for mark switch case, check whether a task has been marked","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"     * successfully","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_markCommand_markTaskAsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"        Todo todo \u003d new Todo(\"Test Task Added To File\", false, \"HIGH\");","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub.addTask(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"        // Since there is only one task, the ID of the task is 1","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.MARK, \"1\");","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(\"X\", taskListStub.getTasks().get(0).getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for mark switch case, check whether a task has been unmarked","lastModifiedDate":"2024-02-21"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"     * successfully","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_markCommand_markTaskAsNotDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"        Todo todo \u003d new Todo(\"Test Task Added To File\", true, \"HIGH\");","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub.addTask(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"        // Since there is only one task, the ID of the task is 1","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.UNMARK, \"1\");","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(\" \", taskListStub.getTasks().get(0).getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for priority switch case for the incorrect input","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_incorrectPriorityCommand_doesNotAddTask() {","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"        Todo todo \u003d new Todo(\"Test Task Added To File\", true, \"HIGH\");","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub.addTask(todo);","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"        // Since there is only one task, the ID of the task is 1","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.PRIORITY, \"\");","lastModifiedDate":"2024-02-21"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.PRIORITY, \"/id 1\");","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.PRIORITY, \"/id 1 /priority \");","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.PRIORITY, \"/id 2 /priority high\");","lastModifiedDate":"2024-02-21"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.PRIORITY, \"/id 1 /priority wrongInput\");","lastModifiedDate":"2024-02-21"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(\"HIGH\", taskListStub.getTasks().get(0).getPriority());","lastModifiedDate":"2024-02-21"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KhoonSun47":162}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"todo make dinner","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"deadline create linkedin account /by Monday","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"mark 5","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"REM run the program, feed enums from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KhoonSun47":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"java -classpath ../bin William \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KhoonSun47":1,"-":37}}]
