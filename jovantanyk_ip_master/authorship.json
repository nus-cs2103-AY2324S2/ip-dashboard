[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.1.0\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"javafx {","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"    mainClass.set(\"paimon.Paimon\")","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"    archiveFileName \u003d \"paimon.jar\"","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"checkstyle {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jovantanyk":26,"-":42}},{"path":"data/paimon.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"D | 0 | do stuff 2 | 2023-02-01 00:00","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"D | 0 | fly kite 1 | 2001-05-13 13:04","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"D | 0 | fly kite 2 | 2001-05-13 00:00","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"jovantanyk":3}},{"path":"src/main/java/paimon/ChatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":" * Represents a custom exception type for handling chat errors.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"public class ChatException extends Exception {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"    public ChatException(String error) {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"        super(error);","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jovantanyk":10}},{"path":"src/main/java/paimon/DialogHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.Command;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.CommandParser;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.FileHandler;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" * Serves as the entry point for the application.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":" * It initializes the user interface and the task list, then enters a loop","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":" * to read and execute commands until an exit command is received.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"public class DialogHandler {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a DialogHandler Object","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    public DialogHandler() {","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"        // TODO Implement Exception Catching here","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"        this.taskList \u003d FileHandler.loadTaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * Gets the response from Paimon","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * @param input The input command.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     * @return The response from Duke.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"            CommandParser parser \u003d new CommandParser(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"            Command command \u003d parser.parseInput();","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"            return command.execute(taskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"            return UiHandler.getErrorMessage(e);","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"jovantanyk":42}},{"path":"src/main/java/paimon/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.layout.BorderPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"import paimon.controller.ChatController;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":" * The Main class serves as the entry point for the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":" * It initializes different javafx components and loads them","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":" * by setting them inside our primaryStage.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":" * @author jovantanyk","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":" **/","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    private Stage primaryStage;","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    private BorderPane rootLayout;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    private final DialogHandler dialogHandler;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    public Main() {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"        this.dialogHandler \u003d new DialogHandler();","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"        this.primaryStage.setTitle(\"Paimon\");","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"        initRootLayout();","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"        showChatView();","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"     * Initializes Root layout","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"     **/","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"    public void initRootLayout() {","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"            //First, load root layout from RootLayout.fxml","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"            FXMLLoader loader \u003d new FXMLLoader();","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"            loader.setLocation(Main.class.getResource(\"/view/RootLayout.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"            this.rootLayout \u003d loader.load();","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"            //Second, show the scene containing the root layout.","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"            Scene scene \u003d new Scene(rootLayout);","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"            //Third, show the primary stage","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"            primaryStage.show();","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"     * Loads Chat View and sets it to Center of Stage","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"     **/","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"    public void showChatView() {","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"            //First, load EmployeeView from EmployeeView.fxml","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"            FXMLLoader loader \u003d new FXMLLoader();","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"            loader.setLocation(Main.class.getResource(\"/view/ChatView.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"            AnchorPane chatView \u003d loader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"            // Set Chat view into the center of root layout.","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"jovantanyk"},"content":"            this.rootLayout.setCenter(chatView);","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"jovantanyk"},"content":"            ChatController controller \u003d loader.getController();","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"jovantanyk"},"content":"            controller.setDialogHandler(this.dialogHandler);","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"jovantanyk":77}},{"path":"src/main/java/paimon/Paimon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":" * Launcher Class that serves as the starting point of the application","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"public class Paimon {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"jovantanyk":12}},{"path":"src/main/java/paimon/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":" * Represents the abstract base for commands in the application. This class provides a structure","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" * for executing commands and determining whether a command should signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"     * Executes the command with the given task list and UI handler.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"     * This method defines how the command modifies the task list or interacts with the user","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"     * through the UI, depending on the specific command type.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     * @param tasks The task list that the command will operate on.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If an error occurs during command execution.","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    public abstract String execute(TaskList tasks) throws ChatException;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"     * Determines whether the command is an exit command.","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     * This method allows the application to check if executing this command","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * should signal the application to terminate.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":32}},{"path":"src/main/java/paimon/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.DeadlineTask;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.DateParser;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to add a deadline task to the task list. This command includes the task description","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":" * and the end date string, which is parsed to a {@link LocalDateTime} object to create a {@link DeadlineTask}.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    private final String description;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    private final String endDateString;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a DeadlineCommand with the specified task description and end date string.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     * @param description   The description of the deadline task.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * @param endDateString The end date of the task as a string, to be parsed to {@link LocalDateTime}.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"    public DeadlineCommand(String description, String endDateString) {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"        this.endDateString \u003d endDateString;","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"     * Executes the command by parsing the end date string, creating a new {@link DeadlineTask},","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"     * and adding it to the task list. Notifies the user through the UI handler.","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"     * @param tasks The task list to which the deadline task is added.","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If the end date string cannot be parsed into a valid date/time.","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList tasks) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"        LocalDateTime endDate \u003d DateParser.parseDate(endDateString);","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"        Task deadlineTask \u003d new DeadlineTask(this.description, endDate);","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"        tasks.addTask(deadlineTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"        return UiHandler.getAddTaskMessage(deadlineTask.getTask(), tasks.getSize());","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command does not signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"     * @return false always, as the deadline command does not terminate the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"        return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":58}},{"path":"src/main/java/paimon/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to delete a task from the task list. The task to be deleted","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" * is identified by an index provided by the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"    private final String indexString;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a DeleteCommand with the index of the task to be deleted.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     * @param indexString The string representation of the task\u0027s index in the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    public DeleteCommand(String indexString) {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"        this.indexString \u003d indexString;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"     * Executes the delete command by converting the index string to an integer,","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     * validating it, and then deleting the corresponding task from the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * Notifies the user of the action through the UI handler.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * @param taskList The task list from which a task will be deleted.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If the index string cannot be converted to a valid integer,","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     *                       or if the index is out of bounds for the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList taskList) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"            int deleteIndex \u003d Integer.parseInt(indexString);","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"            if (deleteIndex \u003e\u003d 1 \u0026\u0026 deleteIndex \u003c\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"                taskList.deleteTask(deleteIndex - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"                return UiHandler.getDeleteTaskMessage(taskList.getSize());","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"            } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"                throw new ChatException(\"Sorry Traveller, that task does not exist\");","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"            throw new ChatException(\"Sorry Traveller, your input is invalid\");","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"            throw new ChatException(\"Sorry Traveller, your index is out of bounds\");","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command does not signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"     * @return false always, as deleting a task does not terminate the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"        return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":59}},{"path":"src/main/java/paimon/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.EventTask;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.DateParser;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to add an event task to the task list. The event task includes a description,","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":" * a start date/time, and an end date/time.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    private final String description;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    private final String startDateString;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    private final String endDateString;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"     * Constructs an EventCommand with the specified task description, start date/time, and end date/time.","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * @param description     The description of the event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     * @param startDateString The start date/time of the event as a string.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * @param endDateString   The end date/time of the event as a string.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"    public EventCommand(String description, String startDateString, String endDateString) {","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"        this.startDateString \u003d startDateString;","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"        this.endDateString \u003d endDateString;","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"     * Executes the event command by parsing the start and end date strings, creating a new {@link EventTask},","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"     * and adding it to the task list. Notifies the user of the added task through the UI handler.","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"     * @param tasks The task list to which the event task is added.","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If the start or end date strings cannot be parsed into valid dates/times.","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList tasks) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"        LocalDateTime startDate \u003d DateParser.parseDate(startDateString);","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"        LocalDateTime endDate \u003d DateParser.parseDate(endDateString);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"        Task eventTask \u003d new EventTask(this.description, startDate, endDate);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"        tasks.addTask(eventTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        return UiHandler.getAddTaskMessage(eventTask.getTask(), tasks.getSize());","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command does not signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"     * @return false always, as adding an event task does not terminate the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"        return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":62}},{"path":"src/main/java/paimon/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to exit the application. This command does not perform any action","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" * on the task list but signals the application to terminate its execution.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"     * Executes the exit command. This method is intentionally left blank as the command","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"     * does not perform any actions on the task list or UI, but merely indicates the application","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     * should exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     * @param tasks The task list, not used by this command.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException Not thrown by this command.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList tasks) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"        return \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command should signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @return true always, as this command signals the application to terminate.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        return true;","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":37}},{"path":"src/main/java/paimon/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to search for tasks by a keyword. This command allows users","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" * to find tasks that contain the specified keyword in their description.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a {@code FindCommand} with the specified keyword for searching tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     * @param keyword The keyword used to search through tasks\u0027 descriptions.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     * Executes the find command by searching for tasks that contain the keyword in their description.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * If matching tasks are found, their details are displayed to the user. If no tasks match the keyword,","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     * a {@link ChatException} is thrown to indicate that no matching tasks were found.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     * @param taskList The task list to search for matching tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If no tasks containing the keyword are found.","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList taskList) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        String foundTasks \u003d taskList.getFoundString(this.keyword);","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"            throw new ChatException(\"Could not find any tasks with that keyword\");","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"            return UiHandler.getFoundTasksMessage(foundTasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command does not signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"     * @return false always, program is not exiting here","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"        return false;","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"jovantanyk":52}},{"path":"src/main/java/paimon/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to display help information to the user. This command triggers","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" * the UI handler to show available commands and their descriptions, assisting users in","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" * understanding how to interact with the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"     * Executes the help command by invoking the UI handler\u0027s method to display","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     * help information. This method provides users with guidance on available commands","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     * and their usage within the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     * @param tasks The task list, not directly used by this command but required by the method signature.","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException Not thrown by this command but declared due to the method signature.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList tasks) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"        return UiHandler.getHelpMessage();","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command does not signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     * @return false always, as this command is meant to provide information and does not terminate the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"        return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":39}},{"path":"src/main/java/paimon/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to list all tasks in the task list. When executed, this command","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" * triggers the UI handler to display a formatted list of all tasks, providing the user","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" * with an overview of their tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"     * Executes the list command by invoking the UI handler\u0027s method to display","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     * the list of tasks. This method provides users with a comprehensive view","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     * of their current tasks, including details such as status (done or not done),","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     * type (todo, deadline, event), and descriptions.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"     * @param tasks The task list containing the tasks to be listed.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException Not thrown by this command but declared due to the method signature.","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList tasks) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"        return UiHandler.getListMessage(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command does not signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     * @return false always, as this command is intended to display information and does not terminate the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":40}},{"path":"src/main/java/paimon/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to mark a specific task in the task list as done. The task to be marked","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" * is identified by its index provided by the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"    private final String indexString;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a MarkCommand with the index of the task to be marked as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     * @param indexString The string representation of the task\u0027s index in the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    public MarkCommand(String indexString) {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"        this.indexString \u003d indexString;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     * Executes the mark command by parsing the index string to an integer, validating it,","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * and then marking the corresponding task as done if it\u0027s not already marked.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     * Notifies the user of the action through the UI handler.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     * @param taskList The task list from which a task will be marked as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If the index string cannot be converted to a valid integer,","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     *                       or if the index is out of bounds for the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList taskList) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"            int markIndex \u003d Integer.parseInt(indexString);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"            if (markIndex \u003e\u003d 1 \u0026\u0026 markIndex \u003c\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"                Task markTask \u003d taskList.getTask(markIndex - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"                if (taskList.markTask(markIndex - 1, true)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"                    return UiHandler.getMarkTaskMessage(markTask.getTask(), true);","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"                } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"                    throw new ChatException(\"Traveller, this task is already marked as done!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"            } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"                throw new ChatException(\"Sorry Traveller, that task does not exist\");","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"            throw new ChatException(\"Sorry Traveller, your input is invalid\");","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"            throw new ChatException(\"Sorry Traveller, your index is out of bounds\");","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command does not signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"     * @return false always, as marking a task as done does not terminate the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"        return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":64}},{"path":"src/main/java/paimon/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TodoTask;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to add a new to-do task to the task list. A to-do task consists","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" * only of a description and does not have a specific time or date by which it must be completed.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"    private final String description;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a TodoCommand with the specified description for the new to-do task.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     * @param description The textual description of the to-do task to be added.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * Executes the to-do command by creating a new {@link TodoTask} with the provided description","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     * and adding it to the task list. Notifies the user through the UI handler about the addition","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * of the new task and the updated number of tasks in the list.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @param taskList The task list to which the new to-do task will be added.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If any errors occur during the execution of the command. In the current","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"     *                       implementation, this exception is unlikely to be thrown, but it is included to conform","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"     *                       to the abstract method\u0027s signature.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList taskList) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        Task eventTask \u003d new TodoTask(this.description);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        return UiHandler.getAddTaskMessage(eventTask.getTask(), taskList.getSize());","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command does not signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"     * @return false always, as adding a to-do task does not terminate the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"        return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":52}},{"path":"src/main/java/paimon/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" * Represents a command to mark a specific task in the task list as not done. The task to be unmarked","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":" * is identified by an index provided by the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"    private final String indexString;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     * Constructs an UnmarkCommand with the index of the task to be marked as not done.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     * @param indexString The string representation of the task\u0027s index in the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    public UnmarkCommand(String indexString) {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"        this.indexString \u003d indexString;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     * Executes the unmark command by parsing the index string to an integer, validating it,","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * and then marking the corresponding task as not done if it\u0027s not already unmarked.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     * Provides feedback to the user through the UI handler.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     * @param taskList The task list from which a task will be marked as not done.","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @return A String to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If the index string cannot be converted to a valid integer,","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     *                       or if the index is out of bounds for the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    public String execute(TaskList taskList) throws ChatException {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"            int markIndex \u003d Integer.parseInt(indexString);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"            if (markIndex \u003e\u003d 1 \u0026\u0026 markIndex \u003c\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"                Task markTask \u003d taskList.getTask(markIndex - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"                if (taskList.markTask(markIndex - 1, false)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"                    return UiHandler.getMarkTaskMessage(markTask.getTask(), true);","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"                } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"                    throw new ChatException(\"Traveller, this task is already unmarked.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"            } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"                throw new ChatException(\"Sorry Traveller, that task does not exist\");","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"            throw new ChatException(\"Sorry Traveller, your input is invalid\");","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"            throw new ChatException(\"Sorry Traveller, your index is out of bounds\");","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"     * Indicates that executing this command does not signal the application to exit.","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"     * @return false always, as unmarking a task as not done does not terminate the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"        return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":64}},{"path":"src/main/java/paimon/controller/ChatController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.controller;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import paimon.DialogHandler;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":" * Controller for MainView. Provides the layout for the other controls.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"public class ChatController extends AnchorPane {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    private DialogHandler dialogHandler;","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Traveller.png\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Paimon.png\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    public void setDialogHandler(DialogHandler d) {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"        this.dialogHandler \u003d d;","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"        String response \u003d dialogHandler.getResponse(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"                DialogBoxController.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"                DialogBoxController.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        );","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"jovantanyk":53}},{"path":"src/main/java/paimon/controller/DialogBoxController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.controller;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"public class DialogBoxController extends HBox {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    private DialogBoxController(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(ChatController.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"    private void flip() {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"    public static DialogBoxController getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"        return new DialogBoxController(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"    public static DialogBoxController getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"        var db \u003d new DialogBoxController(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"        db.flip();","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"        return db;","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"jovantanyk":63}},{"path":"src/main/java/paimon/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":" * Represents a task that has a deadline. This class extends {@link Task} to include deadline functionality.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a DeadlineTask with the specified description and end date.","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"     * @param endDate     The deadline of the task, represented as a {@link LocalDateTime}.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"    public DeadlineTask(String description, LocalDateTime endDate) {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"        super(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"     * Returns the string representation of the deadline task, including its status (done or not done),","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"     * description, and deadline.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     * @return A string indicating the task\u0027s type (D for Deadline), status, description, and deadline.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"            return \"[D][X] \" + this.description + \" (by: \" + endDate.format(DATE_FORMAT) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"            return \"[D][ ] \" + this.description + \" (by: \" + endDate.format(DATE_FORMAT) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"     * Returns the string representation of the deadline task for saving to a file. This includes","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"     * the task type (D), its status, description, and deadline formatted according","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"     * to {@link Task#DATE_FORMAT}.","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"     * @return A string suitable for file storage.","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"            return \"D | 1 | \" + this.description + \" | \" + this.endDate.format(DATE_FORMAT);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"            return \"D | 0 | \" + this.description + \" | \" + this.endDate.format(DATE_FORMAT);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jovantanyk":52}},{"path":"src/main/java/paimon/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":" * Represents an event task that has both a start and end date/time. This class extends {@link Task}","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":" * to incorporate the timeframe functionality, making it suitable for events or appointments.","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"     * Constructs an EventTask with a description, start date/time, and end date/time.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     * @param startDate   The start date and time of the event, represented as a {@link LocalDateTime}.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     * @param endDate     The end date and time of the event, represented as a {@link LocalDateTime}.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    public EventTask(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"        super(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     * Returns the string representation of the event task, including its status (done or not done),","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * description, and the timeframe (start and end dates/times).","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @return A string indicating the task\u0027s type (E for Event), status, description, and timeframe.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"            return \"[E][X] \" + this.description","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"                    + \" (from: \" + startDate.format(DATE_FORMAT) + \", to: \" + this.endDate.format(DATE_FORMAT) + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"            return \"[E][ ] \" + this.description","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"                    + \" (from: \" + startDate.format(DATE_FORMAT) + \", to: \" + this.endDate.format(DATE_FORMAT) + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"     * Returns the string representation of the event task for saving to a file. This includes","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"     * the task type (E), its status (done or not done), description, and start and end dates/times","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"     * formatted according to {@link Task#DATE_FORMAT}.","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"     * @return A string suitable for file storage that captures all relevant details of the event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"            return \"E | 1 | \" + this.description","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"                    + \" | \" + this.startDate.format(DATE_FORMAT) + \" | \" + this.endDate.format(DATE_FORMAT);","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"            return \"E | 0 | \" + this.description","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"                    + \" | \" + this.startDate.format(DATE_FORMAT) + \" | \" + this.endDate.format(DATE_FORMAT);","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jovantanyk":61}},{"path":"src/main/java/paimon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":" * Represents a generic task within the application. This abstract class provides","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":" * a foundation for different types of tasks (e.g., Todo, Deadline, Event) and defines","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":" * common properties and methods that are shared among all task types.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"     * The date and time format used for representing task deadlines or event timings.","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"    protected static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     * The description of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"     * The completion status of the task. True if the task is completed, false otherwise.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a new Task instance with the specified description. By default, the task","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * is not completed (isDone is false).","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @param description The textual description of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"     * Returns a string representation of the task for display purposes. The specific format","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"     * of the string depends on the type of task (implemented in subclasses).","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"    public abstract String getTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"     * Returns a string representation of the task suitable for storage in a file. This typically","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"     * includes the task type, status, description, and any dates/times formatted as needed.","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"     * @return A string suitable for file storage that encapsulates the task\u0027s details.","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"     * @param isDone The new completion status of the task; true if the task is completed, false otherwise.","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"    public void setTaskState(boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"        return description.contains(keyword);","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jovantanyk":67}},{"path":"src/main/java/paimon/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.FileHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":" * Manages a list of tasks in the application. This class provides functionality to add, delete,","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":" * and mark tasks as done or not done. It also handles saving the task list to a file after any modifications.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"    private final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"     * Retrieves a task from the list by its index.","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"        return this.list.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        return this.list.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"     * Adds a new task to the task list and saves the updated list to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"        this.list.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"        FileHandler.saveTaskList(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"     * Deletes a task from the task list by its index and saves the updated list to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"        this.list.remove(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"        FileHandler.saveTaskList(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"     * Marks a task as done or not done based on the given index and the specified state,","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"     * then saves the updated task list to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"     * @param index  The index of the task to be marked.","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"     * @param isDone The new completion state of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"     * @return true if the task\u0027s state was changed, false if it was already in the specified state.","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"jovantanyk"},"content":"    public boolean markTask(int index, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"jovantanyk"},"content":"        Task task \u003d this.list.get(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"jovantanyk"},"content":"        if (task.isDone \u003d\u003d isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"            return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"            task.setTaskState(isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"            FileHandler.saveTaskList(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"jovantanyk"},"content":"            return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"jovantanyk"},"content":"     * Returns a string representation of the task list, with each task numbered and formatted as a list item.","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"jovantanyk"},"content":"     * @return A formatted string representing all tasks in the list.","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"jovantanyk"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"jovantanyk"},"content":"        int size \u003d this.list.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jovantanyk"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"jovantanyk"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jovantanyk"},"content":"            return returnString;","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jovantanyk"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jovantanyk"},"content":"            String currentIndex \u003d String.valueOf(i + 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"jovantanyk"},"content":"            if (i \u003d\u003d size - 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"jovantanyk"},"content":"                returnString \u003d returnString + currentIndex + \": \" + this.list.get(i).getTask();","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"jovantanyk"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"jovantanyk"},"content":"                returnString \u003d returnString + currentIndex + \": \" + this.list.get(i).getTask() + \"\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"jovantanyk"},"content":"        return returnString;","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"jovantanyk"},"content":"    public String getFoundString(String keyword) {","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"jovantanyk"},"content":"        int size \u003d this.list.size();","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"jovantanyk"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"jovantanyk"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"jovantanyk"},"content":"            return returnString;","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"jovantanyk"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"jovantanyk"},"content":"            String currentIndex \u003d String.valueOf(i + 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"jovantanyk"},"content":"            Task currentTask \u003d this.list.get(i);","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"jovantanyk"},"content":"            if (currentTask.containsKeyword(keyword)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"jovantanyk"},"content":"                if (i \u003d\u003d size - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"jovantanyk"},"content":"                    returnString \u003d returnString + currentIndex + \": \" + this.list.get(i).getTask();","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"jovantanyk"},"content":"                } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"jovantanyk"},"content":"                    returnString \u003d returnString + currentIndex + \": \" + this.list.get(i).getTask() + \"\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"jovantanyk"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"jovantanyk"},"content":"        return returnString;","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jovantanyk":122}},{"path":"src/main/java/paimon/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":" * Represents a to-do task in the application. This type of task does not have a deadline or time frame","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":" * and is simply marked as done or not done. It extends the {@link Task} class to inherit its basic task","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":" * functionalities.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a new {@code TodoTask} with the specified description.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"     * @param description The textual description of the to-do task.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"        super(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     * Returns the string representation of the to-do task, including its status (done or not done)","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"     * and description. The task type is indicated by \"[T]\".","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"     * @return A string representing the to-do task\u0027s status and description.","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"        return (isDone ? \"[T][X] \" + this.description : \"[T][ ] \" + this.description);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * Returns the string representation of the to-do task for saving to a file. This includes","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     * the task type (\"T\"), its status (done or not done), and description.","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"     * @return A string suitable for file storage that captures the to-do task\u0027s details.","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"            return \"T | 1 | \" + this.description;","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"            return \"T | 0 | \" + this.description;","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jovantanyk":44}},{"path":"src/main/java/paimon/util/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.util;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.DeadlineCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.DeleteCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.EventCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.ExitCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.FindCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.HelpCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.ListCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.MarkCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.TodoCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.UnmarkCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":" * Parses user input into specific commands for the application to execute.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":" * This class takes the user input, determines the type of command it represents,","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":" * and then constructs the appropriate command object to be executed.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"public class CommandParser {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    private final String input;","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    private final String type;","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * Constructs a new CommandParser with the user\u0027s input.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     * It also determines the command type based on the input.","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"     * @param input The full command input from the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    public CommandParser(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Input for CommandParser cannot be null or empty\";","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"        int firstSpaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        if (firstSpaceIndex !\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"            this.type \u003d input.substring(0, firstSpaceIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"            this.type \u003d input;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"        assert !this.type.isBlank() : \"Command type cannot be empty\";","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"     * Returns the type of the command determined from the user\u0027s input.","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"     * @return The command type as a {@code String}.","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"    public String getType() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"        return this.type;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"     * Parses the user\u0027s input and constructs the corresponding command object.","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"     * The method uses regular expressions to match against specific command patterns","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"     * and extracts necessary details to construct command objects.","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"     * @return A {@link Command} object representing the user\u0027s command.","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If the input does follow proper syntax.","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"    public Command parseInput() throws ChatException {","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"        switch (this.type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"jovantanyk"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"jovantanyk"},"content":"        case \"list\":","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"jovantanyk"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"jovantanyk"},"content":"        case \"help\":","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"            return parseTodoCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jovantanyk"},"content":"            return parseDeadlineCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"        case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"jovantanyk"},"content":"            return parseEventCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"jovantanyk"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jovantanyk"},"content":"            return parseMarkCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"jovantanyk"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jovantanyk"},"content":"            return parseUnmarkCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"jovantanyk"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"jovantanyk"},"content":"            return parseDeleteCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"jovantanyk"},"content":"        case \"find\":","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"jovantanyk"},"content":"            return parseFindCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"jovantanyk"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jovantanyk"},"content":"            throw new ChatException(\"Command not found, type help for a list of commands\");","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"jovantanyk"},"content":"    private Command parseTodoCommand() throws ChatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"jovantanyk"},"content":"        Matcher matcher \u003d matchCommand(\"^(\\\\w+)(\\\\s)(.+)\", input, \"todo \u003ctask\u003e\");","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"jovantanyk"},"content":"        return new TodoCommand(matcher.group(3));","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"jovantanyk"},"content":"    private Command parseDeadlineCommand() throws ChatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"jovantanyk"},"content":"        Matcher matcher \u003d matchCommand(\"^(\\\\w+) (.+?)\\\\/by (.+)$\", input, \"deadline \u003ctask\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"jovantanyk"},"content":"        return new DeadlineCommand(matcher.group(2), matcher.group(3));","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"jovantanyk"},"content":"    private Command parseEventCommand() throws ChatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"jovantanyk"},"content":"        Matcher matcher \u003d matchCommand(\"^(\\\\w+) (.+?) \\\\/from (.+?) \\\\/to (.+)$\",","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"jovantanyk"},"content":"                input, \"event \u003ctask\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"jovantanyk"},"content":"        return new EventCommand(matcher.group(2), matcher.group(3), matcher.group(4));","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"jovantanyk"},"content":"    private Command parseMarkCommand() throws ChatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"jovantanyk"},"content":"        Matcher matcher \u003d matchCommand(\"^(\\\\w+) (\\\\d+)\", input, \"mark \u003cnumber\u003e\");","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"jovantanyk"},"content":"        return new MarkCommand(matcher.group(2));","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"jovantanyk"},"content":"    private Command parseUnmarkCommand() throws ChatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"jovantanyk"},"content":"        Matcher matcher \u003d matchCommand(\"^(\\\\w+) (\\\\d+)\", input, \"unmark \u003cnumber\u003e\");","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"jovantanyk"},"content":"        return new UnmarkCommand(matcher.group(2));","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"jovantanyk"},"content":"    private Command parseDeleteCommand() throws ChatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"jovantanyk"},"content":"        Matcher matcher \u003d matchCommand(\"^(\\\\w+) (\\\\d+)\", input, \"delete \u003cnumber\u003e\");","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"jovantanyk"},"content":"        return new DeleteCommand(matcher.group(2));","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"jovantanyk"},"content":"    private Command parseFindCommand() throws ChatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"jovantanyk"},"content":"        Matcher matcher \u003d matchCommand(\"^(\\\\w+)(\\\\s)(.+)\", input, \"find \u003ckeyword\u003e\");","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"jovantanyk"},"content":"        return new FindCommand(matcher.group(3));","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"jovantanyk"},"content":"    private Matcher matchCommand(String regex, String input, String exceptionString) throws ChatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"jovantanyk"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"jovantanyk"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"jovantanyk"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"jovantanyk"},"content":"            throw new ChatException(\"Input does not match expected format: \" + exceptionString);","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"jovantanyk"},"content":"        return matcher;","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jovantanyk":137}},{"path":"src/main/java/paimon/util/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.util;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":" * Provides functionality to parse date strings into {@link LocalDateTime} objects.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":" * Supports multiple date and time formats for flexibility in user input.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"public class DateParser {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"    private static final List\u003cFormatterWithTime\u003e formatters \u003d Arrays.asList(","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"            new FormatterWithTime(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"), true),","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"            new FormatterWithTime(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"), false),","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"            new FormatterWithTime(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"), true),","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"            new FormatterWithTime(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"), false),","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"            new FormatterWithTime(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"), true),","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"            new FormatterWithTime(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"), false)","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    );","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * Parses a string representing a date or datetime into a {@link LocalDateTime} object.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     * The method attempts to parse the input string using multiple predefined formats.","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * If the input does not match any of the supported formats, a {@link ChatException} is thrown.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     * @param input The date string to be parsed.","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"     * @return A {@link LocalDateTime} object representing the specified date/time.","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"     * @throws ChatException If the input string cannot be parsed into a valid date/time.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    public static LocalDateTime parseDate(String input) throws ChatException {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"        for (FormatterWithTime formatterWithTime : formatters) {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"                // Attempt to parse as LocalDateTime","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"                if (formatterWithTime.hasTime) {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"                    // Check if the formatter expects time component","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"                    return LocalDateTime.parse(input, formatterWithTime.formatter);","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"                } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"                    // Formatter is for LocalDate, need to convert to LocalDateTime","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"                    LocalDate date \u003d LocalDate.parse(input, formatterWithTime.formatter);","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"                    return date.atStartOfDay(); // Converts LocalDate to LocalDateTime at start of the day","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"                // Continue to the next formatter","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"        throw new ChatException(","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"                \"The date should be in the format: yyyy/MM/dd, yyyy/MM/dd HH:mm, yyyy-MM-DD, dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"     * A helper class that pairs a {@link DateTimeFormatter} with a boolean indicating","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"     * whether the formatter includes a time component.","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"    private static class FormatterWithTime {","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"        final DateTimeFormatter formatter;","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"        final boolean hasTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"        /**","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"         * Constructs a FormatterWithTime.","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"jovantanyk"},"content":"         *","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"jovantanyk"},"content":"         * @param formatter The {@link DateTimeFormatter} used for parsing.","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"jovantanyk"},"content":"         * @param hasTime   Indicates whether the formatter includes a time component.","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"jovantanyk"},"content":"         */","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"        FormatterWithTime(DateTimeFormatter formatter, boolean hasTime) {","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"            this.formatter \u003d formatter;","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"            this.hasTime \u003d hasTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jovantanyk":77}},{"path":"src/main/java/paimon/util/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.util;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import java.io.File;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.DeadlineTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.EventTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TodoTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":" * Handles file operations for the application, including loading tasks from a file","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":" * and saving tasks to a file. This class ensures tasks persist between application runs.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"public class FileHandler {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    private static final String FILE_PATH \u003d \"./data/paimon.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"     * Converts a line of text from the task file into a {@link Task} object.","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"     * @param data String data read from a line in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     * @return A {@link Task} object translated from each line of data.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * @throws IOException If there is an error parsing the task data.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"    private static Task convertDataToTask(String data) throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"        String[] fields \u003d data.split(\"\\\\|\");","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"        assert fields.length \u003e\u003d 3 : \"Task data does not contain expected number of fields\";","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"        for (int i \u003d 0; i \u003c fields.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"            fields[i] \u003d fields[i].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"        Task returnTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        // Might need to catch DateTimeParseException here","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"        switch (fields[0]) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        case \"T\":","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"            assert fields.length \u003d\u003d 3 : \"TodoTask data format is incorrect\";","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"            returnTask \u003d new TodoTask(fields[2]);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"        case \"D\":","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"            assert fields.length \u003d\u003d 4 : \"DeadlineTask data format is incorrect\";","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"                returnTask \u003d new DeadlineTask(fields[2], DateParser.parseDate(fields[3]));","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"            } catch (ChatException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"                throw new IOException(\"Unable to read date \" + fields[3]);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"        case \"E\":","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"            assert fields.length \u003d\u003d 5 : \"EventTask data format is incorrect\";","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"                returnTask \u003d new EventTask(fields[2], DateParser.parseDate(fields[3]), DateParser.parseDate(fields[4]));","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"            } catch (ChatException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"                throw new IOException(\"Unable to read date \" + fields[3] + \" \" + fields[4]);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"        default:","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"            throw new IOException(\"Invalid task type: \" + fields[0]);","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"        assert returnTask !\u003d null : \"Return task should not be empty\";","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"        returnTask.setTaskState(fields[1].equals(\"1\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"        return returnTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"jovantanyk"},"content":"     * Loads the list of tasks from the file specified by {@link #FILE_PATH}.","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"jovantanyk"},"content":"     * If the file or directory does not exist, it attempts to create them.","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"     * @return A {@link TaskList} containing the tasks loaded from the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"    public static TaskList loadTaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"jovantanyk"},"content":"            File dataFile \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"            File directory \u003d new File(dataFile.getParent());","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"jovantanyk"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"jovantanyk"},"content":"                if (!directory.mkdir()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"jovantanyk"},"content":"                    System.out.println(\"Error occurred when trying to create new directory\");","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"jovantanyk"},"content":"                    return new TaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"jovantanyk"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"jovantanyk"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"jovantanyk"},"content":"                if (!dataFile.createNewFile()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"jovantanyk"},"content":"                    System.out.println(\"Error occurred when trying to create new file\");","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"jovantanyk"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"jovantanyk"},"content":"                return new TaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"jovantanyk"},"content":"            } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"jovantanyk"},"content":"                Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"jovantanyk"},"content":"                TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"jovantanyk"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"jovantanyk"},"content":"                    String data \u003d s.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"jovantanyk"},"content":"                    Task newTask \u003d convertDataToTask(data);","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"jovantanyk"},"content":"                    newTaskList.addTask(newTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"jovantanyk"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"jovantanyk"},"content":"                s.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"jovantanyk"},"content":"                return newTaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"jovantanyk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"jovantanyk"},"content":"            // Default behaviour is to return normal TaskList, and continue as normal","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"jovantanyk"},"content":"            System.out.println(\"Error occurred when trying to load file.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"jovantanyk"},"content":"        return new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"jovantanyk"},"content":"     * Saves the current list of tasks to the file specified by {@link #FILE_PATH}.","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"jovantanyk"},"content":"     * @param list The {@link TaskList} to be saved to the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"jovantanyk"},"content":"    public static void saveTaskList(TaskList list) {","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"jovantanyk"},"content":"        assert list !\u003d null : \"TaskList to save cannot be null\";","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"jovantanyk"},"content":"            FileWriter w \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"jovantanyk"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"jovantanyk"},"content":"                String writeString \u003d list.getTask(i).toFileString();","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"jovantanyk"},"content":"                w.write(writeString + \"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"jovantanyk"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"jovantanyk"},"content":"            w.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"jovantanyk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"jovantanyk"},"content":"            System.out.println(\"Unable to save Task List to file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jovantanyk":128}},{"path":"src/main/java/paimon/util/UiHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.util;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":" * Manages user interactions by displaying messages.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"public class UiHandler {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"     * Initializes a new instance of UiHandler with a Scanner","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"     * to read input from console.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    public UiHandler() {}","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"     * Displays a message to the user. Standard format for messages.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"     * @param mainMessage The primary message to display.","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    private static String formatMessage(String mainMessage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"        return \"--------------------\u003e\\n\" + mainMessage + \"\\n--------------------\u003e\";","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"     * Displays a message to the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"     * Use this when displaying tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"     * @param mainMessage The main message to display.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"     * @param subMessage  The sub message to provide additional details.","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"    private static String formatMessage(String mainMessage, String subMessage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        return mainMessage + \"\\n--------------------\u003e\\n\" + subMessage + \"\\n--------------------\u003e\";","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"     * Displays a detailed message to the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"     * Use this when displaying tasks along with a closing message.","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"     * @param mainMessage    The main message to display.","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"     * @param subMessage     The sub message to provide additional details.","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"     * @param closingMessage The closing message to conclude the interaction.","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"    private static String formatMessage(String mainMessage, String subMessage, String closingMessage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"        return mainMessage + \"\\n--------------------\u003e\\n\" + subMessage + \"\\n--------------------\u003e\\n\" + closingMessage;","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"     * Returns a help message detailing the syntax and commands supported.","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"        return formatMessage(\"You can perform the following actions, make sure to follow the syntax!\",","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"                \"list : Lists all your Tasks\\n\" + \"todo \u003ctask\u003e: Adds a Task without any deadline\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"                        + \"deadline \u003ctask\u003e /by \u003ctime\u003e: Adds a task done before a time\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"                        + \"event\u003cTask\u003e /from \u003ctime\u003e /to \u003ctime\u003e: Adds a task with a time window\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"                        + \"mark/unmark \u003cindex\u003e: Marks a Task as done. Index must be a number\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"                        + \"unmark \u003cindex\u003e: Mark a Task as not done. Index must be a number\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"                        + \"delete \u003cindex\u003e: Deletes a Task from your list!. Index must be a number\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"                        + \"find \u003ckeyword\u003e: Lists tasks that contain keyword\\n\" + \"bye : Exits the program\");","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"     * Notifies the user that a task has been added","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"     * @param taskString Task that was added","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"     * @param tasksLeft The total number of tasks left after adding","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"jovantanyk"},"content":"    public static String getAddTaskMessage(String taskString, int tasksLeft) {","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"jovantanyk"},"content":"        return formatMessage(\"Okay Traveller, I\u0027ve added the following task!\",","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"jovantanyk"},"content":"                taskString, \"You have \" + tasksLeft + \" tasks in your list\");","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"     * Notifies the user that a task has been deleted and displays the remaining number of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"jovantanyk"},"content":"     * @param tasksLeft The total number of tasks left after deletion.","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"jovantanyk"},"content":"    public static String getDeleteTaskMessage(int tasksLeft) {","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"jovantanyk"},"content":"        return formatMessage(\"Okay Traveller, I\u0027ve deleted the task! You now have \" + tasksLeft + \" tasks remaining.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"jovantanyk"},"content":"     * Returns the list of found tasks containing the keyword.","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"jovantanyk"},"content":"     * @param taskString The list of tasks found","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"jovantanyk"},"content":"    public static String getFoundTasksMessage(String taskString) {","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"jovantanyk"},"content":"        return formatMessage(\"Okay Traveller, here are the matching tasks\", taskString);","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"jovantanyk"},"content":"     * Notifies the user that a task\u0027s completion status has been updated.","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"jovantanyk"},"content":"     * @param taskString The task whose status was updated.","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"jovantanyk"},"content":"     * @param isDone     The new completion status of the task (true if done, false otherwise).","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"jovantanyk"},"content":"    public static String getMarkTaskMessage(String taskString, boolean isDone) {","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"jovantanyk"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"jovantanyk"},"content":"            return formatMessage(\"Okay Traveller, I\u0027ve marked the task as done\", taskString);","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"jovantanyk"},"content":"            return formatMessage(\"Okay Traveller, I\u0027ve unmarked this task\", taskString);","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"jovantanyk"},"content":"     * Returns a greeting message to the user when the application starts.","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"jovantanyk"},"content":"    public static String getGreetMessage() {","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"jovantanyk"},"content":"        return formatMessage(\"Greetings Traveller! I\u0027m Paimon, your friendly guide!\\nType help to see what I can do!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"jovantanyk"},"content":"     * Returns a goodbye message to the user when the application is exited.","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"jovantanyk"},"content":"    public static String getExitMessage() {","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"jovantanyk"},"content":"        return formatMessage(\"See you later Traveller!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"jovantanyk"},"content":"     * Returns the list of tasks to the user. If the list is empty, it notifies the user accordingly.","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"jovantanyk"},"content":"     * @param list The {@link TaskList} containing all current tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"jovantanyk"},"content":"     * @return String","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"jovantanyk"},"content":"    public static String getListMessage(TaskList list) {","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"jovantanyk"},"content":"        if (list.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"jovantanyk"},"content":"            return \"Your list is currently empty, add some tasks!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"jovantanyk"},"content":"        } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"jovantanyk"},"content":"            return \"Here is your list so far!\\n--------------------\u003e\\n\" + list + \"\\n--------------------\u003e\";","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":132,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"jovantanyk"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"jovantanyk"},"content":"     * Returns an error message to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"jovantanyk"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"jovantanyk"},"content":"     * @param e The {@link ChatException} containing the error message to be displayed.","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"jovantanyk"},"content":"     * @return String","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"jovantanyk"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"jovantanyk"},"content":"    public static String getErrorMessage(ChatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"jovantanyk"},"content":"        return e.getMessage();","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":142,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"jovantanyk":142}},{"path":"src/main/resources/view/ChatView.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"\u003cAnchorPane prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"paimon.controller.ChatController\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" minHeight\u003d\"352.0\" minWidth\u003d\"600.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"48.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER\" prefHeight\u003d\"342.0\" prefWidth\u003d\"591.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"      \u003cHBox layoutY\u003d\"346.0\" minHeight\u003d\"48.0\" minWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"          \u003cTextField fx:id\u003d\"userInput\" minHeight\u003d\"41.0\" minWidth\u003d\"512.0\" onAction\u003d\"#handleUserInput\" promptText\u003d\"Enter your command here..\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"          \u003cButton fx:id\u003d\"sendButton\" minHeight\u003d\"41.0\" minWidth\u003d\"76.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" text\u003d\"Send\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"jovantanyk":36}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"jovantanyk":16}},{"path":"src/main/resources/view/RootLayout.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"\u003cBorderPane prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"   \u003ctop\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"      \u003cMenuBar BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"        \u003cmenus\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"            \u003citems\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"            \u003c/items\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Edit\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"            \u003citems\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Delete\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"            \u003c/items\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"            \u003citems\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"About\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"            \u003c/items\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"        \u003c/menus\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"      \u003c/MenuBar\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"   \u003c/top\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"\u003c/BorderPane\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"jovantanyk":31}},{"path":"src/test/java/paimon/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.DeadlineCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.EventCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.ExitCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.HelpCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.ListCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"import paimon.command.TodoCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.CommandParser;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"public class CommandParserTest {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    private CommandParser parser;","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    void setUp() {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"        // This is optional if you want to initialize anything before each test","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"    void parseInput_byeCommand_success() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"bye\");","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(ExitCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"bye donuts banana\");","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(ExitCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"bye __\u003d1123+@!#^$^%\");","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(ExitCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"    void parseInput_listCommand_success() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"list\");","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(ListCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"list donuts banana\");","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(ListCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"list __\u003d1123+@!#^$^%\");","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(ListCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"    void parseInput_helpCommand_success() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"help\");","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(HelpCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"help donuts banana\");","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(HelpCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"help __\u003d1123+@!#^$^%\");","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(HelpCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"    void parseInput_todoCommand_success() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"todo buy milk\");","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(TodoCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"todo 101010 0129391 123\");","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(TodoCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"todo !@#+!@# / /1/123/123/\");","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(TodoCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"jovantanyk"},"content":"    void parseInput_todoCommand_chatExceptionThrown() {","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"        // TodoCommand description should not be empty!","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"            parser \u003d new CommandParser(\"todo \");","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"            assertInstanceOf(TodoCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"jovantanyk"},"content":"            fail();","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"jovantanyk"},"content":"            assertEquals(\"Input does not match expected format: todo \u003ctask\u003e\", e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"jovantanyk"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"jovantanyk"},"content":"    void parseInput_deadlineCommand_success() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"deadline buy earphones /by 2022-01-20\");","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(DeadlineCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"deadline do projects /by blah blah\");","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(DeadlineCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"deadline stufff /sadas /by something\");","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(DeadlineCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"jovantanyk"},"content":"    void parseInput_deadlineCommand_chatExceptionThrown() {","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"deadline\");","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"deadline /by this time\");","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"deadline do stuff\");","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"deadline do stuff /bwqyqw\");","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"jovantanyk"},"content":"    void parseInput_eventCommand_success() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"event work out /from 2022-01-20 /to 2022-01-22\");","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(EventCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"event do stuff /from blah blah /to blah blah\");","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(EventCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"event stuff /sdaf/af /sad/asd /from /asdasd /to /asd/asd\");","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"jovantanyk"},"content":"        assertInstanceOf(EventCommand.class, parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"jovantanyk"},"content":"    void parseInput_eventCommand_chatExceptionThrown() {","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"event\");","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"event work out /from 2022-01-20\");","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"event work out /to 2022-01-30\");","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"event /from 2022-01-02 /to 2022-02-03\");","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":128,"author":{"gitId":"jovantanyk"},"content":"    void testUnknownCommand() {","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"donut \");","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"\u003d123\u003d123\u003d/\");","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"helpp\");","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"jovantanyk"},"content":"        parser \u003d new CommandParser(\"dulete 1\");","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e parser.parseInput());","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"jovantanyk":140}},{"path":"src/test/java/paimon/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"package paimon.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"import paimon.ChatException;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jovantanyk"},"content":"import paimon.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jovantanyk"},"content":"import paimon.util.UiHandler;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"jovantanyk"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jovantanyk"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"jovantanyk"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"jovantanyk"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jovantanyk"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jovantanyk"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jovantanyk"},"content":"    public void tearDown() {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jovantanyk"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jovantanyk"},"content":"    public void execute_endDateValidFormat_success() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jovantanyk"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jovantanyk"},"content":"        UiHandler ui \u003d new UiHandler();","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jovantanyk"},"content":"        ArrayList\u003cCommand\u003e validDateCommands \u003d new ArrayList\u003cCommand\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"buy donuts 1\", \"2022/01/02 01:01\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"buy donuts 2\", \"2022/01/02\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"do stuff 1\", \"2023-02-01 10:01\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"do stuff 2\", \"2023-02-01\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"fly kite 1\", \"13/05/2001 13:04\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"fly kite 2\", \"13/05/2001\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.get(0).execute(taskList, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(\"Okay Traveller, I\u0027ve added the following task!\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\n[D][ ] buy donuts 1 (by: 2022-01-02 01:01)\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\nYou have 1 tasks in your list\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"jovantanyk"},"content":"        outputStreamCaptor.reset();","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.get(1).execute(taskList, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(\"Okay Traveller, I\u0027ve added the following task!\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\n[D][ ] buy donuts 2 (by: 2022-01-02 00:00)\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\nYou have 2 tasks in your list\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jovantanyk"},"content":"        outputStreamCaptor.reset();","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.get(2).execute(taskList, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(\"Okay Traveller, I\u0027ve added the following task!\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\n[D][ ] do stuff 1 (by: 2023-02-01 10:01)\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\nYou have 3 tasks in your list\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jovantanyk"},"content":"        outputStreamCaptor.reset();","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.get(3).execute(taskList, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(\"Okay Traveller, I\u0027ve added the following task!\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\n[D][ ] do stuff 2 (by: 2023-02-01 00:00)\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\nYou have 4 tasks in your list\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jovantanyk"},"content":"        outputStreamCaptor.reset();","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.get(4).execute(taskList, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(\"Okay Traveller, I\u0027ve added the following task!\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\n[D][ ] fly kite 1 (by: 2001-05-13 13:04)\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\nYou have 5 tasks in your list\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"jovantanyk"},"content":"        outputStreamCaptor.reset();","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.get(5).execute(taskList, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"jovantanyk"},"content":"        assertEquals(\"Okay Traveller, I\u0027ve added the following task!\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\n[D][ ] fly kite 2 (by: 2001-05-13 00:00)\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"jovantanyk"},"content":"                + \"--------------------\u003e\\nYou have 6 tasks in your list\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"jovantanyk"},"content":"        outputStreamCaptor.reset();","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"jovantanyk"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"jovantanyk"},"content":"    public void execute_taskNumberOutOfIndex_exceptionThrown() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"jovantanyk"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"jovantanyk"},"content":"        UiHandler ui \u003d new UiHandler();","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"jovantanyk"},"content":"        ArrayList\u003cCommand\u003e validDateCommands \u003d new ArrayList\u003cCommand\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"buy donuts\", \"2022-14-01\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"buy donuts\", \"2022-12-01 29:01\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"do stuff\", \"2023/15/01\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"do stuff\", \"40/12/2001\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"fly kite\", \"01/30/2003\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"jovantanyk"},"content":"        validDateCommands.add(new DeadlineCommand(\"fly kite\", \"random string here\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e validDateCommands.get(0).execute(taskList, ui));","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e validDateCommands.get(1).execute(taskList, ui));","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e validDateCommands.get(2).execute(taskList, ui));","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e validDateCommands.get(3).execute(taskList, ui));","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e validDateCommands.get(4).execute(taskList, ui));","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"jovantanyk"},"content":"        assertThrows(ChatException.class, () -\u003e validDateCommands.get(5).execute(taskList, ui));","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"jovantanyk"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"jovantanyk"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"jovantanyk"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"jovantanyk":93}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovantanyk"},"content":"help","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jovantanyk"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jovantanyk"},"content":"deadline submit CS2103T Assignment /by November 10th","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jovantanyk"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jovantanyk"},"content":"event project meeting /from Tuesday 1pm /to 4pm","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jovantanyk"},"content":"todo go to the gym","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jovantanyk"},"content":"mark 1","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jovantanyk"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jovantanyk"},"content":"mark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jovantanyk"},"content":"unmark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jovantanyk"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jovantanyk"},"content":"donuts","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jovantanyk"},"content":"bye","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jovantanyk":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jovantanyk"},"content":"java -classpath ../bin main.java.Paimon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jovantanyk":1,"-":37}}]
