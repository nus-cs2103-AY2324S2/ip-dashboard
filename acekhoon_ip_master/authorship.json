[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"plugins {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"    id \u0027java\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    id \u0027application\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"checkstyle {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"checkstyleMain {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"    source \u003d\u0027src/main/java/CinnamoRoll\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"checkstyleTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    source \u003d\u0027src/test/java/Cinnamo\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"repositories {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    mavenCentral()","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"dependencies {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"test {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"    useJUnitPlatform()","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"    testLogging {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"        showExceptions true","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"        showCauses true","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        showStackTraces true","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"application {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"    mainClass.set(\"CinnamoRoll.Launcher\")","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"shadowJar {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"    archiveFileName \u003d \u0027Cinnamo.jar\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"run{","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"acekhoon":71}},{"path":"src/main/java/CinnamoRoll/CinnamoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoDeadlineException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! Please provide more details for the todo activity in \"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                + \"the correct format with \\\"/by\\\" followed by the specific deadline:) -- Cinnamo \u003e.\u003c\";","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/CinnamoEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoEventException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! Please provide detailed schedule for the event with \\\"/from\\\" to indicate \"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                + \"the starting time and \\\"/to\\\" to indicate ending time of the event:) -- Cinnamo \u003e.\u003c\";","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/CinnamoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! I\u0027m Cinnamo:) Please provide me correct instruction again \u003e.\u003c\";","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":8}},{"path":"src/main/java/CinnamoRoll/CinnamoIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoIndexException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"The list index you provided is not on our to-do list yet :(( \"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                + \"Try it again! Cinnamo is always here \u003e.\u003c\";","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/CinnamoTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoTimeException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! Please provide time information in a correct \"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                + \"format of \\\"mm-dd-yyyy hh:mm\\\" \u003e.\u003c\";","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/CinnamoTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoTodoException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! Please provide details for todo activities \"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                + \"you want Cinnamo to record! :)\";","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"class Deadlines extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    Deadlines(String str, LocalDateTime by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        super(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        this.deadline \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    Deadlines(String str, LocalDateTime by, boolean marked) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"        super(str, marked);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"        this.deadline \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        return (this.getMarked() ? \"[D][X]\" : \"[D][ ]\");","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"     * Returns a string that describes the number of tasks in the list,","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"     * description of the (deadline) task, deadline, task type and the marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"     * @param length denotes the length of the list","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    String addTask(int length) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"Got it. I\u0027ve added this task:%n   %s%n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"                + \"Now you have %d tasks in the list\", this.toString(), length);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.deadline.format(format));","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":39}},{"path":"src/main/java/CinnamoRoll/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"        db.flip();","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"acekhoon":61}},{"path":"src/main/java/CinnamoRoll/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"// Firstly, overall string formatting for toString methods in methods in TaskList and child classes of Task class","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"// with header comments were adapted from chatgpt generated results:","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"// https://chat.openai.com/c/51dceff5-b364-42aa-a5b9-41f2859ec48b","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"// https://chat.openai.com/c/30a81394-ee96-43ba-ab98-f1a95355d6b0","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"// Secondly, exception handling codes were inspired by chatgpt generated codes, specifically on how to","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"// create subclasses for Exception class and what are the public methods for exception classes:","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"// https://chat.openai.com/c/7d9fd6bb-3163-49c7-8301-289a1ebaa6e1","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"// Lastly, date-time formatting occuring from Task classes and parsers was inspired by two sources,","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"// which are also explained and commented in a very detailed manner in parser class:","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"// 1. https://github.com/david-eom/CS2103T-IP/releases/tag/Level-8.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"// 2. https://stackoverflow.com/questions/70384955/converting-one-date-time-format-into-another-in-java","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":" * Runs Duke class","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"public class Duke {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"     * Constructs Duke class that contains Ui class to handle user inputs, storage to load / store the","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"     * input, and tasklist to handle the tasks and perform operations","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    public Duke() {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"        this.tasklist \u003d new TaskList();","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"     * Running the main part of the code to start the Chatbot Cinnamo","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    public void run() throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"        this.tasklist \u003d new TaskList(this.storage.loadData());","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"        this.ui.greetUser();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"        boolean isTerminated \u003d false;","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"        while (!isTerminated) {","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"            isTerminated \u003d ui.respondUser(this.tasklist, input);","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"        ui.exitChat();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"     * Copy-pasted from the getResponse method from tasklist class which returns the output","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"     * from executing the commands from user inputs","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"     * @param input","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"     * @return","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"    public String getResponse(String input) throws Exception {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"            Parser parse \u003d new Parser();","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"            String[] userInput \u003d parse.parseInput(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"            switch (User.valueOf(userInput[0])) {","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"            case MARK:","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"                return this.tasklist.markTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"                return this.tasklist.unmarkTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"            case LIST:","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"                return this.tasklist.listTask();","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"            case DELETE:","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"                return this.tasklist.deleteTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"            case TODO:","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"                return this.tasklist.executeTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"                return this.tasklist.executeTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"            case EVENT:","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"                return this.tasklist.executeTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"            case FIND:","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"                return this.tasklist.findTask(userInput[1]);","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"            default:","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"                throw new CinnamoException();","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"        } catch (CinnamoException cin) {","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"            return cin.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"            CinnamoException cin \u003d new CinnamoException();","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"            return cin.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":102}},{"path":"src/main/java/CinnamoRoll/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"class Events extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    Events(String str, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        super(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    Events(String str, LocalDateTime from, LocalDateTime to, boolean marked) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"        super(str, marked);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        return (this.getMarked() ? \"[E][X]\" : \"[E][ ]\");","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"     * Returns a string that describes the number of tasks in the list,","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"     * description of the (event) task, starting the and ending time of","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"     * the event task with getStatusIcon with task type and the marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"     * @param length denotes the length of the list","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    String addTask(int length) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"Got it. I\u0027ve added this task:%n   \"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"                + \"%s%nNow you have %d tasks in the list\", this.toString(), length);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"                this.from.format(format), this.to.format(format));","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":43}},{"path":"src/main/java/CinnamoRoll/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":" * Runs the JavaFX GUi for the user interface","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"acekhoon":12}},{"path":"src/main/java/CinnamoRoll/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"            stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"acekhoon":33}},{"path":"src/main/java/CinnamoRoll/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Cinnamo.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"     * Initializes GUi with the greeting messages, displaying the images for users and the chatbot","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    // Code for greeting the user part was aided by chatgpt:","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    // https://chat.openai.com/c/25edc1c9-5acb-422b-902a-05b3e9924510","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"        String greetingMessage \u003d \"Hello! I\u0027m CinnamoRoll!\" + \"\\n\" + \"What can I do for you? \\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"                DialogBox.getDukeDialog(greetingMessage, dukeImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"    //Referred to ChatGPT code for exiting the program and added pausing function in order","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"    // to have more natural human-like conversation:","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"    // https://chat.openai.com/c/25edc1c9-5acb-422b-902a-05b3e9924510","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"    private void handleUserInput() throws Exception {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"            String exit \u003d \"See you again! Hope you had great time with me \u003e.\u003c\";","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"                    DialogBox.getDukeDialog(exit, dukeImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"            );","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"            });","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"            pause.play();","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"acekhoon":81}},{"path":"src/main/java/CinnamoRoll/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    String[] parseInput(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"        String[] output \u003d str.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        output[0] \u003d output[0].toUpperCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        return output;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"     * Parses a string array representing a task and creates the corresponding Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * Supported task types are \"TODO,\" \"DEADLINE,\" and \"EVENT.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     * For \"TODO,\" expects the task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     * For \"DEADLINE,\" expects the task description and deadline in the format \"yyyy-MM-dd HH:mm.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"     * For \"EVENT,\" expects the task description and event schedule in the format","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"     * \"yyyy-MM-dd HH:mm /from yyyy-MM-dd HH:mm /to yyyy-MM-dd HH:mm.\"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"     * @param arr The string array representing the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"     * @return A Task object based on the parsed input.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoTimeException If there is an error parsing the date and time information.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    // 1. Solution below, very specifically on how to do date-time formatting","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    // with hours, minutes and seconds in java with the user inputs were inspired","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    // by previous batch student\u0027s submission here:","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    // https://github.com/david-eom/CS2103T-IP/releases/tag/Level-8.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    // 2. Conversion from the user input format to the output format required / specified by Level 8","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    // iP webpage was adapted from this stackoverflow webpage:","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    // https://stackoverflow.com/questions/70384955/converting-one-date-time-format-into-another-in-java","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    Task parseTasks(String[] arr) throws CinnamoTimeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"            String identifier \u003d arr[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"            if (identifier.equals(\"TODO\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"                return new Todos(arr[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"            } else if (identifier.equals(\"DEADLINE\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"                String[] schedule \u003d arr[1].split(\" /by \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"                return new Deadlines(schedule[0], LocalDateTime.parse(schedule[1], this.format));","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"                String[] schedule \u003d arr[1].split(\" /from | /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"                return new Events(schedule[0], LocalDateTime.parse(schedule[1], this.format),","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"                        LocalDateTime.parse(schedule[2], this.format));","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"        } catch (DateTimeParseException dtp) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"            throw new CinnamoTimeException();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":52}},{"path":"src/main/java/CinnamoRoll/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.io.File;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    private final String path \u003d \"src/main/java/Cinnamo.txt\";","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"     * Loads tasks from a file specified by the PATH constant and creates an ArrayList of Task objects.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * The file is expected to have each task represented in a specific format:","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     * \"T | [X or space] | taskDescription\" for Todos,","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     * \"D | [X or space] | taskDescription /by deadline\" for Deadlines,","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"     * \"E | [X or space] | taskDescription /from startDate /to endDate\" for Events.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"     * @throws IOException If there is an error reading the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    // 1. Solution below, very specifically only on how to catch exceptions for creating files,","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    // and methods used for creating a new file under the context of this project together with date-time format adapted","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    // with the requirement of the level 8 specification on ip website, was inspired by previous batch\u0027s level 8","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    // submission here: https://github.com/david-eom/CS2103T-IP/releases/tag/Level-8","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    // 2. Solution below for creating a new file then was further debugged \u0026 aided","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    // by https://stackoverflow.com/questions/7469018/cannot-make-file-java-io-ioexception-no-such-file-or-directory;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    ArrayList\u003cTask\u003e loadData() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"            ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"            Scanner sc \u003d new Scanner(new FileReader(path));","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"            String input;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"            while ((input \u003d sc.nextLine()) !\u003d null) {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"                Task task;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"                String[] info \u003d input.split(\"\\\\|\", 3);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"                boolean isMarked \u003d false;","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"                switch (info[1].trim()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"                case \"X\":","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"                    isMarked \u003d true;","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"                case \"\":","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"                    isMarked \u003d false;","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"                default:","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(\"Oops! No Markings Provided in Correct Format:(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"                switch (info[0].trim().toUpperCase()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"                case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"                    String todotask \u003d info[2].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"                    task \u003d new Todos(todotask, isMarked);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"                    output.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"                case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"                    String[] deadline \u003d info[2].trim().split(\"/by\");","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"                    String deadlinetask \u003d deadline[0].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"                    String datetime \u003d deadline[1].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"                    task \u003d new Deadlines(deadlinetask, LocalDateTime.parse(datetime,","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"                            this.format), isMarked);","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"                    output.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"                case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"                    String[] event \u003d info[2].trim().split(\"/from | /to\");","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"                    String eventdetail \u003d event[0].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"                    String eventfrom \u003d event[1].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"                    String eventto \u003d event[2].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"                    task \u003d new Events(eventdetail, LocalDateTime.parse(eventfrom, this.format),","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"                            LocalDateTime.parse(eventto, this.format), isMarked);","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"                    output.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"                default:","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(\"Loading data unsuccessful: invalid event type or formatting\");","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"            return output;","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"            File f \u003d new File(path);","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"            if (!f.getParentFile().exists()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"            if (!f.exists()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"                f.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":94}},{"path":"src/main/java/CinnamoRoll/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"abstract class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    protected final String taskname;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"    Task(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"        this.taskname \u003d str;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    Task(String str, boolean marked) {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        this.taskname \u003d str;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"        this.isMarked \u003d marked;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * Updates the marked status of the tasks stored in the list to be true (marked)","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    protected void markTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"     * Updates the marked status of the tasks stored in the list to be false (unmarked)","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    protected void unmarkTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"     * Retrieve status icon in the form of [(task type)][(marked status)]","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    abstract String getStatusIcon();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"     * Retrieve boolean variable isMarked for the child classes","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    protected boolean getMarked() {","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"        return this.isMarked;","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"     * Prints the description and timing for the task with the status","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"    abstract String addTask(int i);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"     * Checks whether task\u0027s taskname contains the given string for find method","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"    protected boolean containString(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"        if (this.taskname.contains(str)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"            return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"        return this.getStatusIcon() + \" \" + this.taskname;","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":61}},{"path":"src/main/java/CinnamoRoll/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    private final String path \u003d \"src/main/java/Cinnamo.txt\";","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    public Task getUser(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"     * Writes the tasks stored in the current task list to the file specified by the PATH constant.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"     * The tasks are formatted and written according to the list() method\u0027s output.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    // Solution below, very specifically only on how to write into the file using filewriter object with","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    // write/close methods, and how writeinto method allows other methods to","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    // directly write into the file were adapted from two sources: chatgpt code and previous","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    // batch\u0027s level 8 submission here:","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    // 1. https://chat.openai.com/c/c34f9461-e0dc-4946-b2f2-eeec0e39aded","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    // 2. https://github.com/david-eom/CS2103T-IP/releases/tag/Level-8","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    // 3. Solution was also inspired by chatgpt generated result here:","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    // https://chat.openai.com/c/c34f9461-e0dc-4946-b2f2-eeec0e39aded","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    public void writeInto() {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"            FileWriter filewriter \u003d new FileWriter(this.path);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"            String writeinto \u003d this.storeTask();","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"            filewriter.write(writeinto);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"            filewriter.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"            System.out.println(\"No input provided!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"     * Executes a task instruction, adds the task to the task list, and writes the updated list to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"     * @param instruction An array representing the task instruction.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"     * @return A string message indicating the success of adding the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoException If there is an error parsing the task instruction","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"    public String executeTask(String[] instruction) throws CinnamoException {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"            int arraysize \u003d this.tasks.size();","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"            Task task \u003d this.parser.parseTasks(instruction);","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"            this.tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"            this.writeInto();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"            assert this.tasks.size() \u003d\u003d arraysize + 1 : \"length of array must have increased by 1\";","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"            return task.addTask(this.tasks.size());","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"            if (instruction[0].equals(\"TODO\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"                throw new CinnamoTodoException();","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"            } else if (instruction[0].equals(\"DEADLINE\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"                throw new CinnamoDeadlineException();","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"                throw new CinnamoEventException();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"     * Generates a formatted string listing all tasks in the current task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"     * @return A string representation of the tasks in the format \"1. [Task1] \\n 2. [Task2] \\n ...\"","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"    public String listTask() {","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"        String output \u003d \"Here are the tasks in your list \u003e.\u003c:\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"            output +\u003d String.valueOf(i + 1) + \".\" + this.tasks.get(i).toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"            if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"                output +\u003d \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"    public String storeTask() {","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"            output +\u003d String.valueOf(i + 1) + \".\" + this.tasks.get(i).toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"            if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"acekhoon"},"content":"                output +\u003d \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"        return output;","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"     * Searches for tasks containing a specified string and generates a formatted string listing the matching tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"     * @param str The string to search for within task descriptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"     * @return A formatted string listing the tasks that contain the specified string.","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"acekhoon"},"content":"    public String findTask(String str) {","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"acekhoon"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"            if (this.tasks.get(i).containString(str)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"                output +\u003d String.valueOf(i + 1) + \".\" + this.tasks.get(i).toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"                if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"acekhoon"},"content":"                    output +\u003d \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"acekhoon"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"acekhoon"},"content":"        return output;","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"acekhoon"},"content":"     * Deletes a task from the task list based on the provided index and updates the file accordingly.","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"acekhoon"},"content":"     * @param str An array containing the command and task index for deletion.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"     * @return A formatted string indicating the success of the deletion and the updated task list size.","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoIndexException If the provided index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"acekhoon"},"content":"     * @throws Exception If there is an error parsing the index or writing to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"acekhoon"},"content":"    public String deleteTask(String[] str) throws Exception, CinnamoIndexException {","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"acekhoon"},"content":"            int index \u003d Integer.parseInt(str[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"acekhoon"},"content":"            Task temp \u003d this.tasks.get(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"acekhoon"},"content":"            this.tasks.remove(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"acekhoon"},"content":"            this.writeInto();","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"acekhoon"},"content":"            return String.format(\"Noted. I\u0027ve removed the following task:%n   %s%n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"acekhoon"},"content":"                    + \"Now, you have %d tasks in the list\", temp.toString(), this.tasks.size());","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"acekhoon"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"acekhoon"},"content":"            throw new CinnamoIndexException();","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"acekhoon"},"content":"     * Marks a task as done in the task list based on the provided index and updates the file accordingly.","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"acekhoon"},"content":"     * @param str An array containing the command and task index for marking the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"acekhoon"},"content":"     * @return A formatted string indicating the success of marking the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoIndexException If the provided index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"acekhoon"},"content":"     * @throws Exception If there is an error parsing the index or writing to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"acekhoon"},"content":"    public String markTask(String[] str) throws Exception, CinnamoIndexException {","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"acekhoon"},"content":"            int index \u003d Integer.parseInt(str[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"acekhoon"},"content":"            this.tasks.get(index).markTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"acekhoon"},"content":"            this.writeInto();","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"acekhoon"},"content":"            assert this.tasks.get(index).getMarked() \u003d\u003d true : \"the marking status must be true\";","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"acekhoon"},"content":"            return String.format(\"Nice! I\u0027ve marked this task as done:%n   %s\",","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"acekhoon"},"content":"                    this.tasks.get(index).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"acekhoon"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"acekhoon"},"content":"            throw new CinnamoIndexException();","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"acekhoon"},"content":"     * Marks a task as not done in the task list based on the provided index and updates the file accordingly.","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"acekhoon"},"content":"     * @param str An array containing the command and task index for marking the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"acekhoon"},"content":"     * @return A formatted string indicating the success of marking the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoIndexException If the provided index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"acekhoon"},"content":"     * @throws Exception If there is an error parsing the index or writing to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"acekhoon"},"content":"    public String unmarkTask(String[] str) throws Exception, CinnamoIndexException {","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"acekhoon"},"content":"            int index \u003d Integer.parseInt(str[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"acekhoon"},"content":"            this.tasks.get(index).unmarkTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"acekhoon"},"content":"            this.writeInto();","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"acekhoon"},"content":"            assert this.tasks.get(index).getMarked() \u003d\u003d false : \"the marking status must be false\";","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"acekhoon"},"content":"            return String.format(\"Ok! I\u0027ve marked this task as not done yet:%n      %s\",","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"acekhoon"},"content":"                    this.tasks.get(index).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"acekhoon"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"acekhoon"},"content":"            throw new CinnamoIndexException();","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"acekhoon"},"content":"     * Processes and responds to the user\u0027s input by delegating tasks to corresponding methods.","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"acekhoon"},"content":"     * @param str The user\u0027s input to be processed.","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoException If an error related to task execution or command parsing occurs.","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"acekhoon"},"content":"     * @throws Exception If there is an error during the response process.","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"acekhoon"},"content":"    // Solution below on how to convert string into enum value for switch-case was inspired","lastModifiedDate":"2024-02-09"},{"lineNumber":193,"author":{"gitId":"acekhoon"},"content":"    // by the following stackoverflow forum:","lastModifiedDate":"2024-02-09"},{"lineNumber":194,"author":{"gitId":"acekhoon"},"content":"    // https://stackoverflow.com/questions/10387329/using-string-representations-of-enum-values-in-switch-case","lastModifiedDate":"2024-02-09"},{"lineNumber":195,"author":{"gitId":"acekhoon"},"content":"    void respondUser(String str) throws Exception {","lastModifiedDate":"2024-02-08"},{"lineNumber":196,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"acekhoon"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"acekhoon"},"content":"            String[] arr \u003d parser.parseInput(str);","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"acekhoon"},"content":"            switch (User.valueOf(arr[0])) {","lastModifiedDate":"2024-02-08"},{"lineNumber":201,"author":{"gitId":"acekhoon"},"content":"            case MARK:","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"acekhoon"},"content":"                System.out.println(this.markTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":204,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"acekhoon"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"acekhoon"},"content":"                System.out.println(this.unmarkTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":209,"author":{"gitId":"acekhoon"},"content":"            case LIST:","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"acekhoon"},"content":"                System.out.println(this.listTask());","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":212,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"acekhoon"},"content":"            case DELETE:","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"acekhoon"},"content":"                System.out.println(this.deleteTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":216,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":217,"author":{"gitId":"acekhoon"},"content":"            case TODO:","lastModifiedDate":"2024-02-01"},{"lineNumber":218,"author":{"gitId":"acekhoon"},"content":"                System.out.println(this.executeTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":219,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":220,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":221,"author":{"gitId":"acekhoon"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-01"},{"lineNumber":222,"author":{"gitId":"acekhoon"},"content":"                System.out.println(this.executeTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":224,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"acekhoon"},"content":"            case EVENT:","lastModifiedDate":"2024-02-01"},{"lineNumber":226,"author":{"gitId":"acekhoon"},"content":"                System.out.println(this.executeTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":228,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":229,"author":{"gitId":"acekhoon"},"content":"            case FIND:","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"acekhoon"},"content":"                System.out.println(this.findTask(arr[1]));","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":232,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":233,"author":{"gitId":"acekhoon"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":234,"author":{"gitId":"acekhoon"},"content":"                throw new CinnamoException();","lastModifiedDate":"2024-02-01"},{"lineNumber":235,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":236,"author":{"gitId":"acekhoon"},"content":"        } catch (CinnamoException cin) {","lastModifiedDate":"2024-02-01"},{"lineNumber":237,"author":{"gitId":"acekhoon"},"content":"            System.out.println(cin.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":238,"author":{"gitId":"acekhoon"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":239,"author":{"gitId":"acekhoon"},"content":"            CinnamoException cin \u003d new CinnamoException();","lastModifiedDate":"2024-02-01"},{"lineNumber":240,"author":{"gitId":"acekhoon"},"content":"            System.out.println(cin.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":241,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":242,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":243,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":243}},{"path":"src/main/java/CinnamoRoll/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"class Todos extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    Todos(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"        super(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    Todos(String str, boolean marked) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"        super(str, marked);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        return (this.getMarked() ? \"[T][X]\" : \"[T][ ]\");","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"     * Returns a string that describes the number of tasks in the list,","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * description of the (deadline) task, task type and the marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     * @param length denotes the length of the list","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    String addTask(int length) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"Got it. I\u0027ve added this task:%n   \"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"                + \"%s%nNow you have %d tasks in the list\", super.toString(), length);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":25}},{"path":"src/main/java/CinnamoRoll/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    private static final String logo \u003d \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⡀⠀⠀⢀⣀⣀⣀⣀⣀⣄⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⡶⠟⠛⠉⠉⣩⠽⠗⠛⠉⠉⠉⠉⠉⠉⠉⠉⠙⠛⠻⠶⢦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⡾⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠓⢦⣀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⡮⠗⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣤⢤⣤⣀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"            + \"⣀⣀⣀⣀⣤⣴⣶⠿⠋⠉⠀⠀⠀⠀⠀⠀⢀⡠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⠈⠙⢷\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"            + \"⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠋⠀⠀⢀⣴⣿⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⣾⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡗⠦⡤⠤⣝⠿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⣰⣿⣿⣆⠀⠀⠀⠀⠈⣧⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠹⣷⣀⣀⣠⠞⠀⠀⠀⠀⠀⠀⠀⢦⣠⣤⣄⠀⢀⣠⠿⣿⣭⣷⣀⠀⣿⣿⣿⡿⠀⠀⠀⠀⠀⢻⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⣀⣠⣤⠞⠋⠁⠀⠀⠙⢷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⣼⠎⠉⠁⠈⠉⠉⠛⠿⣟⠁⠀⠀⠀⠀⣠⣼⡶\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"            + \"⣤⣤⣴⠶⠾⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠷⢦⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⢠⣟⣽⣶⠀⠀⠀⠀⠀⠀⠀⠈⠳⡶⢶⣴⠟⠉⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡶⠞⠛⠋⠛⠒⠦⡍⠉⣹⠛⠑⠚⠛⠉⠙⠛⠻⢿⣿⣦⣤⣄⣆⠀⠀⠀⠀⠀⣿⣾⣿⠆⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⠋⠀⠀⠀⠀⠀⠀⠀⣸⡿⠃⠀⠀⠀⠀⠀⠀⠀⣀⣼⡏⢛⣻⣿⡿⢷⣾⣷⠀⠀⣯⠿⠋⠀⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡿⠀⠀⠀⣷⠀⠀⠀⠀⣼⠏⠀⠀⠀⠀⠀⢒⣶⣶⣾⡟⣙⣷⡼⠿⣿⠀⠀⠈⠻⣤⣾⠻⡀⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇⠀⠀⠀⣿⣤⣶⣤⣼⡏⠀⠀⠀⠀⠀⠀⠺⣷⡏⠘⣿⣿⡿⣷⣤⣿⣧⣀⣀⣴⣏⣀⣀⠙⠦⣄⣀⡀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⡀⠀⠀⢸⡏⠁⠃⢹⣷⡄⠀⠀⠀⠀⠀⣰⠿⠀⣠⣿⡿⠃⠹⢿⡞⢻⡏⢩⠟⠋⠉⢹⣧⠀⠀⠉⠉⠙\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠷⣤⣀⢸⣧⠀⠀⠀⠉⠁⠀⠀⠀⠀⢠⡏⠀⣠⣟⡛⠇⠀⠀⣾⠷⣾⠟⠀⠀⠀⠀⢀⣿⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⢿⡏⠀⠀⠀⠀⢀⡖⠀⠀⠸⣧⠞⠉⠛⠻⡆⠀⢠⠏⠀⠀⠀⠀⠀⠀⠀⣸⡇⠀⠀⠀⠀⠀\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"            + \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠒⠒⠒⠚⠻⢦⣄⣀⣴⠾⠿⢶⣶⠶⠶⠶⠶⠶⠤⠿⣶⣿⣶⠶⠶⠿⠷⠶⠶⠾⠯⠤⠀⠀⠀⠀⠀\";","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"     * Greet the user by printing out the logo and saying hi!","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    void greetUser() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"        System.out.println(\"Hello! I\u0027m CinnamoRoll!\" + \"\\n\" + \"What can I do for you? \\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"     * Saying bye to the user who attempts to exit the chat!","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    void exitChat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"        System.out.println(\"See you again! Hope you had great time with me \u003e.\u003c\");","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"     * Process and respond to the user\u0027s request in terms of input string","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"    boolean respondUser(TaskList tasks, String str) throws Exception {","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"        if (str.equals(\"bye\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"            tasks.respondUser(str);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"            return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":52}},{"path":"src/main/java/CinnamoRoll/User.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":" * Enumerates different types of comments can be made by the users","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"public enum User {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"        MARK,","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"        UNMARK,","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"        LIST,","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"        DELETE,","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"        TODO,","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        EVENT,","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"        FIND","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"acekhoon":15}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"acekhoon":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"CinnamoRoll.MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"acekhoon":20}},{"path":"src/test/java/CinnamoRoll/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"class DeadlineTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    void toStringTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(\"2024-02-05 14:00\", format);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"        Deadlines deadline \u003d new Deadlines(\"MA5211 Assignment 1\", time, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[D][X] MA5211 Assignment 1 (by: Feb 05 2024 14:00)\", deadline.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"                \"Testing toString method of deadline class\");","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    void getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(\"2024-02-05 14:00\", format);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        Deadlines deadline1 \u003d new Deadlines(\"MA5211 Assignment 1\", time, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"        Deadlines deadline2 \u003d new Deadlines(\"MA5211 Assignment 1\", time, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[D][X]\", deadline1.getStatusIcon(),","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"                \"Testing whether deadline class marks the event correctly\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[D][ ]\", deadline2.getStatusIcon(),","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"                \"Testing whether deadline class unmarks the event correctly\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":29}},{"path":"src/test/java/CinnamoRoll/TestTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"class TestTaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    void testMark() throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"deadline MA5211 Assignment 1 /by 2024-02-05 14:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"mark 1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[D][X] MA5211 Assignment 1 (by: Feb 05 2024 14:00)\", task.getUser(0).toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"                \"Testing the marking for the task event from the list of events\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    void testExecute() throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"todo what to do\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[T][ ] what to do\", task.getUser(0).toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"                \"Checking whether the event is added properly into the list \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"                        \"with correct class of the object\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    void testDelete() throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"todo what to do\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"deadline MA5211 Assignment 1 /by 2024-02-05 14:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"todo cs2103t ip\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"delete 2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"mark 2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[T][X] cs2103t ip\", task.getUser(1).toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"                \"Test should return the third event of the list before \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"                        \"deletion if done properly\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"deadline CS4269 Assignment 2 /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"todo MA5211 Assignment 1","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"event CS2101 Presentation Meeting /from Jan 25th 7:30pm /to 9pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"acekhoon":9}}]
