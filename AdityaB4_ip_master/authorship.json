[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AdityaB4"},"content":"# Chimp project template","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"AdityaB4"},"content":"3. After that, locate the `src/main/java/Chimp.java` file, right-click it, and choose `Run Chimp.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AdityaB4":2,"-":22}},{"path":"src/main/java/Chimp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdityaB4"},"content":"import java.security.InvalidParameterException;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"AdityaB4"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"AdityaB4"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"AdityaB4"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"AdityaB4"},"content":"public class Chimp {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"AdityaB4"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"AdityaB4"},"content":"    Chimp() {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"AdityaB4"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"AdityaB4"},"content":"    public static void main(String[] args) throws InvalidParameterException{","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"AdityaB4"},"content":"        Chimp chimp \u003d new Chimp();","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"AdityaB4"},"content":"        HashMap\u003cString, String\u003e phrases \u003d chimp.getPhrases();","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"AdityaB4"},"content":"        chimp.say(phrases.get(\"greet\"));","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"AdityaB4"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"AdityaB4"},"content":"        String inp \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"AdityaB4"},"content":"        while (!inp.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"AdityaB4"},"content":"            inp \u003d inp.toLowerCase();","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"AdityaB4"},"content":"            String command \u003d inp.split(\" \")[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"AdityaB4"},"content":"            String arg \u003d null;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"AdityaB4"},"content":"            if (inp.split(\" \").length \u003e 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"AdityaB4"},"content":"                // split at first space, and take everything on the right","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"AdityaB4"},"content":"                arg \u003d inp.substring(inp.indexOf(\u0027 \u0027), inp.length());","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"AdityaB4"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"AdityaB4"},"content":"            int num;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"AdityaB4"},"content":"            switch (command) {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"AdityaB4"},"content":"                case \"list\":","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"AdityaB4"},"content":"                    chimp.print();","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"AdityaB4"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"AdityaB4"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"AdityaB4"},"content":"                    num \u003d Integer.parseInt(arg);","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"AdityaB4"},"content":"                    if (num \u003c 1 || num \u003e chimp.list.size())","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"AdityaB4"},"content":"                        throw new InvalidParameterException();","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"AdityaB4"},"content":"                    chimp.list.get(num - 1).mark();","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"AdityaB4"},"content":"                    chimp.say(phrases.get(\"mark\"), chimp.list.get(num - 1));","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"AdityaB4"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"AdityaB4"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"AdityaB4"},"content":"                    num \u003d Integer.parseInt(arg);","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"AdityaB4"},"content":"                    if (num \u003c 1 || num \u003e chimp.list.size())","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"AdityaB4"},"content":"                        throw new InvalidParameterException();","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"AdityaB4"},"content":"                    chimp.list.get(num - 1).unmark();","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"AdityaB4"},"content":"                    chimp.say(phrases.get(\"unmark\"), chimp.list.get(num - 1));","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"AdityaB4"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"AdityaB4"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"AdityaB4"},"content":"                    chimp.addToList(inp);","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"AdityaB4"},"content":"                    chimp.say(chimp.list.get(chimp.list.size() - 1));","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"AdityaB4"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"AdityaB4"},"content":"                case \"event\":","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"AdityaB4"},"content":"                    String fromSubCommand \u003d arg.split(\"/\")[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"AdityaB4"},"content":"                    String from \u003d fromSubCommand.substring(fromSubCommand.indexOf(\u0027 \u0027), fromSubCommand.length());","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"AdityaB4"},"content":"                    from \u003d from.strip();","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"AdityaB4"},"content":"                    String toSubCommand \u003d arg.split(\"/\")[2];","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"AdityaB4"},"content":"                    String to \u003d toSubCommand.substring(toSubCommand.indexOf(\u0027 \u0027), toSubCommand.length());","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"AdityaB4"},"content":"                    to \u003d to.strip();","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"AdityaB4"},"content":"                    chimp.addToList(arg.split(\"/\")[0].strip(), from, to);","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"AdityaB4"},"content":"                    chimp.say(chimp.list.get(chimp.list.size() - 1));","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"AdityaB4"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"AdityaB4"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"AdityaB4"},"content":"                    String bySubCommand \u003d arg.split(\"/\")[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"AdityaB4"},"content":"                    String by \u003d bySubCommand.substring(3, bySubCommand.length());","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"AdityaB4"},"content":"                    by \u003d by.strip();","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"AdityaB4"},"content":"                    chimp.addToList(arg.split(\"/\")[0].strip(), by);","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"AdityaB4"},"content":"                    chimp.say(chimp.list.get(chimp.list.size() - 1));","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"AdityaB4"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"AdityaB4"},"content":"                default:","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"AdityaB4"},"content":"                    chimp.addToList(inp);","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"AdityaB4"},"content":"                    chimp.say(chimp.list.get(chimp.list.size() - 1));","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"AdityaB4"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"AdityaB4"},"content":"            inp \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"AdityaB4"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"AdityaB4"},"content":"        chimp.say(phrases.get(\"bye\"));","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"AdityaB4"},"content":"        sc.close();","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"AdityaB4"},"content":"    private HashMap\u003cString, String\u003e getPhrases() {","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"AdityaB4"},"content":"        HashMap\u003cString, String\u003e phrases \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"AdityaB4"},"content":"        String greet \u003d \" Hello! I\u0027m Chimp\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"AdityaB4"},"content":"                \" What can I do for you?\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"AdityaB4"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"AdityaB4"},"content":"        String mark \u003d \"Nice! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"AdityaB4"},"content":"        String unmark \u003d \"OK, I\u0027ve marked this task as not done yet: \\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"AdityaB4"},"content":"        phrases.put(\"greet\", greet);","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"AdityaB4"},"content":"        phrases.put(\"bye\", bye);","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"AdityaB4"},"content":"        phrases.put(\"mark\", mark);","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"AdityaB4"},"content":"        phrases.put(\"unmark\", unmark);","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"AdityaB4"},"content":"        return phrases;","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"AdityaB4"},"content":"    private void addToList(String task){","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"AdityaB4"},"content":"        this.list.add(new Todo(task, TaskStatus.UNMARKED));","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"AdityaB4"},"content":"    private void addToList(String task, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"AdityaB4"},"content":"        this.list.add(new Deadline(task, TaskStatus.UNMARKED, by));","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"AdityaB4"},"content":"    private void addToList(String task, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"AdityaB4"},"content":"        this.list.add(new Event(task, TaskStatus.UNMARKED, from, to));","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"AdityaB4"},"content":"    private void say(String phrase) {","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"AdityaB4"},"content":"        String divider \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(phrase);","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"AdityaB4"},"content":"    private void say(Task task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"AdityaB4"},"content":"        String divider \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(\"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"AdityaB4"},"content":"    private void say(String phrase, Task task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"AdityaB4"},"content":"        String divider \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(phrase);","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"AdityaB4"},"content":"    private void print() {","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"AdityaB4"},"content":"        String divider \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"AdityaB4"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"AdityaB4"},"content":"            System.out.println((i + 1) + \". \" + this.list.get(i));","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"AdityaB4"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"AdityaB4"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"AdityaB4"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"AdityaB4":136}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdityaB4"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"AdityaB4"},"content":"    private String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"AdityaB4"},"content":"    Deadline(String text, TaskStatus status, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"AdityaB4"},"content":"        super(text, status);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"AdityaB4"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"AdityaB4"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"AdityaB4"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"AdityaB4"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + by  + \" )\";","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"AdityaB4"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"AdityaB4":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdityaB4"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"AdityaB4"},"content":"    private String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"AdityaB4"},"content":"    private String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"AdityaB4"},"content":"    Event(String text, TaskStatus status, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"AdityaB4"},"content":"        super(text, status);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"AdityaB4"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"AdityaB4"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"AdityaB4"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"AdityaB4"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"AdityaB4"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + from + \" to: \" + to + \" )\";","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"AdityaB4"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"AdityaB4":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdityaB4"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"AdityaB4"},"content":"    String text;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"AdityaB4"},"content":"    TaskStatus status;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"AdityaB4"},"content":"    Task(String text, TaskStatus status) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"AdityaB4"},"content":"        this.text \u003d text;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"AdityaB4"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"AdityaB4"},"content":"    public void mark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"AdityaB4"},"content":"        this.status \u003d TaskStatus.MARKED;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"AdityaB4"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"AdityaB4"},"content":"        this.status \u003d TaskStatus.UNMARKED;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"AdityaB4"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"AdityaB4"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"AdityaB4"},"content":"        String mark \u003d status \u003d\u003d TaskStatus.MARKED ? \"X\" : \" \";","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"AdityaB4"},"content":"        return \"[\" + mark + \"] \" + text;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"AdityaB4"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"AdityaB4":23}},{"path":"src/main/java/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdityaB4"},"content":"public enum TaskStatus {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"AdityaB4"},"content":"    MARKED,","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"AdityaB4"},"content":"    UNMARKED","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"AdityaB4"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"AdityaB4":4}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdityaB4"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"AdityaB4"},"content":"    Todo(String text, TaskStatus status) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"AdityaB4"},"content":"        super(text, status);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"AdityaB4"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"AdityaB4"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"AdityaB4"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"AdityaB4"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"AdityaB4"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"AdityaB4"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"AdityaB4":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AdityaB4"},"content":"deadline 2103 /by 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"AdityaB4"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"AdityaB4":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"AdityaB4"},"content":"java -classpath ..\\bin Chimp \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AdityaB4":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"AdityaB4"},"content":"java -classpath ../bin Chimp \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"AdityaB4"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT # \u003c- PLEASE UNCOMMENT THIS IF NEEDED FOR GRADING","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AdityaB4":2,"-":36}}]
