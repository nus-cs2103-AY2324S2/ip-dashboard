[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"# Duke.Test project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"3. After that, locate the `src/main/java/Duke.Test.java` file, right-click it, and choose `Run Duke.Test.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jayne1010":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"    testImplementation \u0027org.mockito:mockito-core:3.12.4\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"    mainClassName \u003d \u0027Duke.Duke\u0027;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"    mainClass.set(\"Duke.Duke\")","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"    archiveFileName \u003d \u0027Duke.jar\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jayne1010":9,"-":41}},{"path":"data/duck.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"E | 0 | read book | 2024-01-01 00:00 to 2024-01-01 00:11","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Jayne1010":2}},{"path":"data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"D | 0 | a | by 2019-01-01","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Jayne1010":2}},{"path":"data/test1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"D | 0 | a | by 2019-01-01","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"D | 0 | a | by 2019-01-01","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"E | 0 | a | 2019-01-01 to 2019-01-02","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Jayne1010":3}},{"path":"src/main/java/Duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"    private String userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"     * Constructs an AddCommand with the given user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"     * @param userInput The user input specifying the task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"    public AddCommand(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"     * Executes the add command, creating a new task, adding it to the task list,","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"     * displaying a confirmation message, and saving the updated task list to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks   The task list to which the new task will be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"     * @param storage The storage to save the updated task list to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"            Task newTask \u003d TaskFactory.createTask(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"            ui.showConfirmationMessage(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"            // Handle or log the IOException as needed","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"            ui.showIoExceptionMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":40}},{"path":"src/main/java/Duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":" * The Command interface represents an executable command that can be performed","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":" * on a TaskList. Classes implementing this interface must provide an execute","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":" * method to carry out the specific command.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"public interface Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"     * Executes the command, performing the specified action on the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks   The TaskList on which the command will be executed.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"     * @param ui      The Ui object for displaying user interface messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     * @param storage The Storage object for saving and loading tasks to and from a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":19}},{"path":"src/main/java/Duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":" * The DeleteCommand class represents a command to delete a task from the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":" * It implements the Command interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a DeleteCommand with the specified task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"     * Executes the delete command, removing the specified task from the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks   The TaskList from which the task will be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"     * @param ui      The Ui object for displaying user interface messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"     * @param storage The Storage object for saving and loading tasks to and from a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c (tasks.getTasks()).size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"                Task taskBeforeDeletion \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"                tasks.deleteTask(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"                storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"                ui.showDeleteMessage(tasks.getTasks(), taskBeforeDeletion);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"                ui.invalidTaskIndex();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"            ui.showIoExceptionMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":44}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":" * The main class representing the Duke chatbot application. Duke manages the user interface, task list, and storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":" * Duke processes user input, executes commands, and interacts with the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a Duke object with the specified file path.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"     * @param filePath The file path for storing and loading tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"            storage.ensureDataFileExists();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"            tasks \u003d storage.loadTasksFromFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"        } catch (DukeDataCorruptedException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"            ui.showDukeDataCorruptionMessage(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"            System.out.println(\"Data file not found. Creating a new one.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"            // Handle the case when the data file is not found, and create a new one","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"            ui.showFileNotFoundExceptionMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"            // Handle IOException (e.g., file-related issues)","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"            ui.showIoExceptionMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"            // Handle NumberFormatException (e.g., when parsing integers)","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"            ui.showNumberFormatExceptionMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"     * Displays welcome messages, processes user input, and executes commands until the exit command is given.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jayne1010"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Jayne1010"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jayne1010"},"content":"        while (true) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Jayne1010"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Jayne1010"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Jayne1010"},"content":"                if (Parser.isExitCommand(userInput)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Jayne1010"},"content":"                    ui.showGoodbyeMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Jayne1010"},"content":"                    storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Jayne1010"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Jayne1010"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"Jayne1010"},"content":"                if (userInput.trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Jayne1010"},"content":"                    throw new DukeException(\"Please enter an action and a task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Jayne1010"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"Jayne1010"},"content":"                //System.out.println((tasks.getTask(0)).isDone());","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Jayne1010"},"content":"                Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Jayne1010"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Jayne1010"},"content":"                storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Jayne1010"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Jayne1010"},"content":"                ui.showDukeExceptionMessage(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Jayne1010"},"content":"                tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Jayne1010"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Jayne1010"},"content":"                // Handle NumberFormatException (e.g., when parsing integers)","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Jayne1010"},"content":"                ui.showNumberFormatExceptionMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Jayne1010"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Jayne1010"},"content":"                ui.showIoExceptionMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jayne1010"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jayne1010"},"content":"     * The entry point of the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Jayne1010"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Jayne1010"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Jayne1010"},"content":"        new Duke(FILE_PATH).run();","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Jayne1010"},"content":" * Exception class representing a corrupted data file in Duke.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Jayne1010"},"content":"class DukeDataCorruptedException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a DukeDataCorruptedException with the specified error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Jayne1010"},"content":"     * @param message The error message describing the data corruption issue.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Jayne1010"},"content":"    public DukeDataCorruptedException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Jayne1010"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Jayne1010"},"content":" * Exception class representing a generic exception in Duke.","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Jayne1010"},"content":"class DukeException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Jayne1010"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Jayne1010"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Jayne1010"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":115,"-":1}},{"path":"src/main/java/Duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":" * The ExitCommand class represents a command to exit the Duke application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":" * It implements the Command interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"     * Executes the exit command, displaying a goodbye message and terminating the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks   The TaskList (not used in exit command).","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"     * @param ui      The Ui object for displaying user interface messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     * @param storage The Storage object (not used in exit command).","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"        System.exit(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":21}},{"path":"src/main/java/Duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":" * The FindCommand class represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":" * It implements the Command interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"    private String keyword;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"     * Executes the find command, displaying tasks that contain the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"     * @param ui      The Ui object for displaying user interface messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"     * @param storage The Storage object (not used in find command).","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"        ui.findTasksByKeyword(keyword, tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":32}},{"path":"src/main/java/Duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":" * The ListCommand class represents a command to list all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":" * It implements the Command interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"     * Executes the list command, displaying the list of all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"     * @param ui      The Ui object for displaying user interface messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     * @param storage The Storage object (not used in list command).","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"        ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":20}},{"path":"src/main/java/Duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":" * The MarkCommand class represents a command to mark a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":" * It implements the Command interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a MarkCommand with the given task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"     * Executes the mark command, marking the specified task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"     * Updates the UI and saves the tasks to the storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"     * @param ui      The Ui object for displaying user interface messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"     * @param storage The Storage object for saving tasks to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c (tasks.getTasks()).size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"                Task markedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"                tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"                storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"                ui.showMarkTaskAsDone(markedTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"                ui.invalidTaskIndex();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"            ui.showIoExceptionMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":45}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":" * The Parser class is responsible for parsing user input and generating corresponding commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     * Gets user input from the console.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"     * @return The user input as a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"    public static String getUserInput() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"     * Parses the task index from the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"     * @param userInput The user input containing the task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"     * @return The parsed task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If an error occurs while parsing the task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"    public static int parseTaskIndex(String userInput) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"            // Assuming the input is in the format \"mark 2\" or \"unmark 2\"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"            String indexString \u003d userInput.split(\" \", 2)[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"            return Integer.parseInt(indexString) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"            throw new DukeException(\"Please enter a valid task index :(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"     * Checks if the user input is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"     * @param userInput The user input to check.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"     * @return True if the input is an exit command, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"    public static boolean isExitCommand(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Jayne1010"},"content":"        List\u003cString\u003e exitCommands \u003d Arrays.asList(\"bye\", \"exit\", \"quit\"); // Add more exit commands if needed","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Jayne1010"},"content":"        return exitCommands.contains(userInput.toLowerCase());","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Jayne1010"},"content":"     * Parses the user input and generates the corresponding command.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Jayne1010"},"content":"     * @param userInput The user input to parse.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Jayne1010"},"content":"     * @return The generated command based on the input.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If an error occurs while parsing the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Jayne1010"},"content":"    public static Command parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Jayne1010"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Jayne1010"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Jayne1010"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Jayne1010"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Jayne1010"},"content":"        case \"exit\":","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Jayne1010"},"content":"        case \"quit\":","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Jayne1010"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Jayne1010"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Jayne1010"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Jayne1010"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Jayne1010"},"content":"            int markIndex \u003d parseTaskIndex(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Jayne1010"},"content":"            return new MarkCommand(markIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Jayne1010"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Jayne1010"},"content":"            int unmarkIndex \u003d parseTaskIndex(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Jayne1010"},"content":"            return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Jayne1010"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Jayne1010"},"content":"            int deleteIndex \u003d parseTaskIndex(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Jayne1010"},"content":"            return new DeleteCommand(deleteIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Jayne1010"},"content":"        case \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Jayne1010"},"content":"            String keyword \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Jayne1010"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Jayne1010"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Jayne1010"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Jayne1010"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Jayne1010"},"content":"            return new AddCommand(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Jayne1010"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Jayne1010"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t understand that command :(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":88}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":" * The Storage class handles the saving and loading of tasks from a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"     * @param filePath The path to the data file.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"     * Saves the tasks to the data file.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"     * @throws IOException If an error occurs while saving the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"    public void saveTasksToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"        Path filePath \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"        // Create the parent directory if it doesn\u0027t exist","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"        if (!Files.exists(filePath.getParent())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"        List\u003cString\u003e encodedTasks \u003d TaskListEncoder.encode(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"        // Write tasks to the file","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"        Files.write(filePath, encodedTasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Jayne1010"},"content":"     * Loads tasks from the data file.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Jayne1010"},"content":"     * @return The loaded TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Jayne1010"},"content":"     * @throws IOException              If an error occurs while reading the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeDataCorruptedException If the data file is corrupted.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Jayne1010"},"content":"    public TaskList loadTasksFromFile() throws IOException, DukeDataCorruptedException {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Jayne1010"},"content":"        Path filePath \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Jayne1010"},"content":"        TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Jayne1010"},"content":"        // Check if the file exists before attempting to load","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Jayne1010"},"content":"        if (Files.exists(filePath)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Jayne1010"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Jayne1010"},"content":"                // Read tasks from the file","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Jayne1010"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Jayne1010"},"content":"                tasks \u003d new TaskList(TaskListDecoder.decode(lines));","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Jayne1010"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Jayne1010"},"content":"                // If the file is not found, throw a more specific exception","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Jayne1010"},"content":"                throw new FileNotFoundException(\"Data file not found\");","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Jayne1010"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Jayne1010"},"content":"                throw new IOException(\"Error reading tasks from the file.\", e);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Jayne1010"},"content":"            } catch (DukeDataCorruptedException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Jayne1010"},"content":"                // Rethrow other exceptions, including DukeDataCorruptedException","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Jayne1010"},"content":"                throw e;","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Jayne1010"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Jayne1010"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Jayne1010"},"content":"            tasks \u003d new TaskList(); // Initialize with an empty list if the file doesn\u0027t exist yet","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Jayne1010"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Jayne1010"},"content":"     * Ensures that the data file exists; if not, it creates the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Jayne1010"},"content":"     * @throws IOException If an error occurs while creating the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Jayne1010"},"content":"    public void ensureDataFileExists() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"Jayne1010"},"content":"        Path filePath \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"Jayne1010"},"content":"        // Check if the file exists or create it","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Jayne1010"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Jayne1010"},"content":"            // Check if the parent directory exists, create it if not","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Jayne1010"},"content":"            if (!Files.exists(filePath.getParent())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Jayne1010"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Jayne1010"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"Jayne1010"},"content":"            // Create the data file","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Jayne1010"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"Jayne1010"},"content":" * The TaskListEncoder class encodes a list of tasks into a format suitable for saving to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Jayne1010"},"content":"class TaskListEncoder {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Jayne1010"},"content":"     * Encodes a list of tasks into a list of strings.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks The list of tasks to encode.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Jayne1010"},"content":"     * @return The encoded list of strings.","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Jayne1010"},"content":"    public static List\u003cString\u003e encode(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"Jayne1010"},"content":"        List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"Jayne1010"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"Jayne1010"},"content":"            encodedTasks.add(encodeTask(task));","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"Jayne1010"},"content":"        return encodedTasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"Jayne1010"},"content":"    private static String encodeTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"Jayne1010"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"Jayne1010"},"content":"            return \"T | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"Jayne1010"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"Jayne1010"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"Jayne1010"},"content":"            String by \u003d deadlineTask.getBy().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Jayne1010"},"content":"            return \"D | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + deadlineTask.getDescription() + \" | \" + \"by \" + by;","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Jayne1010"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"Jayne1010"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"Jayne1010"},"content":"            String from \u003d eventTask.getFrom().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"Jayne1010"},"content":"            String to \u003d eventTask.getTo().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"Jayne1010"},"content":"            return \"E | \" + (task.isDone() ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Jayne1010"},"content":"                    + eventTask.getDescription() + \" | \" + from + \" to \" + to;","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"Jayne1010"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"Jayne1010"},"content":"            // Handle other task types if needed","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"Jayne1010"},"content":"            return \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"Jayne1010"},"content":" * The TaskListDecoder class decodes a list of strings from a file into a list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"Jayne1010"},"content":"class TaskListDecoder {","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"Jayne1010"},"content":"     * Decodes a list of strings into a list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"Jayne1010"},"content":"     * @param lines The list of strings to decode.","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"Jayne1010"},"content":"     * @return The decoded list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeDataCorruptedException If the data file is corrupted.","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"Jayne1010"},"content":"    public static List\u003cTask\u003e decode(List\u003cString\u003e lines) throws DukeDataCorruptedException {","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"Jayne1010"},"content":"        List\u003cTask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"Jayne1010"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"Jayne1010"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"Jayne1010"},"content":"                decodedTasks.add(decodeTask(line));","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"Jayne1010"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"Jayne1010"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"Jayne1010"},"content":"            throw new DukeDataCorruptedException(\"Data file is corrupted: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"Jayne1010"},"content":"        return decodedTasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"Jayne1010"},"content":"    private static Task decodeTask(String line) {","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"Jayne1010"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"Jayne1010"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"Jayne1010"},"content":"        boolean isDone \u003d parts[1].equals(\"1\"); // Check if the task is marked as done","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"Jayne1010"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"Jayne1010"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"Jayne1010"},"content":"        case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"Jayne1010"},"content":"            Task newTodo \u003d new Todo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"Jayne1010"},"content":"            newTodo.setDone(isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"Jayne1010"},"content":"            return newTodo;","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"Jayne1010"},"content":"        case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"Jayne1010"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"Jayne1010"},"content":"            LocalDate byDateTime \u003d LocalDate.parse(by.substring(3), DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"Jayne1010"},"content":"            Task newDeadline \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"Jayne1010"},"content":"            newDeadline.setDone(isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"Jayne1010"},"content":"            return newDeadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"Jayne1010"},"content":"        case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"Jayne1010"},"content":"            String dateTimeString \u003d parts[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"Jayne1010"},"content":"            String[] dateTimeParts \u003d dateTimeString.split(\" to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"Jayne1010"},"content":"            String from \u003d dateTimeParts[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"Jayne1010"},"content":"            String to \u003d dateTimeParts[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"Jayne1010"},"content":"            LocalDate fromDateTime \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"Jayne1010"},"content":"            LocalDate toDateTime \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"Jayne1010"},"content":"            Task newEvent \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"Jayne1010"},"content":"            newEvent.setDone(isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"Jayne1010"},"content":"            return newEvent;","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"Jayne1010"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"Jayne1010"},"content":"            // Handle other task types if needed","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"Jayne1010"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":199}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":" * The Task class represents a generic task with a description and completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"     * @param done The completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"        isDone \u003d done;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"        return description;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Jayne1010"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Jayne1010"},"content":"        return isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Jayne1010"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Jayne1010"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Jayne1010"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Jayne1010"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Jayne1010"},"content":"     * Gets the status icon for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Jayne1010"},"content":"     * @return The status icon.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Jayne1010"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Jayne1010"},"content":"        return \" \"; // Default to empty space","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Jayne1010"},"content":" * The Todo class represents a specific type of task called Todo.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Jayne1010"},"content":"class Todo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Jayne1010"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Jayne1010"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Jayne1010"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Jayne1010"},"content":"     * Gets the status icon for the Todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Jayne1010"},"content":"     * @return The status icon.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"Jayne1010"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Jayne1010"},"content":"        return \"T\"; // Commands.Todo tasks have \"T\" as their status icon","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Jayne1010"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Jayne1010"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a Deadline task with the given description and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Jayne1010"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Jayne1010"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"Jayne1010"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"Jayne1010"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"Jayne1010"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Jayne1010"},"content":"     * Gets the status icon for the Deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Jayne1010"},"content":"     * @return The status icon.","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"Jayne1010"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"Jayne1010"},"content":"        return \"D\"; // Commands.Deadline tasks have \"D\" as their status icon","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Jayne1010"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"Jayne1010"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"Jayne1010"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"Jayne1010"},"content":"        return by;","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"Jayne1010"},"content":"     * Returns a string representation of the Deadline task with the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"Jayne1010"},"content":"     * @return A string representation of the task with the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"Jayne1010"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"Jayne1010"},"content":"        return super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"Jayne1010"},"content":" * The Event class represents a specific type of task called Event, with a specified start and end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"Jayne1010"},"content":"class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"Jayne1010"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"Jayne1010"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"Jayne1010"},"content":"     * Constructs an Event task with the given description, start date, and end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"Jayne1010"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"Jayne1010"},"content":"     * @param from        The start date of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"Jayne1010"},"content":"     * @param to          The end date of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"Jayne1010"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"Jayne1010"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"Jayne1010"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"Jayne1010"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"Jayne1010"},"content":"     * Gets the status icon for the Event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"Jayne1010"},"content":"     * @return The status icon.","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"Jayne1010"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"Jayne1010"},"content":"        return \"E\"; // Commands.Event tasks have \"E\" as their status icon","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"Jayne1010"},"content":"     * Gets the start date of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"Jayne1010"},"content":"     * @return The start date of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"Jayne1010"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"Jayne1010"},"content":"        return from;","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"Jayne1010"},"content":"     * Gets the end date of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"Jayne1010"},"content":"     * @return The end date of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"Jayne1010"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"Jayne1010"},"content":"        return to;","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"Jayne1010"},"content":"     * Returns a string representation of the Event task with the start and end dates.","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"Jayne1010"},"content":"     * @return A string representation of the task with the start and end dates.","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"Jayne1010"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"Jayne1010"},"content":"        return super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"Jayne1010"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":195,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":196}},{"path":"src/main/java/Duke/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":" * The TaskFactory class provides methods to create different types of tasks based on user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"public class TaskFactory {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     * Creates a task based on the provided user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"     * @param userInput The user input specifying the task type and details.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"     * @return The created task.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If the user input is invalid or incomplete.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"    public static Task createTask(String userInput) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"        String[] inputParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"        if (!(inputParts[0].equals(\"todo\")) \u0026\u0026 !(inputParts[0].equals(\"deadline\"))","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"                \u0026\u0026 !(inputParts[0].equals(\"event\"))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"            throw new DukeException(\"Don\u0027t talk nonsense\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"        } else if (inputParts.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"            throw new DukeException(\"What do you want to do\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"        String taskType \u003d inputParts[0].toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"            return new Todo(inputParts[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"            return createDeadlineTask(inputParts[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"            return createEventTask(inputParts[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"     * Creates a Deadline task based on the provided input.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Jayne1010"},"content":"     * @param input The input specifying the deadline task details.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Jayne1010"},"content":"     * @return The created Deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If the input is invalid or incomplete.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Jayne1010"},"content":"    private static Task createDeadlineTask(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Jayne1010"},"content":"        String[] parts \u003d input.split(\"/by\");","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Jayne1010"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Jayne1010"},"content":"            throw new DukeException(\"Please provide a deadline in the format \u0027/by \u003cyyyy-mm-dd\u003e\u0027\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Jayne1010"},"content":"        LocalDate dateTime \u003d parseDate(parts[1].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Jayne1010"},"content":"        return new Deadline(parts[0].trim(), dateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Jayne1010"},"content":"     * Creates an Event task based on the provided input.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Jayne1010"},"content":"     * @param input The input specifying the event task details.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Jayne1010"},"content":"     * @return The created Event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If the input is invalid or incomplete.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Jayne1010"},"content":"    private static Task createEventTask(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Jayne1010"},"content":"        String[] parts \u003d input.split(\"/from\", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Jayne1010"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Jayne1010"},"content":"            throw new DukeException(\"Please provide an event in the format \u0027/from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dd\u003e\u0027\");","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Jayne1010"},"content":"        LocalDate fromDateTime \u003d parseDate(parts[1].trim().split(\"/to\")[0].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Jayne1010"},"content":"        LocalDate toDateTime \u003d parseDate(parts[1].trim().split(\"/to\")[1].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Jayne1010"},"content":"        return new Event(parts[0].trim(), fromDateTime, toDateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Jayne1010"},"content":"     * Parses a date string in the format \u0027yyyy-mm-dd\u0027.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Jayne1010"},"content":"     * @param dateString The date string to parse.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Jayne1010"},"content":"     * @return The parsed LocalDate.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If the date string is in an invalid format.","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Jayne1010"},"content":"    private static LocalDate parseDate(String dateString) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Jayne1010"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"Jayne1010"},"content":"            return LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Jayne1010"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Jayne1010"},"content":"            throw new DukeException(\"Invalid date format. Please use \u0027yyyy-mm-dd\u0027\");","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jayne1010":95}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":" * The TaskList class represents a collection of tasks and provides methods to manipulate the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks The list of tasks to initialize the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeDataCorruptedException If there is an issue decoding the task data.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"    public TaskList(List\u003cTask\u003e tasks) throws DukeDataCorruptedException {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"     * @param task The task to add.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"     * Deletes a task from the TaskList based on its index.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Jayne1010"},"content":"     * Retrieves a task from the TaskList based on its index.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Jayne1010"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Jayne1010"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Jayne1010"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Jayne1010"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Jayne1010"},"content":"     * Marks a task in the TaskList as done based on its index.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Jayne1010"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Jayne1010"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Jayne1010"},"content":"        tasks.get(index).setDone(true);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Jayne1010"},"content":"     * Marks a task in the TaskList as not done based on its index.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Jayne1010"},"content":"     * @param index The index of the task to mark as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Jayne1010"},"content":"    public void markTaskAsNotDone(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jayne1010"},"content":"        tasks.get(index).setDone(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Jayne1010"},"content":"     * Retrieves the list of tasks in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Jayne1010"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Jayne1010"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Jayne1010"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":83}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":" * The Ui class handles user interface-related operations, such as displaying messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"     * Gets user input from the console.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"     * @return User input as a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" Hello! I\u0027m Duck\");","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Jayne1010"},"content":"     * Displays an error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Jayne1010"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Jayne1010"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" \" + errorMessage);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Jayne1010"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Jayne1010"},"content":"    public void showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Jayne1010"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Jayne1010"},"content":"            System.out.println(\" There are no tasks in your list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Jayne1010"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Jayne1010"},"content":"            System.out.println(\" Here\" + (tasks.size() \u003d\u003d 1 ? \" is the \" : \" are the \") + tasks.size()","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jayne1010"},"content":"                    + (tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Jayne1010"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Jayne1010"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Jayne1010"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Jayne1010"},"content":"     * Displays a confirmation message after adding a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks The updated list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Jayne1010"},"content":"    public void showConfirmationMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Jayne1010"},"content":"                + \" in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Jayne1010"},"content":"     * Displays a message after deleting a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks        The updated list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Jayne1010"},"content":"     * @param removedTask The task that was removed.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Jayne1010"},"content":"    public void showDeleteMessage(List\u003cTask\u003e tasks, Task removedTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Jayne1010"},"content":"        Task removedTaskk \u003d removedTask;","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\"   \" + removedTaskk);","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Jayne1010"},"content":"                + \" in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Jayne1010"},"content":"     * Displays an error message for an invalid task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Jayne1010"},"content":"    public void invalidTaskIndex() {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" Invalid task index. Please enter a valid task index.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Jayne1010"},"content":"     * Displays a message after marking a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Jayne1010"},"content":"     * @param markedTask The task that was marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"Jayne1010"},"content":"    public static void showMarkTaskAsDone(Task markedTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\"   \" + markedTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"Jayne1010"},"content":"     * Displays a message after marking a task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"Jayne1010"},"content":"     * @param markedTask The task that was marked as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"Jayne1010"},"content":"    public static void showUnmarkTaskAsDone(Task markedTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\"   \" + markedTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"Jayne1010"},"content":"     * Displays tasks matching a keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"Jayne1010"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks   The list of tasks to search in.","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"Jayne1010"},"content":"    public static void findTasksByKeyword(String keyword, List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"Jayne1010"},"content":"        // Filter tasks based on the keyword","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"Jayne1010"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.stream()","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"Jayne1010"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"Jayne1010"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"Jayne1010"},"content":"        // Display the matching tasks according to keyword","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"Jayne1010"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"Jayne1010"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"Jayne1010"},"content":"     * Displays a DukeException message.","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"Jayne1010"},"content":"     * @param e The DukeException.","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"Jayne1010"},"content":"    public void showDukeExceptionMessage(DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\" \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"Jayne1010"},"content":"     * Displays a DukeDataCorruptedException message.","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"Jayne1010"},"content":"     * @param e The DukeDataCorruptedException.","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"Jayne1010"},"content":"    public void showDukeDataCorruptionMessage(DukeDataCorruptedException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\"Error: The data file is corrupted. Please check the file format.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"Jayne1010"},"content":"     * Displays an IOException message.","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"Jayne1010"},"content":"    public void showIoExceptionMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\"Error saving or loading tasks. Please check the file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"Jayne1010"},"content":"     * Displays a NumberFormatException message.","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"Jayne1010"},"content":"    public void showNumberFormatExceptionMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\"Please enter a valid task index.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":200,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"Jayne1010"},"content":"     * Displays a message for a FileNotFoundException.","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"Jayne1010"},"content":"    public void showFileNotFoundExceptionMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"Jayne1010"},"content":"        System.out.println(\"Data file not found. Creating a new one.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":208}},{"path":"src/main/java/Duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":" * The UnmarkCommand class represents a command to mark a task as not done in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     * @param taskIndex The index of the task to mark as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"     * Executes the UnmarkCommand, marking the specified task as not done in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"     * @param storage The storage to save the updated task list to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c (tasks.getTasks()).size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"                Task markedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"                tasks.markTaskAsNotDone(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"                storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"                ui.showUnmarkTaskAsDone(markedTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"                ui.invalidTaskIndex();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"            ui.showIoExceptionMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jayne1010":42}},{"path":"src/test/java/Duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":" * Test class for the Parser class, which is responsible for parsing user input and generating corresponding commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":"     * Tests the parseCommand method for the \"bye\" input, expecting an ExitCommand instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If an error occurs during the test.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"    public void testParseCommandExit() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"        Command command \u003d Parser.parseCommand(\"bye\");","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"     * Tests the parseCommand method for the \"list\" input, expecting a ListCommand instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"     * @throws DukeException If an error occurs during the test.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"    public void testParseCommandList() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"        Command command \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"     * Tests the isExitCommand method for various exit commands, expecting true, and for a non-exit command, expecting false.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"    public void testIsExitCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"        assertTrue(Parser.isExitCommand(\"bye\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"        assertTrue(Parser.isExitCommand(\"exit\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"        assertTrue(Parser.isExitCommand(\"quit\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"        assertFalse(Parser.isExitCommand(\"list\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Jayne1010":45}},{"path":"src/test/java/Duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayne1010"},"content":"package Duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jayne1010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jayne1010"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Jayne1010"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Jayne1010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Jayne1010"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Jayne1010"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jayne1010"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jayne1010"},"content":" * Test class for the Ui class, which is responsible for handling user interface interactions.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jayne1010"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jayne1010"},"content":"public class UiTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"     * Tests the showWelcomeMessage method, verifying the output in the console.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jayne1010"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Jayne1010"},"content":"    public void testShowWelcomeMessage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Jayne1010"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Jayne1010"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Jayne1010"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Jayne1010"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Jayne1010"},"content":"        String expectedOutput \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jayne1010"},"content":"                + \" Hello! I\u0027m Duck\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jayne1010"},"content":"                + \" What can I do for you?\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jayne1010"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jayne1010"},"content":"        assertEquals(expectedOutput, outputStream.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Jayne1010"},"content":"        System.setOut(System.out); // Reset System.out to the console","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jayne1010"},"content":"     * Tests the showGoodbyeMessage method, verifying the output in the console.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jayne1010"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Jayne1010"},"content":"    public void testShowGoodbyeMessage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Jayne1010"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Jayne1010"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Jayne1010"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Jayne1010"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Jayne1010"},"content":"        String expectedOutput \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jayne1010"},"content":"                + \" Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jayne1010"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jayne1010"},"content":"        assertEquals(expectedOutput, outputStream.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Jayne1010"},"content":"        System.setOut(System.out); // Reset System.out to the console","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Jayne1010"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jayne1010"},"content":"     * Tests the showTaskList method, verifying the output in the console.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jayne1010"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jayne1010"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Jayne1010"},"content":"    public void testShowTaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Jayne1010"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Jayne1010"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Jayne1010"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Jayne1010"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Jayne1010"},"content":"        tasks.add(new Task(\"Task 1\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Jayne1010"},"content":"        tasks.add(new Task(\"Task 2\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Jayne1010"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Jayne1010"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Jayne1010"},"content":"        String expectedOutput \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Jayne1010"},"content":"                + \" Here are the 2 tasks in your list:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jayne1010"},"content":"                + \" 1.[ ][ ] Task 1\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jayne1010"},"content":"                + \" 2.[ ][ ] Task 2\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jayne1010"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Jayne1010"},"content":"        assertEquals(expectedOutput, outputStream.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Jayne1010"},"content":"        System.setOut(System.out); // Reset System.out to the console","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Jayne1010"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Jayne1010"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Jayne1010":77}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Jayne1010"},"content":"java -classpath ..\\bin Duke.Test \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jayne1010":1,"-":20}}]
