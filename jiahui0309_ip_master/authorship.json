[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"    mainClass.set(\"dino.command.Main\")","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"jiahui0309"},"content":"    archiveFileName \u003d \u0027dino.jar\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"jiahui0309":22}},{"path":"data/dino.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":" T | 0 | sleep","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":" E | 0 | lunch | from: Mar 04 2023 12:34 to: Apr 03 2034 17:00","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":" T | 0 | hi","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"jiahui0309":3}},{"path":"src/main/java/dino/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":" * Represents a custom control for displaying a dialog box in the Dino application.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":" * A dialog box consists of a Label for text and an ImageView for displaying an image.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"    private void flip() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"jiahui0309"},"content":"    public static DialogBox getDinoDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"jiahui0309"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"jiahui0309"},"content":"        db.flip();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"jiahui0309"},"content":"        return db;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jiahui0309":61}},{"path":"src/main/java/dino/Dino.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import dino.command.Command;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"/** The main class for the Dino application. */","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"public class Dino {","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"    private static final String FILE_PATH \u003d \"./data/dino.txt\";","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"     * Enumeration representing the types of tasks in the Dino application.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"     * Tasks can be of type TODO, DEADLINE, or EVENT.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"    public enum TaskType {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"        TODO,","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"        EVENT","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"     * Constructs a new Dino instance with the specified file path.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"    public Dino() {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"        tasks \u003d storage.loadTasksFromFile();","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"     * Returns feedback message based on user command.","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"     * @param input Input command and parameters for Duke to process.","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"     * @return Message on command execution.","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"            Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"            return command.execute(this.tasks, this.storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"        } catch (DinoException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"            return \"Hmm.. it seems that the file is not working... Try restarting?\";","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":47}},{"path":"src/main/java/dino/DinoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":" * Custom exception class for the Dino chatbot.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":" * This exception is thrown to indicate errors specific to the Dino chatbot.","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"public class DinoException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"     * Constructs a new DinoException with the specified message.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"    public DinoException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"        super(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"jiahui0309":18}},{"path":"src/main/java/dino/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"public class Launcher {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jiahui0309":12}},{"path":"src/main/java/dino/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":" * A GUI for Dino using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    private Dino dino \u003d new Dino();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"        assert dino !\u003d null : \"Dino cannot be null\";","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDino(dino);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"            stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jiahui0309":32}},{"path":"src/main/java/dino/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"    private Dino dino;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"    private Image dinoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dino.jpg\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"     * Initializes the main window.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"                DialogBox.getDinoDialog(\"Hi, I\u0027m Dino!\\nWhat can I do for you?\", dinoImage)","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"    public void setDino(Dino d) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"        dino \u003d d;","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"        String response \u003d dino.getResponse(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"jiahui0309"},"content":"                DialogBox.getDinoDialog(response, dinoImage)","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"jiahui0309"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"jiahui0309"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jiahui0309":59}},{"path":"src/main/java/dino/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"import java.util.Locale;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"import dino.command.Command;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"import dino.command.DeleteCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"import dino.command.ExitCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"import dino.command.FilterCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"import dino.command.FindCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"import dino.command.ListCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"import dino.command.MarkCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"import dino.command.TaskCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"import dino.command.UnmarkCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"import dino.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":" * Handles the parsing of user commands and creating tasks based on the input.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"     * Constructs a new Parser instance with the specified TaskList, Ui, and Scanner.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"     * @param tasks The TaskList to be operated on.","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"     * Parses the given command and performs the corresponding action.","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"     * @param input The user command to be parsed.","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"     * @return String representation of command.","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"    public static Command parseCommand(String input) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"        String[] parts \u003d input.trim().split(\" \"); // Split into command and argument","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"        String argument \u003d parts.length \u003e 1","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"                ? String.join(\" \", Arrays.copyOfRange(parts, 1, parts.length))","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"jiahui0309"},"content":"                : \"\";","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"jiahui0309"},"content":"        switch (command) {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"jiahui0309"},"content":"        case \"list\":","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"jiahui0309"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"jiahui0309"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"jiahui0309"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"jiahui0309"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"jiahui0309"},"content":"            int taskToDelete \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"jiahui0309"},"content":"            return new DeleteCommand(taskToDelete);","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"jiahui0309"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"jiahui0309"},"content":"            return new TaskCommand(Dino.TaskType.TODO, argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"jiahui0309"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"jiahui0309"},"content":"            return new TaskCommand(Dino.TaskType.DEADLINE, argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"jiahui0309"},"content":"        case \"event\":","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"jiahui0309"},"content":"            return new TaskCommand(Dino.TaskType.EVENT, argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"jiahui0309"},"content":"        case \"filter\":","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"jiahui0309"},"content":"            return new FilterCommand(argument.trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"jiahui0309"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"jiahui0309"},"content":"            int taskToMark \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"jiahui0309"},"content":"            return new MarkCommand(taskToMark);","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"jiahui0309"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"jiahui0309"},"content":"            int taskToUnmark \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"jiahui0309"},"content":"            return new UnmarkCommand(taskToUnmark);","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"jiahui0309"},"content":"        case \"find\":","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"jiahui0309"},"content":"            return new FindCommand(argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"jiahui0309"},"content":"        default:","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"jiahui0309"},"content":"            throw new DinoException(\"I don\u0027t understand ;;\");","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"jiahui0309"},"content":"     * Creates a Task object based on the provided task type and task details.","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"jiahui0309"},"content":"     * @param taskType    The type of the task (ToDo, Deadline, or Event).","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"jiahui0309"},"content":"     * @param taskDetails The details of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jiahui0309"},"content":"     * @return A Task object representing the created task.","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"jiahui0309"},"content":"     * @throws DinoException If there is an error creating the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"jiahui0309"},"content":"    public static Task createTaskFromInput(Dino.TaskType taskType, String taskDetails) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"jiahui0309"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"jiahui0309"},"content":"        case TODO:","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"jiahui0309"},"content":"            return new ToDo(taskDetails);","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"jiahui0309"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"jiahui0309"},"content":"            String[] deadlineParts \u003d taskDetails.split(\"/by\");","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"jiahui0309"},"content":"            if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"jiahui0309"},"content":"                throw new DinoException(\"Invalid input format for deadline. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"jiahui0309"},"content":"                        + \"Please use: deadline \u003cdeadline name\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"jiahui0309"},"content":"            String deadlineName \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"jiahui0309"},"content":"            String deadlineTimeString \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"jiahui0309"},"content":"            if (deadlineName.isEmpty() || deadlineTimeString.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"jiahui0309"},"content":"                throw new DinoException(\"Deadline name and time cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"jiahui0309"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"jiahui0309"},"content":"                return new Deadline(deadlineName, parseStringToTime(deadlineTimeString));","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"jiahui0309"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"jiahui0309"},"content":"                throw new DinoException(\"Error parsing deadline date and time: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"jiahui0309"},"content":"        case EVENT:","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"jiahui0309"},"content":"            String[] eventParts \u003d taskDetails.split(\"/from|/to\");","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"jiahui0309"},"content":"            if (eventParts.length !\u003d 3) {","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"jiahui0309"},"content":"                throw new DinoException(\"Invalid input format for event. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"jiahui0309"},"content":"                        + \"Please use: event \u003cevent name\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"jiahui0309"},"content":"            String eventName \u003d eventParts[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"jiahui0309"},"content":"            String startTimeString \u003d eventParts[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"jiahui0309"},"content":"            String endTimeString \u003d eventParts[2].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"jiahui0309"},"content":"            if (eventName.isEmpty() || startTimeString.isEmpty() || endTimeString.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"jiahui0309"},"content":"                throw new DinoException(\"Event name, start time, and end time cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"jiahui0309"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"jiahui0309"},"content":"                LocalDateTime startTime \u003d parseStringToTime(startTimeString);","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"jiahui0309"},"content":"                LocalDateTime endTime \u003d parseStringToTime(endTimeString);","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"jiahui0309"},"content":"                return new Event(eventName, startTime, endTime);","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"jiahui0309"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"jiahui0309"},"content":"                throw new DinoException(\"Error parsing event date and time: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"jiahui0309"},"content":"        default:","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"jiahui0309"},"content":"            throw new DinoException(\"Unknown task type: \" + taskType);","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"jiahui0309"},"content":"     * Parses a string representing date and time into a LocalDateTime object.","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"jiahui0309"},"content":"     * @param time The string representation of date and time.","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"jiahui0309"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"jiahui0309"},"content":"    public static LocalDateTime parseStringToTime(String time) {","lastModifiedDate":"2024-02-10"},{"lineNumber":160,"author":{"gitId":"jiahui0309"},"content":"        assert time !\u003d null : \"Time cannot be null\";","lastModifiedDate":"2024-02-09"},{"lineNumber":161,"author":{"gitId":"jiahui0309"},"content":"        DateTimeFormatter dateOnlyFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\", Locale.ENGLISH);","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"jiahui0309"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\", Locale.ENGLISH);","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"jiahui0309"},"content":"        LocalDateTime deadlineTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"jiahui0309"},"content":"        if (time.contains(\" \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"jiahui0309"},"content":"            deadlineTime \u003d LocalDateTime.parse(time, dateTimeFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"jiahui0309"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"jiahui0309"},"content":"            deadlineTime \u003d LocalDateTime.of(LocalDate.parse(time, dateOnlyFormatter), LocalTime.MIDNIGHT);","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"jiahui0309"},"content":"        return deadlineTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"jiahui0309"},"content":"     * Parses a string representing date into a formatted string with a specific pattern.","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"jiahui0309"},"content":"     * @param time The string representation of date.","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"jiahui0309"},"content":"     * @return A formatted string representing the parsed date.","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"jiahui0309"},"content":"    public static String parseStringToNum(String time) {","lastModifiedDate":"2024-02-10"},{"lineNumber":180,"author":{"gitId":"jiahui0309"},"content":"        assert time !\u003d null : \"Time cannot be null\";","lastModifiedDate":"2024-02-09"},{"lineNumber":181,"author":{"gitId":"jiahui0309"},"content":"        time \u003d time.trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"jiahui0309"},"content":"        DateTimeFormatter dateOnlyFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH);","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"jiahui0309"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.ENGLISH);","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"jiahui0309"},"content":"        LocalDateTime deadlineTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"jiahui0309"},"content":"        if (time.contains(\" \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"jiahui0309"},"content":"            deadlineTime \u003d LocalDateTime.parse(time, dateTimeFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"jiahui0309"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"jiahui0309"},"content":"            deadlineTime \u003d LocalDateTime.of(LocalDate.parse(time, dateOnlyFormatter), LocalTime.MIDNIGHT);","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"jiahui0309"},"content":"        DateTimeFormatter resultFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\", Locale.ENGLISH);","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"jiahui0309"},"content":"        String formattedDate \u003d deadlineTime.format(resultFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"jiahui0309"},"content":"        if (deadlineTime.toLocalTime() !\u003d LocalTime.MIDNIGHT) {","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"jiahui0309"},"content":"            formattedDate +\u003d \" \" + deadlineTime.toLocalTime().format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"jiahui0309"},"content":"        return formattedDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jiahui0309":201}},{"path":"src/main/java/dino/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":" * Handles the loading and saving of tasks from/to a file.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    private String filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"     * Constructs a new Storage instance with the specified file path.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"     * Loads tasks from the file specified in the constructor and returns a TaskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"     * @return The TaskList containing tasks loaded from the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"    public TaskList loadTasksFromFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"                String taskData \u003d fileScanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"                parseTaskData(taskData, taskList);","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"            fileScanner.close();","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"            System.out.println(e.getMessage() + \" seems to not exist. TT Let me create one for you.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"        } catch (DinoException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"        return taskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"jiahui0309"},"content":"     * Parses task data and adds the parsed task to the given task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"jiahui0309"},"content":"     * @param taskData The data representing a task.","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"jiahui0309"},"content":"     * @param taskList The TaskList to which the parsed task will be added.","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"jiahui0309"},"content":"    private void parseTaskData(String taskData, TaskList taskList) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"jiahui0309"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"jiahui0309"},"content":"        String[] parts \u003d taskData.split(\"\\\\|\");","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"jiahui0309"},"content":"        if (parts.length \u003e 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"jiahui0309"},"content":"            String taskTypeString \u003d parts[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"jiahui0309"},"content":"            switch (taskTypeString) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"jiahui0309"},"content":"            case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"jiahui0309"},"content":"                task \u003d parseTodoTask(parts);","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"jiahui0309"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"jiahui0309"},"content":"            case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"jiahui0309"},"content":"                task \u003d parseDeadlineTask(parts);","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"jiahui0309"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"jiahui0309"},"content":"            case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"jiahui0309"},"content":"                task \u003d parseEventTask(parts);","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"jiahui0309"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jiahui0309"},"content":"            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jiahui0309"},"content":"                System.out.println(\"Unknown task type in file: \" + taskTypeString);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"jiahui0309"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"jiahui0309"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"jiahui0309"},"content":"            taskList.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"jiahui0309"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"jiahui0309"},"content":"            System.out.println(\"Error loading task from file. Skipping invalid task.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"jiahui0309"},"content":"     * Parses a todo task from the given parts and returns the corresponding Task.","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"jiahui0309"},"content":"     * @param parts The parts of the todo task.","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"jiahui0309"},"content":"     * @return The parsed TodoTask.","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"jiahui0309"},"content":"    private Task parseTodoTask(String[] parts) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"jiahui0309"},"content":"        return Parser.createTaskFromInput(Dino.TaskType.TODO, parts[2].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"jiahui0309"},"content":"     * Parses a deadline task from the given parts and returns the corresponding Task.","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"jiahui0309"},"content":"     * @param parts The parts of the deadline task.","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"jiahui0309"},"content":"     * @return The parsed DeadlineTask.","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"jiahui0309"},"content":"    private Task parseDeadlineTask(String[] parts) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"jiahui0309"},"content":"        String[] deadlineParts \u003d parts[3].split(\" by: \");","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"jiahui0309"},"content":"        String deadlineDetails \u003d parts[2].trim() + \" /by \" + Parser.parseStringToNum(deadlineParts[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"jiahui0309"},"content":"        return Parser.createTaskFromInput(Dino.TaskType.DEADLINE, deadlineDetails);","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"jiahui0309"},"content":"     * Parses an event task from the given parts and returns the corresponding Task.","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"jiahui0309"},"content":"     * @param parts The parts of the event task.","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"jiahui0309"},"content":"     * @return The parsed EventTask.","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"jiahui0309"},"content":"    private Task parseEventTask(String[] parts) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"jiahui0309"},"content":"        String[] eventParts \u003d parts[3].split(\"from:|to:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"jiahui0309"},"content":"        String eventDetails \u003d parts[2].trim() + \" /from \" + Parser.parseStringToNum(eventParts[1])","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"jiahui0309"},"content":"                + \" /to \" + Parser.parseStringToNum(eventParts[2]);","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"jiahui0309"},"content":"        return Parser.createTaskFromInput(Dino.TaskType.EVENT, eventDetails);","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"jiahui0309"},"content":"     * Saves the provided task list to the file specified in the constructor.","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"jiahui0309"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"jiahui0309"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"jiahui0309"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"jiahui0309"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"jiahui0309"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"jiahui0309"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"jiahui0309"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"jiahui0309"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"jiahui0309"},"content":"            file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"jiahui0309"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(file))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"jiahui0309"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"jiahui0309"},"content":"                writer.println(task.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jiahui0309":144}},{"path":"src/main/java/dino/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"/** Represents an ArrayList of Task. */","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"    /** Constructs a new TaskList. */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"     * Adds the Task into the TaskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"     * @param task The Task to be added.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"     * @throws DinoException If there\u0027s a scheduling conflict with an existing task.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"    public void addTask(Task task) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"        if (task instanceof Deadline || task instanceof Event) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"            if (isConflict(task)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"                throw new DinoException(\"Scheduling conflict: \"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"                        + \"The new task conflicts with an existing task.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"     * Checks if this task conflicts with another task.","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"     * @param newTask The other task to check for conflicts with.","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"     * @return true if there is a conflict, false otherwise.","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"    public boolean isConflict(Task newTask) {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"        if (newTask instanceof Event || newTask instanceof Deadline) {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"            LocalDateTime newStart \u003d newTask instanceof Event ? ((Event) newTask).getStartTime()","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"                    : ((Deadline) newTask).getDateTime();","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"            LocalDateTime newEnd \u003d newTask instanceof Event ? ((Event) newTask).getEndTime()","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"                    : ((Deadline) newTask).getDateTime();","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"            for (Task existingTask : taskList) {","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"                if (existingTask instanceof Event || existingTask instanceof Deadline) {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"                    LocalDateTime existingStart \u003d existingTask instanceof Event ? ((Event) existingTask).getStartTime()","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"                            : ((Deadline) existingTask).getDateTime();","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"                    LocalDateTime existingEnd \u003d existingTask instanceof Event ? ((Event) existingTask).getEndTime()","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"jiahui0309"},"content":"                            : ((Deadline) existingTask).getDateTime();","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"jiahui0309"},"content":"                    boolean isOverlap \u003d newStart.isBefore(existingEnd) \u0026\u0026 newEnd.isAfter(existingStart);","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"jiahui0309"},"content":"                    if (isOverlap) {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"jiahui0309"},"content":"                        return true;","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"jiahui0309"},"content":"                    }","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"jiahui0309"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"jiahui0309"},"content":"        return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"jiahui0309"},"content":"     * Removes the Task from the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"jiahui0309"},"content":"     * @param taskNum The index of the Task to be removed.","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"jiahui0309"},"content":"     * @return String representation of the updated TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"jiahui0309"},"content":"    public String deleteTask(int taskNum) throws DinoException {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jiahui0309"},"content":"        if (taskNum \u003c 1 || taskNum \u003e taskList.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jiahui0309"},"content":"            throw new DinoException(\"Invalid task number. Please provide a valid task number to delete.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"jiahui0309"},"content":"        Task removedTask \u003d taskList.remove(taskNum - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"jiahui0309"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jiahui0309"},"content":"                + \"  \" + removedTask + \"\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jiahui0309"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jiahui0309"},"content":"     * Lists the Task in the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"jiahui0309"},"content":"     * @return String representation of TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"jiahui0309"},"content":"    public String listTask() {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"jiahui0309"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"jiahui0309"},"content":"                throw new DinoException(\"The list is empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"jiahui0309"},"content":"            StringBuilder printTaskList \u003d new StringBuilder(\"Here are the tasks that you wanted to do:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"jiahui0309"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"jiahui0309"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"jiahui0309"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"jiahui0309"},"content":"                printTaskList.append(index).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jiahui0309"},"content":"            return String.valueOf(printTaskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"jiahui0309"},"content":"        } catch (DinoException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"jiahui0309"},"content":"            return (e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"jiahui0309"},"content":"     * Gets the taskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"jiahui0309"},"content":"     * @return taskList of type ArrayList.","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"jiahui0309"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"jiahui0309"},"content":"        return taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"jiahui0309"},"content":"     * Gets the size of the taskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"jiahui0309"},"content":"     * @return integer value of size.","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"jiahui0309"},"content":"    public int size() {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"jiahui0309"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"jiahui0309"},"content":"     * Gets the Task of the specified index.","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"jiahui0309"},"content":"     * @param index Index of the Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"jiahui0309"},"content":"     * @return Task in the taskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"jiahui0309"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"jiahui0309"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"jiahui0309"},"content":"     * Searches for Tasks with the specified keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"jiahui0309"},"content":"     * @param keyword String value input.","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"jiahui0309"},"content":"     * @return An ArrayList with the filtered Tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"jiahui0309"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"jiahui0309"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"jiahui0309"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"jiahui0309"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"jiahui0309"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"jiahui0309"},"content":"        return matchingTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jiahui0309":150}},{"path":"src/main/java/dino/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":" * The abstract class representing a command in the Dino task management application.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"     * Executes the command with the given TaskList and Storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"     * @param storage The Storage used to save/load tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"     * @return A message indicating the result of the command execution.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"     * @throws IOException If an I/O error occurs while accessing the storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"     * @throws DinoException If an error specific to the Dino application occurs.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws IOException, DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":25}},{"path":"src/main/java/dino/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"    private int index;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    public String execute(TaskList taskList, Storage storage) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"        return taskList.deleteTask(this.index);","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":21}},{"path":"src/main/java/dino/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException, DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"            storage.saveTasksToFile(taskList.getTaskList());","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"            return \"Bye\";","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"        } finally {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":26}},{"path":"src/main/java/dino/command/FilterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":" * Represents a command to filter a task from the task list based on specified date.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"    private String argument;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"    public FilterCommand(String argument) {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException, DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"        assert argument !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\", Locale.ENGLISH);","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"            LocalDate date \u003d LocalDate.parse(argument, dateFormatter);","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"            result.append(\"Tasks for \").append(date).append(\":\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"            taskList.getTaskList().stream()","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"                    .filter(task -\u003e task instanceof Deadline)","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"                    .map(task -\u003e (Deadline) task)","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"                    .filter(deadline -\u003e deadline.getDateTime().toLocalDate().equals(date))","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"                    .forEach(deadline -\u003e result.append(deadline).append(\"\\n\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"            taskList.getTaskList().stream()","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"                    .filter(task -\u003e task instanceof Event)","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"                    .map(task -\u003e (Event) task)","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"                    .filter(event -\u003e event.getStartTime().toLocalDate().equals(date)","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"                            || event.getEndTime().toLocalDate().equals(date))","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"                    .forEach(event -\u003e result.append(event).append(\"\\n\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"            result.append(\"Error parsing date: \").append(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"        return result.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":53}},{"path":"src/main/java/dino/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":" * Represents a command to find a task from the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"    private String argument;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    public FindCommand(String argument) {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"    public String execute(TaskList taskList, Storage storage) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"        String searchKeyword \u003d argument.trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTasksByKeyword(searchKeyword);","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"            throw new DinoException(\"Aww, there are no tasks that contains that keyword.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"            StringBuilder printTask \u003d new StringBuilder(\"Matching tasks:\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"            for (Task task : matchingTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"                printTask.append(task).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"            return String.valueOf(printTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":35}},{"path":"src/main/java/dino/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":" * Represents a command to list all the tasks from the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException, DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"        return taskList.listTask();","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":18}},{"path":"src/main/java/dino/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":" * Represents a command to mark a task from the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"    private int index;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException, DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"            throw new DinoException(\"Uh oh, we do not have a task assigned to that number.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"            Task completed \u003d taskList.get(index - 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"            return completed.markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":27}},{"path":"src/main/java/dino/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import dino.Dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import dino.Parser;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"    private Dino.TaskType taskType;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"    private String description;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"     * Constructs a TaskCommand object with the specified task type and description.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"    public TaskCommand(Dino.TaskType taskType, String description) {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"    public String execute(TaskList taskList, Storage storage) throws DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"        StringBuilder printTask \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"            throw new DinoException(\"Description cannot be empty.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"        taskList.addTask(Parser.createTaskFromInput(taskType, description));","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"        printTask.append(\"Okay.\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"        printTask.append(\"  \").append(taskList.get(taskList.size() - 1)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"        printTask.append(\"Now you have \").append(taskList.size()).append(\" in the list.\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"        return printTask.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":44}},{"path":"src/main/java/dino/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":" * Represents a command to unmark a task from the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"    private int index;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"    public String execute(TaskList taskList, Storage storage) throws IOException, DinoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"            throw new DinoException(\"Uh oh, we do not have a task assigned to that number.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"            Task missing \u003d taskList.get(index - 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"            return missing.markAsUndone();","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":27}},{"path":"src/main/java/dino/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"/** Represents a Task with a single deadline. */","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"    private LocalDateTime deadlineTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"     * Constructs a new Deadline task with the given description and deadline time.","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"     * @param description   The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"     * @param deadlineTime  The deadline time of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    public Deadline(String description, LocalDateTime deadlineTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"     * Returns the deadline time of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"     * @return The deadline time.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"        return deadlineTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"     * @return A formatted string representing the task\u0027s status, description, and deadline time.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"        return String.format(\" D | %s | %s | by: %s\",","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"                getStatusIcon(),","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"                description,","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"                deadlineTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"jiahui0309":42}},{"path":"src/main/java/dino/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"/** Represents a Task with a deadline interval. */","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"     * Constructs a new Event task with the given description and deadline interval.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"     * @param description   The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"     * @param startTime  The start time of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"     * @param endTime The end time of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"     * Returns the start time of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"     * @return The start time.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"        return startTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"     * Returns the end time of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"     * @return The end time.","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"        return endTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"     * @return A formatted string representing the task\u0027s status, description, and deadline interval.","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"        return String.format(\" E | %s | %s | from: %s to: %s\",","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"                getStatusIcon(),","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"                description,","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"                startTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"                endTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"jiahui0309":54}},{"path":"src/main/java/dino/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"/** Represents a Task with a description and completion status. */","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"    protected String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"     * Returns the status icon indicating the completion status of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"     * @return \"1\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"     * Marks the task as done and prints the status icon and description.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"     * @return String representation.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"    public String markAsDone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"        return \"Good job on completing the task! I have checked it off the list.\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"                + getStatusIcon() + \" | \" + description + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"     * Marks the task as undone and prints the status icon and description.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"     * @return String representation.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"    public String markAsUndone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"        return \"Ah, I will mark it as undone. Remember to do it asap!\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"                + getStatusIcon() + \" | \" + description + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"     * Returns a boolean representation whether Task contains the keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"     * @param keyword String value input.","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"     * @return        True if description contains keyword, else False.","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jiahui0309"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jiahui0309"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jiahui0309"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jiahui0309"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"jiahui0309"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"jiahui0309"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"jiahui0309"},"content":"        return description;","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"jiahui0309":70}},{"path":"src/main/java/dino/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"/** Represents a Task without a deadline. */","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"     * Constructs a new ToDo task with the given description.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"     * @param description   The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"     * @return A formatted string representing the task\u0027s status, description.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"        return String.format(\" T | %s | %s\",","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"                getStatusIcon(),","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"                description);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"jiahui0309":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jiahui0309":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"            fx:controller\u003d\"dino.MainWindow\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jiahui0309":24}},{"path":"src/test/java/dino/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"import dino.Dino;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"import dino.Parser;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"    public void testCreateTaskFromInput() throws DinoException {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"        Parser parser \u003d new Parser(new TaskList());","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"        Task todoTask \u003d parser.createTaskFromInput(Dino.TaskType.TODO, \"Buy groceries\");","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"        assertEquals(\" T | 0 | Buy groceries\", todoTask.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"        Task deadlineTask \u003d parser.createTaskFromInput(Dino.TaskType.DEADLINE, \"Finish assignment /by 2022-02-28 1800\");","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"        assertEquals(\" D | 0 | Finish assignment | by: Feb 28 2022 18:00\", deadlineTask.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"        Task eventTask \u003d parser.createTaskFromInput(Dino.TaskType.EVENT,","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"                \"Birthday party /from 2022-03-01 1500 /to 2022-03-01 1800\");","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"        assertEquals(\" E | 0 | Birthday party | from: Mar 01 2022 15:00 to: Mar 01 2022 18:00\", eventTask.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"    public void testCreateTaskFromInputWithInvalidDeadlineFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"        String inputTaskDetails \u003d \"InvalidDeadlineFormat\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"        Dino.TaskType taskType \u003d Dino.TaskType.DEADLINE;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"        System.setIn(new java.io.ByteArrayInputStream(inputTaskDetails.getBytes()));","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"            Task createdTask \u003d Parser.createTaskFromInput(taskType, new Scanner(System.in).nextLine().trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"            fail(\"Expected DinoException, but no exception was thrown.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"        } catch (DinoException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"            System.setIn(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"            assertEquals(\"Invalid input format for deadline. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"                    + \"Please use: deadline \u003cdeadline name\u003e /by \u003ctime\u003e\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jiahui0309":52}},{"path":"src/test/java/dino/command/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"import dino.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"import dino.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"    private static final String TEST_FILE_PATH \u003d \"test_data/testFile.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"    public static void setUp() {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"        File directory \u003d new File(\"test_data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"    public void testLoadTasksFromFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"            createTestDataFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"            Storage storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"            TaskList loadedTaskList \u003d storage.loadTasksFromFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"            assertEquals(3, loadedTaskList.size());","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"            assertTrue(loadedTaskList.get(0) instanceof ToDo);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"            assertTrue(loadedTaskList.get(1) instanceof Deadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"            assertTrue(loadedTaskList.get(2) instanceof Event);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"    private void createTestDataFile() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"            file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jiahui0309"},"content":"        try (PrintStream printStream \u003d new PrintStream(new FileOutputStream(file))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jiahui0309"},"content":"            printStream.println(\" T | 0 | Read book\");","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"jiahui0309"},"content":"            printStream.println(\" D | 0 | Return book | by: Jan 01 2022 12:34\");","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jiahui0309"},"content":"            printStream.println(\" E | 0 | School | from: Jan 02 2022 12:00 to: Jan 03 2022 14:00\");","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jiahui0309":62}},{"path":"src/test/java/dino/command/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"import dino.DinoException;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"import dino.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jiahui0309"},"content":"import dino.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jiahui0309"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jiahui0309"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jiahui0309"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jiahui0309"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"jiahui0309"},"content":"    public void testNoConflictWhenAddingTodo() {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"jiahui0309"},"content":"        Task todo \u003d new Task(\"Finish tutorial\");","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"jiahui0309"},"content":"        assertFalse(taskList.isConflict(todo));","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"jiahui0309"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"jiahui0309"},"content":"    public void testNoConflictWhenAddingDeadline() {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"jiahui0309"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"jiahui0309"},"content":"        Deadline deadline \u003d new Deadline(\"Submit lab\", deadlineDateTime);","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"jiahui0309"},"content":"        assertFalse(taskList.isConflict(deadline));","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"jiahui0309"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"jiahui0309"},"content":"    public void testNoConflictWhenAddingEvent() {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"jiahui0309"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"jiahui0309"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.now().plusDays(2);","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"jiahui0309"},"content":"        Event event \u003d new Event(\"Team Project Meeting\", startDateTime, endDateTime);","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"jiahui0309"},"content":"        assertFalse(taskList.isConflict(event));","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"jiahui0309"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"jiahui0309"},"content":"    public void testConflictWhenAddingOverlappingEvent() {","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"jiahui0309"},"content":"        LocalDateTime startDateTime1 \u003d LocalDateTime.of(2024, 2, 10, 9, 0);","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"jiahui0309"},"content":"        LocalDateTime endDateTime1 \u003d LocalDateTime.of(2024, 2, 10, 12, 0);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"jiahui0309"},"content":"        LocalDateTime startDateTime2 \u003d LocalDateTime.of(2024, 2, 10, 11, 0);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"jiahui0309"},"content":"        LocalDateTime endDateTime2 \u003d LocalDateTime.of(2024, 2, 10, 15, 0);","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"jiahui0309"},"content":"        Event event1 \u003d new Event(\"School\", startDateTime1, endDateTime1);","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"jiahui0309"},"content":"        Event event2 \u003d new Event(\"Appointment\", startDateTime2, endDateTime2);","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"jiahui0309"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"jiahui0309"},"content":"            taskList.addTask(event1);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"jiahui0309"},"content":"        } catch (DinoException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"jiahui0309"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"jiahui0309"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"jiahui0309"},"content":"        assertTrue(taskList.isConflict(event2));","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":65}},{"path":"src/test/java/dino/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":"package dino.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jiahui0309"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jiahui0309"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jiahui0309"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jiahui0309"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jiahui0309"},"content":"    public void testToString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jiahui0309"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jiahui0309"},"content":"        assertEquals(\" T | 0 | Buy groceries\", todo.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jiahui0309"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jiahui0309"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jiahui0309":13}},{"path":"test_data/testFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiahui0309"},"content":" T | 0 | Read book","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jiahui0309"},"content":" D | 0 | Return book | by: Jan 01 2022 12:34","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jiahui0309"},"content":" E | 0 | School | from: Jan 02 2022 12:00 to: Jan 03 2022 14:00","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jiahui0309":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jiahui0309"},"content":"java -classpath ..\\bin Dino \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"jiahui0309":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jiahui0309"},"content":"java -classpath ../bin Dino \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"jiahui0309":1}}]
