[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Derekljh":2,"-":22}},{"path":"data/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"T | 1 |  return book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"D | 0 |  homework | Feb 01 2023 2359","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"E | 0 |  midterms | Mar 26 2023 1400 - Mar 26 2023 1600","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"T | 1 |  play games","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"D | 0 |  project | Apr 23 2023 1500","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"T | 0 |  clean room","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    private static final String FILE_PATH \u003d \"./data/taskList.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"            taskList \u003d new TaskList((storage.loadTasksFromFile()));","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"            ui.loadErrorMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"        while (true) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"                Parser.parseCommand(input, taskList, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"                storage.saveTasksToFile(taskList.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"            } catch (IOException | DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"                System.out.println(\"Sorry, Error occurred! Shutting down...\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        ui.goodByeMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"        new Duke(FILE_PATH).run();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Derekljh":41,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Derekljh":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    public Parser() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    public enum Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"        BYE, LIST, UNMARK, MARK, DELETE, TODO, DEADLINE, EVENT, UNKNOWN;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"        public static Command getCategory(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"                return Command.valueOf(input.toUpperCase());","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"                return UNKNOWN;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    public static void parseCommand(String input, TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"        Command category \u003d Command.getCategory(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"        int listSize \u003d taskList.getSize();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"        switch (category) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"            case BYE:","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"            case LIST:","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"                taskList.listTask(ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"                int unmarkId \u003d ui.readInt() - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"                if (unmarkId \u003c 0 || unmarkId \u003e\u003d listSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, please select a valid task for me to unmark!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"                taskList.unmarkTask(unmarkId, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"            case MARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"                int markId \u003d ui.readInt() - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"                if (markId \u003c 0 || markId \u003e\u003d listSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, please select a valid task for me to mark!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"                taskList.markTask(markId, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"            case DELETE:","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"                int deleteId \u003d ui.readInt() - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"                if (deleteId \u003c 0 || deleteId \u003e\u003d listSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, please select a valid task for me to delete!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"                taskList.deleteTask(deleteId, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"                ui.listSizeMessage(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"            case TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"                String toDoDescription \u003d ui.readCommandLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"                if (toDoDescription.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, please give me a description of the todo as well! \u003e.\u003c\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Derekljh"},"content":"                                + \"  \" + \"Format should be todo (description)!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Derekljh"},"content":"                ToDo toDo \u003d new ToDo(toDoDescription);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Derekljh"},"content":"                taskList.addTask(toDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Derekljh"},"content":"                ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Derekljh"},"content":"                System.out.println(\"  \" + toDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Derekljh"},"content":"                ui.listSizeMessage(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Derekljh"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Derekljh"},"content":"                String deadlineDescription \u003d ui.readCommandLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Derekljh"},"content":"                if (!deadlineDescription.contains(\" /by \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, please give me a description of the deadline as well! \u003e.\u003c\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Derekljh"},"content":"                                + \"  \"","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Derekljh"},"content":"                                + \"Format should be deadline (description) /by (yyyy-MM-dd HHmm!)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Derekljh"},"content":"                String[] deadlineArguments \u003d deadlineDescription.split(\" /by \");","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Derekljh"},"content":"                String DLDescription \u003d deadlineArguments[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Derekljh"},"content":"                String dateTime \u003d deadlineArguments[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Derekljh"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Derekljh"},"content":"                    Deadline deadline \u003d new Deadline(DLDescription, dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Derekljh"},"content":"                    taskList.addTask(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Derekljh"},"content":"                    ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(\"  \" + deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Derekljh"},"content":"                    ui.listSizeMessage(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Derekljh"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Derekljh"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(\"Sorry! Format should be deadline (description) /by (yyyy-MM-dd HHmm!)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Derekljh"},"content":"                    ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Derekljh"},"content":"                    return;","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Derekljh"},"content":"            case EVENT:","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Derekljh"},"content":"                String eventDescription \u003d ui.readCommandLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Derekljh"},"content":"                if (!eventDescription.contains(\" /from \") || !eventDescription.contains(\" /to \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, please give me a description of the event as well! \u003e.\u003c\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Derekljh"},"content":"                                + \"  \"","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Derekljh"},"content":"                                + \"Format should be event \"","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Derekljh"},"content":"                                + \"(description) /from (yyyy-MM-dd HHmm) /to (yyyy-MM-dd HHmm)!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"Derekljh"},"content":"                String[] eventArguments \u003d eventDescription.split(\" /from \");","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Derekljh"},"content":"                String[] eventDuration \u003d eventArguments[1].split(\" /to \");","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Derekljh"},"content":"                String EVDescription \u003d eventArguments[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"Derekljh"},"content":"                String startTime \u003d eventDuration[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Derekljh"},"content":"                String endTime \u003d eventDuration[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Derekljh"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Derekljh"},"content":"                    Event event \u003d new Event(EVDescription, startTime, endTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Derekljh"},"content":"                    taskList.addTask(event);","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Derekljh"},"content":"                    ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(\"  \" + event);","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"Derekljh"},"content":"                    ui.listSizeMessage(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"Derekljh"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Derekljh"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(\"  \"","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"Derekljh"},"content":"                            + \"Sorry! Format should be event \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"Derekljh"},"content":"                            \"(description) /from (yyyy-MM-dd HHmm) /to (yyyy-MM-dd HHmm)!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"Derekljh"},"content":"                    ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"Derekljh"},"content":"                    return;","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"Derekljh"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"Derekljh"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"Derekljh"},"content":"                    ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"Derekljh"},"content":"                    throw new DukeException(\"Sorry, I cannot understand what this is!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"Derekljh"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"Derekljh"},"content":"                    ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"Derekljh"},"content":"    public static Task parseCategoryFromFile(String taskCategory) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"Derekljh"},"content":"        String[] argument \u003d taskCategory.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"Derekljh"},"content":"        String category \u003d argument[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"Derekljh"},"content":"        String status \u003d argument[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"Derekljh"},"content":"        String description \u003d argument[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"Derekljh"},"content":"        Task task;","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"Derekljh"},"content":"        switch (category) {","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"Derekljh"},"content":"            case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"Derekljh"},"content":"                task \u003d new ToDo(status, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"Derekljh"},"content":"            case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"Derekljh"},"content":"                String by \u003d argument[3];","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"Derekljh"},"content":"                task \u003d new Deadline(status, description, by);","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"Derekljh"},"content":"            case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"Derekljh"},"content":"                String[] duration \u003d argument[3].split(\" - \");","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"Derekljh"},"content":"                String start \u003d duration[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"Derekljh"},"content":"                String end \u003d duration[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"Derekljh"},"content":"                task \u003d new Event(status, description, start, end);","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"Derekljh"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"Derekljh"},"content":"                throw new IOException(\"Error, unable to load task from file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"Derekljh"},"content":"        return task;","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":199}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    public Storage(String file) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"        this.FILE_PATH \u003d file;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"        String FILE_DIR \u003d \"./data\";","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"        File directory \u003d new File(FILE_DIR);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"            if (!directory.isDirectory()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"            Scanner fileSc \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"            while (fileSc.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"                String taskCategory \u003d fileSc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"                Task task \u003d Parser.parseCategoryFromFile(taskCategory);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"                taskList.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"            fileSc.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"            return taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"            throw new DukeException(\"Error, unable to load tasks from file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"        StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"            msg.append(task.toFile()).append(\"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"        fw.write(msg.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"        fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":56}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"    public void deleteTask(int deleteId, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"        ui.deleteMessage(taskList.get(deleteId));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        taskList.remove(deleteId);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    public void unmarkTask(int unmarkId, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"        taskList.get(unmarkId).markNotDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"        ui.unmarkMessage(taskList.get(unmarkId));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"    public void markTask(int markId, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"        taskList.get(markId).markDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"        ui.markMessage(taskList.get(markId));","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"    public void listTask(Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"  Sorry, Tasklist is empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"  \" + \"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"                Task currTask \u003d taskList.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"                System.out.println(\"  \" + (i + 1) + \".\" + currTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":60}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    static String name \u003d \"Lunaris\";","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    static String indentedLine \u003d \"  _________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    public Ui() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    public void setIndentedLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"        System.out.println(indentedLine);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" + \"Hey! I\u0027m \" + name + \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"                \"  \" + \"Is there anything I can do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    public void goodByeMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"                \"Leaving so soon? Alright, have a great day ahead!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"    public void loadErrorMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"                \"Error loading file... Creating new empty file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"    public void unmarkMessage(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" + \"Ok, I\u0027ve marked this task \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"                \"as not done yet:\" + \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"                \"  \" + task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"    public void markMessage(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" + \"Ok, I\u0027ve marked this task \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"                \"as done:\" + \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"                \"  \" + task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"    public void deleteMessage(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" + \"Noted. I\u0027ve removed this task:\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"                \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"                \"  \" + task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"    public void listSizeMessage(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"                \"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"    public String readCommandLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"        return scanner.next();","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"    public int readInt() {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"        return scanner.nextInt();","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":82}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    // code snippet below inspired from:","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    // https://stackoverflow.com/questions/44600420/datetimeformatter-accepting-multiple-dates-and-converting-to-one-java-time-libr","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    protected DateTimeFormatter parser \u003d DateTimeFormatter.ofPattern(\"[yyyy-MM-dd HHmm][MMM dd yyyy HHmm]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"        this.dateTime \u003d LocalDateTime.parse(by, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    public Deadline(String status, String description, String by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"        super(status.equals(\"1\"), description);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"        this.dateTime \u003d LocalDateTime.parse(by, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"    public String dateTimeFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"        return this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"    public String toFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\")","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"                + \" | \" + description + \" | \" + this.dateTimeFormat();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"                + \" (by: \" + this.dateTimeFormat() + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"    protected String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    // code snippet below inspired from:","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    // https://stackoverflow.com/questions/44600420/datetimeformatter-accepting-multiple-dates-and-converting-to-one-java-time-libr","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    protected DateTimeFormatter parser \u003d DateTimeFormatter.ofPattern(\"[yyyy-MM-dd HHmm][MMM dd yyyy HHmm]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"        this.startDateTime \u003d LocalDateTime.parse(start, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"        this.endDateTime \u003d LocalDateTime.parse(end, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"    public Event(String status, String description, String start, String end) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"        super(status.equals(\"1\"), description);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"        this.startDateTime \u003d LocalDateTime.parse(start, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"        this.endDateTime \u003d LocalDateTime.parse(end, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"    public String startDateTimeFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"        return this.startDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    public String endDateTimeFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"        return this.endDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"    public String toFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"                + \" | \" + this.startDateTimeFormat() + \" - \" + this.endDateTimeFormat();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"                + \" (from: \" + this.startDateTimeFormat()","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"                + \" to: \" + this.endDateTimeFormat() + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"    // Method to mark whether task is done or not.","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"    // Mark done.","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    // Unmark.","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"    public String toFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"        return \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":40}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    public ToDo(String status, String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"        super(status.equals(\"1\"), description);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    public String toFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":21}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    public void deadlineTestFile() {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"        assertEquals(new Deadline(\"0\", \"homework\", \"2023-02-01 2359\").toFile(),","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"                \"D | 0 |  homework | Feb 01 2023 2359\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    public void deadlineTestString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"        assertEquals(new Deadline(\"0\", \"homework\", \"2023-02-01 2359\").toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"                \"[D][ ]  homework (by: Feb 01 2023 2359)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":19}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    public void toDoTestFile() {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"        assertEquals(new ToDo(\"1\", \"return book\").toFile(), \"T | 1 |  return book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    public void toDoTestString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"        assertEquals(new ToDo(\"return book\").toString(), \"[T][ ]  return book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Derekljh":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Derekljh":1,"-":20}}]
