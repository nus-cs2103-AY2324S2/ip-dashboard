[{"path":"src/main/java/Barry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShanylOng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"ShanylOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"ShanylOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"ShanylOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"ShanylOng"},"content":"public class Barry {","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"ShanylOng"},"content":"    // A class for elements in the taskList, with a name and an indicator of whether the task is marked","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"ShanylOng"},"content":"    private abstract static class Task{","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"ShanylOng"},"content":"        private final String taskType;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"ShanylOng"},"content":"        private final String taskName;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"ShanylOng"},"content":"        private boolean isDone;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ShanylOng"},"content":"        // Constructor for the Task class, initialised with the name of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"ShanylOng"},"content":"        public Task(String name, String type) {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"ShanylOng"},"content":"            this.taskType \u003d type;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"ShanylOng"},"content":"            this.taskName \u003d name;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"ShanylOng"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ShanylOng"},"content":"        // Allows the user to modify the status of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ShanylOng"},"content":"        public void modifyStatus(boolean status) {","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ShanylOng"},"content":"            this.isDone \u003d status;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"ShanylOng"},"content":"        // Returns the name of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"ShanylOng"},"content":"        public final String getName() {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"ShanylOng"},"content":"            return this.taskName;","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"ShanylOng"},"content":"        // Returns the status of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"ShanylOng"},"content":"        public final boolean getStatus() {","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"ShanylOng"},"content":"            return this.isDone;","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"ShanylOng"},"content":"        // Returns the type of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"ShanylOng"},"content":"        public final String getTaskType() { return this.taskType; }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"ShanylOng"},"content":"        // Returns details about the relevant timings of the task, to be defined in the subclasses","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"ShanylOng"},"content":"        abstract public String detailsAsString();","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ShanylOng"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"ShanylOng"},"content":"    // A class that inherits from the Task class, for creating ToDos","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"ShanylOng"},"content":"    // (tasks without any date/time attached to them)","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"ShanylOng"},"content":"    private static class ToDo extends Task {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"ShanylOng"},"content":"        // Constructor for ToDos, initialised with the name of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"ShanylOng"},"content":"        public ToDo(String name) {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"ShanylOng"},"content":"            super(name, \"T\");","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"ShanylOng"},"content":"        // Method which returns details of the object as a String","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"ShanylOng"},"content":"        @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"ShanylOng"},"content":"        public final String detailsAsString() {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"ShanylOng"},"content":"            return \"[T][\" + (this.getStatus() ? \"X\" : \" \") + \"] \" + this.getName();","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"ShanylOng"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"ShanylOng"},"content":"    // A class that inherits from the Task class, for creating Deadlines","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"ShanylOng"},"content":"    // (tasks that need to be done before a specific date/time)","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"ShanylOng"},"content":"    private static class Deadline extends Task {","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"ShanylOng"},"content":"        private final String deadlineDateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"ShanylOng"},"content":"        // Constructor for Deadlines, initialised with the name of the task and the deadline","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"ShanylOng"},"content":"        public Deadline(String name, String deadline) {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"ShanylOng"},"content":"            super(name, \"D\");","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"ShanylOng"},"content":"            this.deadlineDateTime \u003d deadline;","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"ShanylOng"},"content":"        // Method which returns details of the object as a String","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"ShanylOng"},"content":"        @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"ShanylOng"},"content":"        public final String detailsAsString() {","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"ShanylOng"},"content":"            String basicInfo \u003d \"[D][\" + (this.getStatus() ? \"X\" : \" \") + \"] \" + this.getName();","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"ShanylOng"},"content":"            return basicInfo + \" (by: \" + deadlineDateTime + \")\";","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"ShanylOng"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"ShanylOng"},"content":"    // A class that inherits from the Task class, for creating Events","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"ShanylOng"},"content":"    // (tasks that start and end at a specific date/time)","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"ShanylOng"},"content":"    private static class Event extends Task {","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"ShanylOng"},"content":"        private final String eventStartDateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"ShanylOng"},"content":"        private final String eventEndDateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"ShanylOng"},"content":"        // Constructor for Events, initialised with the name of the task, as well as the start and end of the event","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"ShanylOng"},"content":"        public Event(String name, String start, String end) {","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"ShanylOng"},"content":"            super(name, \"E\");","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"ShanylOng"},"content":"            this.eventStartDateTime \u003d start;","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"ShanylOng"},"content":"            this.eventEndDateTime \u003d end;","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"ShanylOng"},"content":"        // Method which returns details of the object as a String","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"ShanylOng"},"content":"        @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"ShanylOng"},"content":"        public final String detailsAsString() {","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"ShanylOng"},"content":"            String basicInfo \u003d \"[E][\" + (this.getStatus() ? \"X\" : \" \") + \"] \" + this.getName();","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"ShanylOng"},"content":"            return basicInfo + \" (from: \" + eventStartDateTime + \" to: \" + eventEndDateTime + \")\";","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"ShanylOng"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"ShanylOng"},"content":"    // ArrayList for storing user-added tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"ShanylOng"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"ShanylOng"},"content":"    // Greets the user","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"ShanylOng"},"content":"    private static void greet() {","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t Greetings! I\u0027m Barry.\\n\" + \"\\t How could I assist you?\");","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t [Type help for a list of available commands]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"ShanylOng"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"ShanylOng"},"content":"    // Exits the program with a message","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"ShanylOng"},"content":"    private static void exit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t Bye, see you next time! :)\");","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"ShanylOng"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"ShanylOng"},"content":"    // List all available commands","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"ShanylOng"},"content":"    private static void help() {","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t Here\u0027s a list of available commands:\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t   help                                           List all available commands\");","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t   bye                                            Quit\");","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t   list                                           List all tasks in your list\");","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t   mark [x]                                       Mark task number x in your list\");","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t   unmark [x]                                     Unmark task number x in your list\");","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t   todo [task name]                               Add a ToDo to your list\");","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t   deadline [task name] /by [deadline]            Add a Deadline to your list\");","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t   event [task name] /from [start] /to [end]      Add an Event to your list\");","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"ShanylOng"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"ShanylOng"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"ShanylOng"},"content":"    // Task list mode, allows user to enter tasks into a list, and print all tasks in the list","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"ShanylOng"},"content":"    // currently with \"list\", exits with \"bye\"","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"ShanylOng"},"content":"    private static void taskListMode() {","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"ShanylOng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"ShanylOng"},"content":"        final Pattern markPattern \u003d Pattern.compile(\"^mark\\\\s(\\\\d+)$\");","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"ShanylOng"},"content":"        final Pattern unmarkPattern \u003d Pattern.compile(\"^unmark\\\\s(\\\\d+)$\");","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"ShanylOng"},"content":"        final Pattern todoPattern \u003d Pattern.compile(\"^todo\\\\s(.+)$\");","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"ShanylOng"},"content":"        final Pattern deadlinePattern \u003d Pattern.compile(\"^deadline\\\\s(.+)\\\\s/by\\\\s(.+)$\");","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"ShanylOng"},"content":"        final Pattern eventPattern \u003d Pattern.compile(\"^event\\\\s(.+)\\\\s/from\\\\s(.+)\\\\s/to\\\\s(.+)$\");","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"ShanylOng"},"content":"        // Execution loop","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"ShanylOng"},"content":"        while (true) {","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"ShanylOng"},"content":"            // Command line input, stripped of whitespaces","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"ShanylOng"},"content":"            String inputText \u003d scanner.nextLine().strip();","lastModifiedDate":"2024-02-11"},{"lineNumber":144,"author":{"gitId":"ShanylOng"},"content":"            if (inputText.equals(\"bye\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":145,"author":{"gitId":"ShanylOng"},"content":"                // Exit task list mode","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"ShanylOng"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"ShanylOng"},"content":"            } else if (inputText.equals(\"help\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"ShanylOng"},"content":"                // List all available commands","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"ShanylOng"},"content":"                help();","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"ShanylOng"},"content":"            } else if (inputText.equals(\"list\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"ShanylOng"},"content":"                // List all tasks in taskList currently, or return a message indicating that there are none","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"ShanylOng"},"content":"                int taskListSize \u003d taskList.size();","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"ShanylOng"},"content":"                if (taskListSize \u003d\u003d 0) {","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"ShanylOng"},"content":"                    // List is empty","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t Looks like there aren\u0027t any tasks in your list yet... let\u0027s add some!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":157,"author":{"gitId":"ShanylOng"},"content":"                } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"ShanylOng"},"content":"                    // List has items","lastModifiedDate":"2024-02-11"},{"lineNumber":159,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t Let\u0027s take a look at the tasks in your list:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":160,"author":{"gitId":"ShanylOng"},"content":"                    // Print list of tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"ShanylOng"},"content":"                    for (int i \u003d 0; i \u003c taskListSize; i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":162,"author":{"gitId":"ShanylOng"},"content":"                        Task task \u003d taskList.get(i);","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"ShanylOng"},"content":"                        System.out.println(\"\\t \" + (i + 1) + \".\" + task.detailsAsString());","lastModifiedDate":"2024-02-11"},{"lineNumber":164,"author":{"gitId":"ShanylOng"},"content":"                    }","lastModifiedDate":"2024-02-11"},{"lineNumber":165,"author":{"gitId":"ShanylOng"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":166,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"ShanylOng"},"content":"            } else if (inputText.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":168,"author":{"gitId":"ShanylOng"},"content":"                // Mark indicated task","lastModifiedDate":"2024-02-11"},{"lineNumber":169,"author":{"gitId":"ShanylOng"},"content":"                Matcher markMatcher \u003d markPattern.matcher(inputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"ShanylOng"},"content":"                if (markMatcher.matches()){","lastModifiedDate":"2024-02-11"},{"lineNumber":172,"author":{"gitId":"ShanylOng"},"content":"                    // Valid format","lastModifiedDate":"2024-02-11"},{"lineNumber":173,"author":{"gitId":"ShanylOng"},"content":"                    int taskIndex \u003d Integer.parseInt(markMatcher.group(1)) - 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":174,"author":{"gitId":"ShanylOng"},"content":"                    try {","lastModifiedDate":"2024-02-11"},{"lineNumber":175,"author":{"gitId":"ShanylOng"},"content":"                        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"ShanylOng"},"content":"                        if (!task.getStatus()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"ShanylOng"},"content":"                            task.modifyStatus(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"ShanylOng"},"content":"                            System.out.println(\"\\t Nice, I have marked this task as done:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"ShanylOng"},"content":"                            System.out.println(\"\\t   [\" + task.getTaskType() + \"][X] \" + task.getName());","lastModifiedDate":"2024-02-11"},{"lineNumber":180,"author":{"gitId":"ShanylOng"},"content":"                            System.out.println(\"\\t Great job! :)\");","lastModifiedDate":"2024-02-11"},{"lineNumber":181,"author":{"gitId":"ShanylOng"},"content":"                        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":182,"author":{"gitId":"ShanylOng"},"content":"                            System.out.println(\"\\t Looks like this task was already marked...\");","lastModifiedDate":"2024-02-11"},{"lineNumber":183,"author":{"gitId":"ShanylOng"},"content":"                            System.out.println(\"\\t [In order to unmark a task, use the \u0027unmark\u0027 command instead]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":184,"author":{"gitId":"ShanylOng"},"content":"                        }","lastModifiedDate":"2024-02-11"},{"lineNumber":185,"author":{"gitId":"ShanylOng"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"ShanylOng"},"content":"                        // Task number is out of range","lastModifiedDate":"2024-02-11"},{"lineNumber":187,"author":{"gitId":"ShanylOng"},"content":"                        System.out.println(\"\\t Oops, I can\u0027t find a task in your list with that number! :(\");","lastModifiedDate":"2024-02-11"},{"lineNumber":188,"author":{"gitId":"ShanylOng"},"content":"                        System.out.println(\"\\t [Make sure the task number is correct and try again]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":189,"author":{"gitId":"ShanylOng"},"content":"                    }","lastModifiedDate":"2024-02-11"},{"lineNumber":190,"author":{"gitId":"ShanylOng"},"content":"                } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":191,"author":{"gitId":"ShanylOng"},"content":"                    // Invalid format","lastModifiedDate":"2024-02-11"},{"lineNumber":192,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t I see you\u0027re trying to mark a task, but it\u0027s in the wrong format...\");","lastModifiedDate":"2024-02-11"},{"lineNumber":193,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t [Type \u0027help\u0027 if you\u0027re unsure of the correct format]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":194,"author":{"gitId":"ShanylOng"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":195,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":196,"author":{"gitId":"ShanylOng"},"content":"            } else if (inputText.startsWith(\"unmark\")){","lastModifiedDate":"2024-02-11"},{"lineNumber":197,"author":{"gitId":"ShanylOng"},"content":"                // Unmark indicated task","lastModifiedDate":"2024-02-11"},{"lineNumber":198,"author":{"gitId":"ShanylOng"},"content":"                Matcher unmarkMatcher \u003d unmarkPattern.matcher(inputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":199,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":200,"author":{"gitId":"ShanylOng"},"content":"                if (unmarkMatcher.matches()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":201,"author":{"gitId":"ShanylOng"},"content":"                    // Valid format","lastModifiedDate":"2024-02-11"},{"lineNumber":202,"author":{"gitId":"ShanylOng"},"content":"                    int taskIndex \u003d Integer.parseInt(unmarkMatcher.group(1)) - 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":203,"author":{"gitId":"ShanylOng"},"content":"                    try {","lastModifiedDate":"2024-02-11"},{"lineNumber":204,"author":{"gitId":"ShanylOng"},"content":"                        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-02-11"},{"lineNumber":205,"author":{"gitId":"ShanylOng"},"content":"                        if (task.getStatus()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":206,"author":{"gitId":"ShanylOng"},"content":"                            task.modifyStatus(false);","lastModifiedDate":"2024-02-11"},{"lineNumber":207,"author":{"gitId":"ShanylOng"},"content":"                            System.out.println(\"\\t Alright, i have marked this task as not done yet:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":208,"author":{"gitId":"ShanylOng"},"content":"                            System.out.println(\"\\t   [\" + task.getTaskType() + \"][ ] \" + task.getName());","lastModifiedDate":"2024-02-11"},{"lineNumber":209,"author":{"gitId":"ShanylOng"},"content":"                        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":210,"author":{"gitId":"ShanylOng"},"content":"                            System.out.println(\"\\t Looks like this task was already unmarked...\");","lastModifiedDate":"2024-02-11"},{"lineNumber":211,"author":{"gitId":"ShanylOng"},"content":"                            System.out.println(\"\\t [In order to mark a task, use the \u0027mark\u0027 command instead]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":212,"author":{"gitId":"ShanylOng"},"content":"                        }","lastModifiedDate":"2024-02-11"},{"lineNumber":213,"author":{"gitId":"ShanylOng"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":214,"author":{"gitId":"ShanylOng"},"content":"                        // Task number is out of range","lastModifiedDate":"2024-02-11"},{"lineNumber":215,"author":{"gitId":"ShanylOng"},"content":"                        System.out.println(\"\\t Oops, I can\u0027t find a task in your list with that number! :(\");","lastModifiedDate":"2024-02-11"},{"lineNumber":216,"author":{"gitId":"ShanylOng"},"content":"                        System.out.println(\"\\t [Make sure the task number is correct and try again]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":217,"author":{"gitId":"ShanylOng"},"content":"                    }","lastModifiedDate":"2024-02-11"},{"lineNumber":218,"author":{"gitId":"ShanylOng"},"content":"                } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":219,"author":{"gitId":"ShanylOng"},"content":"                    // Invalid format","lastModifiedDate":"2024-02-11"},{"lineNumber":220,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t I see you\u0027re trying to unmark a task, but it\u0027s in the wrong format...\");","lastModifiedDate":"2024-02-11"},{"lineNumber":221,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t [Type \u0027help\u0027 if you\u0027re unsure of the correct format]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":222,"author":{"gitId":"ShanylOng"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":223,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":224,"author":{"gitId":"ShanylOng"},"content":"            } else if (inputText.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":225,"author":{"gitId":"ShanylOng"},"content":"                // ToDos","lastModifiedDate":"2024-02-11"},{"lineNumber":226,"author":{"gitId":"ShanylOng"},"content":"                Matcher todoMatcher \u003d todoPattern.matcher(inputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":227,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":228,"author":{"gitId":"ShanylOng"},"content":"                if (todoMatcher.matches()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":229,"author":{"gitId":"ShanylOng"},"content":"                    // Valid format","lastModifiedDate":"2024-02-11"},{"lineNumber":230,"author":{"gitId":"ShanylOng"},"content":"                    String todoName \u003d todoMatcher.group(1);","lastModifiedDate":"2024-02-11"},{"lineNumber":231,"author":{"gitId":"ShanylOng"},"content":"                    taskList.add(new ToDo(todoName));","lastModifiedDate":"2024-02-11"},{"lineNumber":232,"author":{"gitId":"ShanylOng"},"content":"                    int listSize \u003d taskList.size();","lastModifiedDate":"2024-02-11"},{"lineNumber":233,"author":{"gitId":"ShanylOng"},"content":"                    String plural \u003d listSize \u003e 1 ? \"s\" : \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":234,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t Gotcha, i\u0027ve added the ToDo:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":235,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t   [T][ ] \" + todoName);","lastModifiedDate":"2024-02-11"},{"lineNumber":236,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t You\u0027ve now got \" + listSize + \" task\" + plural + \" in your list!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":237,"author":{"gitId":"ShanylOng"},"content":"                } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":238,"author":{"gitId":"ShanylOng"},"content":"                    // Invalid format","lastModifiedDate":"2024-02-11"},{"lineNumber":239,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t I see you\u0027re trying to add a ToDo, but it\u0027s in the wrong format...\");","lastModifiedDate":"2024-02-11"},{"lineNumber":240,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t [Type \u0027help\u0027 if you\u0027re unsure of the correct format]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":241,"author":{"gitId":"ShanylOng"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":242,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":243,"author":{"gitId":"ShanylOng"},"content":"            } else if (inputText.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":244,"author":{"gitId":"ShanylOng"},"content":"                // Deadlines","lastModifiedDate":"2024-02-11"},{"lineNumber":245,"author":{"gitId":"ShanylOng"},"content":"                Matcher deadlineMatcher \u003d deadlinePattern.matcher(inputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":246,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":247,"author":{"gitId":"ShanylOng"},"content":"                if (deadlineMatcher.matches()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":248,"author":{"gitId":"ShanylOng"},"content":"                    // Valid format","lastModifiedDate":"2024-02-11"},{"lineNumber":249,"author":{"gitId":"ShanylOng"},"content":"                    String deadlineName \u003d deadlineMatcher.group(1);","lastModifiedDate":"2024-02-11"},{"lineNumber":250,"author":{"gitId":"ShanylOng"},"content":"                    String deadlineDateTime \u003d deadlineMatcher.group(2);","lastModifiedDate":"2024-02-11"},{"lineNumber":251,"author":{"gitId":"ShanylOng"},"content":"                    taskList.add(new Deadline(deadlineName, deadlineDateTime));","lastModifiedDate":"2024-02-11"},{"lineNumber":252,"author":{"gitId":"ShanylOng"},"content":"                    int listSize \u003d taskList.size();","lastModifiedDate":"2024-02-11"},{"lineNumber":253,"author":{"gitId":"ShanylOng"},"content":"                    String plural \u003d listSize \u003e 1 ? \"s\" : \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":254,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t Gotcha, i\u0027ve added the Deadline:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":255,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t   [D][ ] \" + deadlineName);","lastModifiedDate":"2024-02-11"},{"lineNumber":256,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t You\u0027ve now got \" + listSize + \" task\" + plural + \" in your list!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":257,"author":{"gitId":"ShanylOng"},"content":"                } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":258,"author":{"gitId":"ShanylOng"},"content":"                    // Invalid format","lastModifiedDate":"2024-02-11"},{"lineNumber":259,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t I see you\u0027re trying to add a Deadline, but it\u0027s in the wrong format...\");","lastModifiedDate":"2024-02-11"},{"lineNumber":260,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t [Type \u0027help\u0027 if you\u0027re unsure of the correct format]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":261,"author":{"gitId":"ShanylOng"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":262,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":263,"author":{"gitId":"ShanylOng"},"content":"            } else if (inputText.startsWith(\"event\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":264,"author":{"gitId":"ShanylOng"},"content":"                // Events","lastModifiedDate":"2024-02-11"},{"lineNumber":265,"author":{"gitId":"ShanylOng"},"content":"                Matcher eventMatcher \u003d eventPattern.matcher(inputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":266,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":267,"author":{"gitId":"ShanylOng"},"content":"                if (eventMatcher.matches()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":268,"author":{"gitId":"ShanylOng"},"content":"                    // Valid format","lastModifiedDate":"2024-02-11"},{"lineNumber":269,"author":{"gitId":"ShanylOng"},"content":"                    String eventName \u003d eventMatcher.group(1);","lastModifiedDate":"2024-02-11"},{"lineNumber":270,"author":{"gitId":"ShanylOng"},"content":"                    String eventStartDateTime \u003d eventMatcher.group(2);","lastModifiedDate":"2024-02-11"},{"lineNumber":271,"author":{"gitId":"ShanylOng"},"content":"                    String eventEndDateTime \u003d eventMatcher.group(3);","lastModifiedDate":"2024-02-11"},{"lineNumber":272,"author":{"gitId":"ShanylOng"},"content":"                    taskList.add(new Event(eventName, eventStartDateTime, eventEndDateTime));","lastModifiedDate":"2024-02-11"},{"lineNumber":273,"author":{"gitId":"ShanylOng"},"content":"                    int listSize \u003d taskList.size();","lastModifiedDate":"2024-02-11"},{"lineNumber":274,"author":{"gitId":"ShanylOng"},"content":"                    String plural \u003d listSize \u003e 1 ? \"s\" : \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":275,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t Gotcha, i\u0027ve added the Event:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":276,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t   [E][ ] \" + eventName);","lastModifiedDate":"2024-02-11"},{"lineNumber":277,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t You\u0027ve now got \" + listSize + \" task\" + plural + \" in your list!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":278,"author":{"gitId":"ShanylOng"},"content":"                } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":279,"author":{"gitId":"ShanylOng"},"content":"                    // Invalid format","lastModifiedDate":"2024-02-11"},{"lineNumber":280,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t I see you\u0027re trying to add an Event, but it\u0027s in the wrong format...\");","lastModifiedDate":"2024-02-11"},{"lineNumber":281,"author":{"gitId":"ShanylOng"},"content":"                    System.out.println(\"\\t [Type \u0027help\u0027 if you\u0027re unsure of the correct format]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":282,"author":{"gitId":"ShanylOng"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":283,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":284,"author":{"gitId":"ShanylOng"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":285,"author":{"gitId":"ShanylOng"},"content":"                // No such command","lastModifiedDate":"2024-02-11"},{"lineNumber":286,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-11"},{"lineNumber":287,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t I\u0027m sorry, I don\u0027t understand what that means... \u003e_\u003c\");","lastModifiedDate":"2024-02-11"},{"lineNumber":288,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t [Type \u0027help\u0027 for a list of available commands]\");","lastModifiedDate":"2024-02-11"},{"lineNumber":289,"author":{"gitId":"ShanylOng"},"content":"                System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":290,"author":{"gitId":"ShanylOng"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":291,"author":{"gitId":"ShanylOng"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":292,"author":{"gitId":"ShanylOng"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":293,"author":{"gitId":"ShanylOng"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":294,"author":{"gitId":"ShanylOng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":295,"author":{"gitId":"ShanylOng"},"content":"        greet();","lastModifiedDate":"2024-02-11"},{"lineNumber":296,"author":{"gitId":"ShanylOng"},"content":"        taskListMode();","lastModifiedDate":"2024-02-11"},{"lineNumber":297,"author":{"gitId":"ShanylOng"},"content":"        exit();","lastModifiedDate":"2024-02-11"},{"lineNumber":298,"author":{"gitId":"ShanylOng"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":299,"author":{"gitId":"ShanylOng"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ShanylOng":299}}]
