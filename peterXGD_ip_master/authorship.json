[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"# venus project template","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"3. After that, locate the `src/main/java/venus.java` file, right-click it, and choose `Run venus.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peterXGD":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    mainClass.set(\"venus.Venus\")","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"run {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"peterXGD":5,"-":41}},{"path":"data/venus.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"T|1| apple","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"T|0| orange","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"T|0| apple","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"D|0| 360 | Oct 15 2019","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"T|1| 350","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"E|1| sm3 | Jan 1 2019 to: Jan 2 2019","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"D|1| 222 | Oct 2 2020","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"D|0| 2222 | Oct 10 2019","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"E|0| 2222 | Oct 10 2020 to: Oct 10 2020","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"peterXGD":10}},{"path":"src/main/java/venus/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"    private LocalDate deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"    public Deadline(String s, String deadline){","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        this.deadline \u003d TimeFormatter.stringToTime(deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    public Deadline(String s, boolean mark, String deadline) throws DateTimeParseException { //constructor used for loading","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"        this.deadline \u003d TimeFormatter.loadTimeFromString(deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"        if (mark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"            this.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"            this.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    public String toString(){","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        String X \u003d this.getMark() ? \"X\" : \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"        return \"[D]\"+\"[\" + X + \"] \" + this.getItem()","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"                + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":28}},{"path":"src/main/java/venus/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"    //nothing here at the moment","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"    public DukeException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"        super(\"This is a duke exception of unknown cause.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"    public DukeException(String s){","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":11}},{"path":"src/main/java/venus/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"    private LocalDate start;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"    private LocalDate end;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"    public Event (String s, String start, String end){","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"        this.start \u003d TimeFormatter.stringToTime(start.substring(4).trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        this.end \u003d TimeFormatter.stringToTime(end.substring((2)).trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    public Event (String s, boolean mark, String start, String end, boolean dummy){ //constructor used for loading","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"        this.start \u003d TimeFormatter.loadTimeFromString(start.trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"        this.end \u003d TimeFormatter.loadTimeFromString(end.trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        if (mark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"            this.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"            this.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    public String toString(){","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"        String X \u003d this.getMark() ? \"X\" : \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        return \"[E]\"+\"[\" + X + \"] \" + this.getItem()","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"                + \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"                + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":30}},{"path":"src/main/java/venus/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"    public static TaskList.TYPES findType(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"        String[] listType \u003d input.toUpperCase().split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"        TaskList.TYPES type \u003d TaskList.TYPES.valueOf(listType[0]);","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"        ;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"        if (listType.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"            type \u003d TaskList.TYPES.ALL;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        return type;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    public static int findMarkIndex(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"        return Integer.valueOf(input.substring(5)) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    public static int findUnmarkIndex(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"        return Integer.valueOf(input.substring(7)) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    public static String findTodoContent(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        return input.substring(5);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    public static String[] findDeadlineContent(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        String dString \u003d input.substring(9);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        String[] parts \u003d dString.split(\"/by\");","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"            throw new DukeException(\"Incorrect, choose a specific deadline only please\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"        parts[0] \u003d parts[0].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"        parts[1] \u003d parts[1].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"        return parts;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"    public static String[] findEventParts(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"        String dString \u003d input.substring(6);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"        String[] parts \u003d dString.split(\"/\");","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"            throw new DukeException(\"Incorrect arguments for events\");","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        for (int j \u003d 0; j \u003c 3; j++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"            parts[j] \u003d parts[j].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"        return parts;","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"    public static int findDeleteIndex(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"        return Integer.valueOf(input.substring(7)) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"peterXGD":51}},{"path":"src/main/java/venus/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    private String filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"        File folder \u003d new File (filePath.split(\"/\")[0]);","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        if (!folder.exists()) { //handling folder does not exist issues","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"            folder.mkdir();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"            System.out.println(\"Folder does not exist, data folder is created\");","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        if (!Files.exists(Path.of(\"data/venus.txt\"))) { //handling file does not exist","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"            File f \u003d new File(\"data/venus.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"    public void saveToFile(String textToAdd) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"            String amendedText \u003d textToAdd.replaceAll(\"\\\\[\\\\s\\\\]\", \"|0|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"                    .replaceAll(\"\\\\[X\\\\]\", \"|1|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"                    .replaceAll(\"\\\\[\", \"\")","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"                    .replaceAll(\"\\\\]\", \"\")","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"                    .replaceAll(\"\\\\(by:\", \"|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"                    .replaceAll(\"\\\\)\", \"\")","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"                    .replaceAll(\"\\\\(from:\", \"|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"                    .replaceAll(\"\\\\(to:\", \"|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"                    .trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"            fw.write(System.lineSeparator() + amendedText);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"            fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"    public void saveAllFile(ArrayList\u003cTask\u003e data) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"            f.delete();","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"            f.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"            for (Task d : data) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"                String amendedText \u003d d.toString().replaceAll(\"\\\\[\\\\s\\\\]\", \"|0|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"                        .replaceAll(\"\\\\[X\\\\]\", \"|1|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"                        .replaceAll(\"\\\\[\", \"\")","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"                        .replaceAll(\"\\\\]\", \"\")","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"                        .replaceAll(\"\\\\(by:\", \"|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"                        .replaceAll(\"\\\\)\", \"\")","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"                        .replaceAll(\"\\\\(from:\", \"|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"                        .replaceAll(\"\\\\(to:\", \"|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"                        .trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"                fw.write(System.lineSeparator() + amendedText);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"            fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"    public void loadFile(ArrayList\u003cTask\u003e ls) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"            File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"peterXGD"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"                String[] items \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"                String type \u003d items[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"                if (items.length \u003d\u003d 1) { //this is to handle the blank spaces","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"                    continue;","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"                    boolean b \u003d Integer.parseInt(items[1].trim()) \u003d\u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"                    ls.add(new TODO(items[2].trim(), b));","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"                    boolean b \u003d Integer.parseInt(items[1].trim()) \u003d\u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"                    ls.add(new Deadline(items[2].trim(), b, items[3].trim()));","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"peterXGD"},"content":"                    boolean b \u003d Integer.parseInt(items[1].trim()) \u003d\u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"peterXGD"},"content":"                    String[] times \u003d items[3].split(\"to:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"peterXGD"},"content":"                    ls.add(new Event(items[2].trim(), b, times[0].trim(), times[1].trim(), true));","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"peterXGD"},"content":"                } else { //continue if file is corrupted or at the first line","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"peterXGD"},"content":"                    continue;","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"peterXGD"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"peterXGD"},"content":"            Ui.formatResponse(\"File is not found! \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"peterXGD"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"peterXGD"},"content":"            Ui.formatResponse(\"Invalid date time input or format, please try again\");","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"peterXGD":102}},{"path":"src/main/java/venus/TODO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"public class TODO extends Task{","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"    public TODO (String s) {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"    public TODO (String s, boolean mark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"        if (mark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"            this.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"            this.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"        String X \u003d this.getMark() ? \"X\" : \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        return (\"[T]\"+\"[\" + X + \"] \" + this.getItem());","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":19}},{"path":"src/main/java/venus/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"    private String item;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"    private boolean mark;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"    public Task(String item){","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"        super();","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"        this.mark \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"        this.item \u003d item;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"    public void mark(){","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"        this.mark \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    public void unmark(){","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"        this.mark \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    public boolean getMark(){","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"        return mark;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    public String getItem(){","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        return item;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    public String toString(){","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        String X \u003d mark ? \"X\" : \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        return (\"[\" + X + \"] \" + item);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":29}},{"path":"src/main/java/venus/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"    public enum TYPES { //Used for type of list encountered","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"        LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, ALL, INVALID;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    public TaskList () {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    public void loadTasks(Storage storage) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        storage.loadFile(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    public void saveTasks(Storage storage) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        storage.saveAllFile(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    public void setTasks(String word) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"        ArrayList\u003cTask\u003e data \u003d this.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"        TaskList.TYPES type;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"            type \u003d Parser.findType(word);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"            Ui.formatResponse(\"Input task type invalid, please try again\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"            type \u003d TYPES.INVALID;","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"        switch (type) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"            case ALL:","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"                Ui.printList(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"            case MARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"                    int index \u003d Parser.findMarkIndex(word);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"                    data.get(index).mark();","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatMark(data.get(index));","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatResponse(\"Incorrect name or spelling for mark, please check\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatResponse(\"Incorrect arguments for mark, please check\");","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"                    int index \u003d Parser.findUnmarkIndex(word);","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"                    data.get(index).unmark();","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatUnmark(data.get(index));","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatResponse(\"Incorrect name or spelling for unmark, please check\");","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatResponse(\"Incorrect arguments for unmark, please check\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"            case TODO:","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"                    String todoMessage \u003d Parser.findTodoContent(word);","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"                    TODO todo \u003d new TODO(todoMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"                    data.add(todo);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatTask(todo, data.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatResponse(\"Incorrect arguments for todo, please check\");","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"peterXGD"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"                    String[] deadlineParts \u003d Parser.findDeadlineContent(word);","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"                    Deadline deadline \u003d new Deadline(deadlineParts[0], deadlineParts[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"                    data.add(deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatTask(deadline, data.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatResponse(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"            case EVENT:","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"                    String[] eventParts \u003d Parser.findEventParts(word);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"                    Event event \u003d new Event(eventParts[0], eventParts[1], eventParts[2]);","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"                    data.add(event);","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatTask(event, data.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"peterXGD"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatResponse(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"peterXGD"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"peterXGD"},"content":"            case DELETE:","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"peterXGD"},"content":"                    int index \u003d Parser.findDeleteIndex(word);","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatDelete(data.get(index), data.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"peterXGD"},"content":"                    data.remove(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"peterXGD"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatResponse(\"Incorrect name or spelling for delete, please check\");","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"                    Ui.formatResponse(\"Incorrect arguments for delete, please check\");","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"peterXGD"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"peterXGD"},"content":"            case INVALID:","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"peterXGD"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"peterXGD"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"peterXGD"},"content":"                Ui.formatResponse(\"Unknown command, please try again\");","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"peterXGD":110}},{"path":"src/main/java/venus/TimeFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"public class TimeFormatter {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"    public static LocalDate stringToTime(String s) throws DateTimeParseException {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"        String pattern \u003d \"yyyy-mm-dd\";","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        LocalDate ld \u003d LocalDate.parse(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"        return ld;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    public static LocalDate loadTimeFromString(String s) throws DateTimeParseException {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"        LocalDate ld \u003d LocalDate.parse(s, formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        return ld;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"peterXGD":19}},{"path":"src/main/java/venus/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"    private static final String START \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"            \"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"                    + \"    Hello! I\u0027m Venus\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"                    + \"    What can I do for you?\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"                    + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"    private static final String END \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"            \"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"                    + \"    Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"                    + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    private static final String BORDER \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    public static void formatResponse(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"        System.out.println(BORDER + \"     \" + message + \"\\n\" + BORDER);","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    public static void formatMark (Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"        Ui.formatResponse(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"                + task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    public static void formatUnmark (Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"        Ui.formatResponse(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"                + task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"    public static void formatTask (Task task, int size) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"        Ui.formatResponse(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"                + task.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"                + \"     Now you have \"+ size +\" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"    public static void formatDelete (Task task, int size) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"        Ui.formatResponse(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"                + task.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"                + \"     Now you have \" + (size - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"    public static void printList(TaskList tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"        System.out.println(BORDER","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"                + \"     Here are the tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"        for (Task s : tasks.getTasks()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"            System.out.println(\"     \" + i + \".\" + s);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"            i++;","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"        System.out.println(BORDER);","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"    public static String getStart() {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"        return START;","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"    public static String getEnd() {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"        return END;","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"peterXGD":64}},{"path":"src/main/java/venus/Venus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"public class Venus {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"    Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"    public Venus(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    public void run() throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"        System.out.println(Ui.getStart());","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        taskList.loadTasks(storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"        String words \u003d sc.nextLine().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"        while (!words.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"            taskList.setTasks(words);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"            words \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        sc.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"        taskList.saveTasks(storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        System.out.println(Ui.getEnd());","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"        Venus venus \u003d new Venus(\"data/venus.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"        venus.run();","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"todo borrow book","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"java -classpath ..\\bin venus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peterXGD":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"java -classpath ../bin Venus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peterXGD":1,"-":37}}]
