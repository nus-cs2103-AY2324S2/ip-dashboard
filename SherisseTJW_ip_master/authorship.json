[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"# Oak.Oak project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"3. After that, locate the `src/main/java/Oak.Oak.java` file, right-click it, and choose `Run Oak.Oak.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SherisseTJW":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    mainClass.set(\"Oak.Oak\")","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"    archiveBaseName \u003d \"oak\"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SherisseTJW":2,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"# Oak.Oak User Guide","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"SherisseTJW":1,"-":29}},{"path":"src/main/java/Oak/Oak.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import Oak.controller.TerminalController;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"public class Oak {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"        TerminalController controller \u003d new TerminalController();","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"        controller.start();","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"SherisseTJW":11}},{"path":"src/main/java/Oak/controller/TerminalController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.controller;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import Oak.exceptions.InvalidInputException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import Oak.feedback.FeedbackService;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import Oak.feedback.enums.CommandEnum;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":" * The type Terminal controller.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"public class TerminalController {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    private FeedbackService feedbackService \u003d new FeedbackService();","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     * Print welcome message and start listening for user inputs","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    public void start() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"        System.out.println(this.feedbackService.getWelcomeMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"        this.listen();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"     * Start listening for user inputs and prints out the messages obtained from FeedbackService","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"     * Exits when the user inputs \u0027bye\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    private void listen() {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        boolean stop \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        String feedback \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"        while (!stop) {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"            String curInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"            if (curInput.equals(CommandEnum.Bye.getCommandValue())) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"                stop \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"            else {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"                    feedback \u003d feedbackService.run(curInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"                catch (InvalidInputException | IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"            System.out.println(\"----------------------------------------------\");","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"            System.out.println(feedback);","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"            System.out.println(\"----------------------------------------------\");","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"SherisseTJW":55}},{"path":"src/main/java/Oak/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import Oak.feedback.enums.CommandEnum;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":" * The type Invalid input exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    public static class InvalidCommandException extends InvalidInputException {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"        /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"         * Instantiates a new Invalid command exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"         *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"         * @param invalidCommand the invalid command","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"         */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"        public InvalidCommandException(String invalidCommand) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"            super(\"Invalid Command: \" + invalidCommand + \" received.\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"                    \"Only the following commands are accepted:\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"                    Arrays.toString(CommandEnum.values()));","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    public static class InvalidFormatException extends InvalidInputException {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"        /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"         * Instantiates a new Invalid format exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"         *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"         * @param message the error message","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"         * @param command the command the user inputted","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"         */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"        public InvalidFormatException(String message, String command) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"            super(\"Invalid format for command \" + command + \" provided: \" + message);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"SherisseTJW":39}},{"path":"src/main/java/Oak/feedback/FeedbackService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.feedback;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import Oak.feedback.enums.CommandEnum;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import Oak.exceptions.InvalidInputException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import Oak.task.TaskService;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":" * The type Feedback service.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"public class FeedbackService {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    /** TaskService instance to be used */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    private TaskService taskService \u003d new TaskService();","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"     * Runs the feedback service on the user input","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"     * Parses the user input and calls the appropriate method in the Task Service","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"     * @param userInput the user input","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"     * @return the output string to the user in the terminal","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"     * @throws InvalidInputException the invalid input exception","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException           the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"    public String run(String userInput) throws InvalidInputException, IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"        String[] cur \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        CommandEnum curCommand \u003d CommandEnum.getCommandEnum(cur[0]);","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"        String feedback \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"        int taskId \u003d -1;","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"        if (curCommand \u003d\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"            throw new InvalidInputException.InvalidCommandException(cur[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"        // TODO: Exception Handling for incorrect input","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        //  - [ ] DateTimeParseException","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"        switch (curCommand) {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"            case Bye:","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d this.getExitMessage();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"            case List:","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d this.taskService.getAllTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"            case Mark:","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"                if (cur.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"                    throw new InvalidInputException.InvalidFormatException(\"No TaskId detected, please provide a TaskId\", cur[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"                    taskId \u003d Integer.parseInt(cur[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"                catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"                    throw new InvalidInputException.InvalidFormatException(\"Invalid TaskId detected, please provide the TaskId Number as seen in \u0027list\u0027 command\", cur[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d this.taskService.markTaskCompleted(taskId);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"            case Unmark:","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"                if (cur.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"                    throw new InvalidInputException.InvalidFormatException(\"No TaskId detected, please provide a TaskId\", cur[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"                    taskId \u003d Integer.parseInt(cur[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"                catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"                    throw new InvalidInputException.InvalidFormatException(\"Invalid TaskId detected, please provide the TaskId Number as seen in \u0027list\u0027 command\", cur[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d this.taskService.markTaskUncompleted(taskId);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"            case Todo:","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"                String taskName \u003d this.parseTodoInput(cur);","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d this.taskService.addTodo(taskName);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"            case Deadline:","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"                String[] deadLineValues \u003d this.parseDeadlineInput(cur);","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d this.taskService.addDeadline(deadLineValues[0], deadLineValues[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"            case Event:","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"                String[] eventValues \u003d this.parseEventInput(cur);","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d this.taskService.addEvent(eventValues[0], eventValues[1], eventValues[2]);","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"            case Delete:","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"                if (cur.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"                    throw new InvalidInputException.InvalidFormatException(\"No TaskId detected, please provide a TaskId\", cur[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"                    taskId \u003d Integer.parseInt(cur[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"                catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"                    throw new InvalidInputException.InvalidFormatException(\"Invalid TaskId detected, please provide the TaskId Number as seen in \u0027list\u0027 command\", cur[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d this.taskService.deleteTask(taskId);","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"        return feedback;","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"        // Logo generated from : https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dSub-Zero\u0026t\u003dOAK","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"        String logo \u003d","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"                \" ______     ______     __  __    \\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"                        \"/\\\\  __ \\\\   /\\\\  __ \\\\   /\\\\ \\\\/ /    \\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"                        \"\\\\ \\\\ \\\\/\\\\ \\\\  \\\\ \\\\  __ \\\\  \\\\ \\\\  _-.    \\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"                        \" \\\\ \\\\_____\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"SherisseTJW"},"content":"                        \"  \\\\/_____/   \\\\/_/\\\\/_/   \\\\/_/\\\\/_/ \\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"        return \"Hello from\\n\" + logo + \"\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"                \"----------------------------------------------\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"                \"Welcome! I\u0027m Professor Oak\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"                \"What can I do for you?\";","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"    public String getExitMessage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"        return \"Goodbye! Hope to see you again!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"     * Parses the input provided by the user for the \u0027Todo\u0027 command","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"     * @param input","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"     * @return the name of the Todo item","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"    private String parseTodoInput(String[] input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/34440330","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return Arrays.stream(input).skip(1).map(String::trim).collect(Collectors.joining(\" \"));","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Parses the input provided by the user for the \u0027Deadline\u0027 command","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param input","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @return A string array of the name of the task item, and the deadline provided by the user","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private String[] parseDeadlineInput(String[] input) throws InvalidInputException {","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/34440330","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String fullInput \u003d Arrays.stream(input).skip(1).collect(Collectors.joining(\" \"));","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String[] temp \u003d fullInput.split(\"/by\");","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (temp.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new InvalidInputException(\"No Due Date for Deadline detected. Please provide a Due Date by using \u0027/by\u0027\");","lastModifiedDate":"2024-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return new String[] { temp[0].strip(), temp[1].strip() };","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses the input provided by the user for the \u0027Event\u0027 command","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @param input","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @return A String Array of the name of the Task, the from datetime and the to datetime","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private String[] parseEventInput(String[] input) throws InvalidInputException {","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Sample Event Input: event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/34440330","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String fullInput \u003d Arrays.stream(input).skip(1).collect(Collectors.joining(\" \"));","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String[] temp \u003d fullInput.split(\"/from\");","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (temp.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new InvalidInputException(\"No From Datetime for Event detected. Please provide a From Datetime by using \u0027/from\u0027\");","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String[] datetimes \u003d temp[1].split(\"/to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (datetimes.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new InvalidInputException(\"No To Datetime for Event detected. Please provide a To Datetime by using \u0027/to\u0027\");","lastModifiedDate":"2024-01-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return new String[] { temp[0].strip(), datetimes[0].strip(), datetimes[1].strip() };","lastModifiedDate":"2024-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"SherisseTJW":135,"-":54}},{"path":"src/main/java/Oak/feedback/enums/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.feedback.enums;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"public enum CommandEnum {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"    Bye(\"bye\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"    List(\"list\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"    Mark(\"mark\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"    Unmark(\"unmark\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"    Delete(\"delete\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    Todo(\"todo\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    Deadline(\"deadline\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    Event(\"event\");","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    public final String commandValue;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    private CommandEnum(String commandValue) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"        this.commandValue \u003d commandValue;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    public String getCommandValue() {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"        return this.commandValue;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Reused from https://www.baeldung.com/java-search-enum-values, Section 3. Searching an Enum by Value","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static CommandEnum getCommandEnum(String value) {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        for (CommandEnum commandEnum : values()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            if (commandEnum.getCommandValue().equalsIgnoreCase(value)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                return commandEnum;","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherisseTJW":21,"-":13}},{"path":"src/main/java/Oak/resources/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"T|0|test","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"E|0|lecture|2019-12-12T08:00|2019-11-11T10:00","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"D|0|return book|2019-12-22T13:00","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"SherisseTJW":5}},{"path":"src/main/java/Oak/task/TaskService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import Oak.utility.FileUtility;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import Oak.task.model.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import Oak.task.model.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import Oak.task.model.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import Oak.task.model.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"public class TaskService {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    /** An Array of all the tasks in the system */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    /** The relative file path to the tasklist.txt where all the tasks are stored  */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    private final String tasklistFilePath \u003d \"/src/main/java/Oak/resources/tasklist.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    /** The separator for the tasklist.txt */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    private final String taskListSep \u003d \"\\\\|\";","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    /** An instance of the file utility class to load, save and delete tasks */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    private FileUtility fileUtility \u003d new FileUtility();","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    public TaskService() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"        this.loadTasks();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"     * Load tasks from the tasklist.txt (located at this.taskListFilePath), and calls a helper method, `parseTaskList` to parse each line to save it into this.tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    public void loadTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e fileData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"            fileData \u003d this.fileUtility.loadFile(this.tasklistFilePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"        catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"            System.out.println(\"Error reading file.. Unable to load tasks from \" + this.tasklistFilePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        for (String line : fileData) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"            this.parseTaskList(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"     * Saves the Task item in tasklist.txt (located at this.taskListFilePath)","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"     * @param task to be saved","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"    private void saveTask(Task task) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"        this.fileUtility.writeToFile(this.tasklistFilePath, task.toTaskListStringFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"     * Deletes the Task item from tasklist.txt (located at this.taskListFilePath)","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"     * @param task to be deleted","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"    private void removeTask(Task task) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"        this.fileUtility.removeLineFromFile(this.tasklistFilePath, task.toTaskListStringFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"     * Parses a line of the tasklist and adds the task to this.tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"     * @param line of the tasklist","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"    private void parseTaskList(String line) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"        String[] task \u003d line.split(this.taskListSep);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"        if (task.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"        Boolean isCompleted \u003d task[1].equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"        if (task[0].equals(Todo.typeIcon)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"            newTask \u003d new Todo(task[2], isCompleted);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"        else if (task[0].equals(Deadline.typeIcon)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"            newTask \u003d new Deadline(task[2], isCompleted, task[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"        else if (task[0].equals(Event.typeIcon)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"            newTask \u003d new Event(task[2], isCompleted, task[3], task[4]);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"        else {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"            // TODO: Throw invalid task Oak.type exception","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"            System.out.println(\"Invalid task detected\");","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"     * Add todo task to this.tasks, saves it and returns a string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskName the task name","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"    public String addTodo(String taskName) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"        Todo newTodo \u003d new Todo(taskName);","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"        this.tasks.add(newTodo);","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"        this.saveTask(newTodo);","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"Added new Todo: %s\", taskName);","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"     * Add deadline task to this.tasks, saves it and returns a string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskName   the task name","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"     * @param byDateTime the by date time","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"    public String addDeadline(String taskName, String byDateTime) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"        Deadline newDeadline \u003d new Deadline(taskName, byDateTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"        this.tasks.add(newDeadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"        this.saveTask(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"Added new Deadline: %s with Due Date: %s\", taskName, byDateTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"     * Add event task to this.tasks, saves it and returns a string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskName     the task name","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"     * @param fromDateTime the from date time","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"     * @param toDateTime   the to date time","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"SherisseTJW"},"content":"    public String addEvent(String taskName, String fromDateTime, String toDateTime) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"SherisseTJW"},"content":"        Event newEvent \u003d new Event(taskName, fromDateTime, toDateTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"SherisseTJW"},"content":"        this.tasks.add(newEvent);","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"SherisseTJW"},"content":"        this.saveTask(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"Added new Event: %s occurring from %s to %s\", taskName, fromDateTime, toDateTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"SherisseTJW"},"content":"     * Delete task from this.tasks and tasklist.txt (located at this.taskListFilePath)","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskId the task id","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"SherisseTJW"},"content":"    public String deleteTask(int taskId) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"SherisseTJW"},"content":"        Task removedTask \u003d this.tasks.remove(taskId);","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"SherisseTJW"},"content":"        this.removeTask(removedTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"Are you giving up? Or is this task no longer needed?\\nHmmm.. I\u0027ve deleted Task %s for you for now.\\nBut, I\u0027ll be watching you.\", taskId);","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"SherisseTJW"},"content":"     * Mark task completed","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskId the task id","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"SherisseTJW"},"content":"    public String markTaskCompleted(int taskId) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"SherisseTJW"},"content":"        // TODO: Exception handling for if task does not exist","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"SherisseTJW"},"content":"        // TODO: Fix, should also update tasklist.txt","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"SherisseTJW"},"content":"        String originalTaskString \u003d this.tasks.get(taskId).toTaskListStringFormat();","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"SherisseTJW"},"content":"        this.tasks.get(taskId).markTaskCompleted();","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"SherisseTJW"},"content":"        this.fileUtility.updateFile(this.tasklistFilePath, originalTaskString, this.tasks.get(taskId).toTaskListStringFormat());","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":176,"author":{"gitId":"SherisseTJW"},"content":"        return \"Ok! I\u0027ve marked Task \" + (taskId + 1) + \" as completed!\";","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":178,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":179,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"SherisseTJW"},"content":"     * Mark task uncompleted","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskId the task id","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"SherisseTJW"},"content":"    public String markTaskUncompleted(int taskId) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"SherisseTJW"},"content":"        // TODO: Exception handling for if task does not exist","lastModifiedDate":"2024-01-24"},{"lineNumber":187,"author":{"gitId":"SherisseTJW"},"content":"        String originalTaskString \u003d this.tasks.get(taskId).toTaskListStringFormat();","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"SherisseTJW"},"content":"        this.tasks.get(taskId).markTaskNotCompleted();","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"SherisseTJW"},"content":"        this.fileUtility.updateFile(this.tasklistFilePath, originalTaskString, this.tasks.get(taskId).toTaskListStringFormat());","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":191,"author":{"gitId":"SherisseTJW"},"content":"        return \"Hmmm, were you teasing me?\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":192,"author":{"gitId":"SherisseTJW"},"content":"                \"Well, I\u0027ve marked Task \" + (taskId + 1) +  \" as uncompleted,\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":193,"author":{"gitId":"SherisseTJW"},"content":"                \"But don\u0027t do this again, you hear me?\";","lastModifiedDate":"2024-01-24"},{"lineNumber":194,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":195,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":196,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"SherisseTJW"},"content":"     * Gets all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"SherisseTJW"},"content":"     * @return All the tasks, formatted in a string and seperated by \u0027\\n\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"SherisseTJW"},"content":"    public String getAllTasks() {","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"SherisseTJW"},"content":"        StringBuilder returnVal \u003d new StringBuilder();","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"SherisseTJW"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":205,"author":{"gitId":"SherisseTJW"},"content":"            returnVal.append(String.format(\"%d. %s\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2024-01-25"},{"lineNumber":206,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":207,"author":{"gitId":"SherisseTJW"},"content":"            // Only add new line if its not the last task","lastModifiedDate":"2024-01-25"},{"lineNumber":208,"author":{"gitId":"SherisseTJW"},"content":"            if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":209,"author":{"gitId":"SherisseTJW"},"content":"                returnVal.append(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":210,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":211,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":212,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":213,"author":{"gitId":"SherisseTJW"},"content":"        return returnVal.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":214,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":215,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherisseTJW":215}},{"path":"src/main/java/Oak/task/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.task.model;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import Oak.utility.DateTimeUtility;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    /** The icon this task is represented by */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    public static String typeIcon \u003d \"D\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    /** The datetime the task has to be completed by */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    public Deadline(String name, String byDateTime) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"        this.byDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(byDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    public Deadline(String name, Boolean isCompleted, String byDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"        super(name);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"        if (isCompleted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"            super.markTaskCompleted();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        this.byDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(byDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    public String toTaskListStringFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s|%s|%s\",","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"                Deadline.typeIcon, super.toTaskListStringFormat(), this.byDateTime.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        return Deadline.typeIcon;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s (by: %s)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"                super.toString(), DateTimeUtility.parseLocalDateTimeToString(this.byDateTime));","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"SherisseTJW":46}},{"path":"src/main/java/Oak/task/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.task.model;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import Oak.utility.DateTimeUtility;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"    /** The icon this task is represented by */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    public static String typeIcon \u003d \"E\";","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    public Event(String name, String fromDateTime, String toDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"        this.fromDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(fromDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"        this.toDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(toDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    public Event(String name, Boolean isCompleted, String fromDateTime, String toDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"        super(name);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"        if (isCompleted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"            super.markTaskCompleted();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        this.fromDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(fromDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"        this.toDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(toDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"    public String toTaskListStringFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s|%s|%s|%s\",","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"                Event.typeIcon, super.toTaskListStringFormat(),","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"                this.fromDateTime.toString(), this.toDateTime.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        return Event.typeIcon;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s (from: %s to: %s)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"                super.toString(), DateTimeUtility.parseLocalDateTimeToString(this.fromDateTime), DateTimeUtility.parseLocalDateTimeToString(this.toDateTime));","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"SherisseTJW":48}},{"path":"src/main/java/Oak/task/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.task.model;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"    /** Whether the task has been completed, Default value \u003d false */","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"    public Boolean isCompleted \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"    /** The name of the task */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"    public String name;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"     * Mark task completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    public void markTaskCompleted() {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"     * Mark task not completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    public void markTaskNotCompleted() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Reused from https://nus-cs2103-ay2324s2.github.io/website/schedule/week2/project.html, Level-3 Extension A-Classes Partial Solution","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // with only function name modification","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private String getCompletedIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts the current task to a string format to be saved in the task list","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the formatted string","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toTaskListStringFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String completedValue \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return String.format(\"%s|%s\", completedValue, this.name);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getCompletedIcon() + \"] \" + this.name;","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherisseTJW":26,"-":27}},{"path":"src/main/java/Oak/task/model/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.task.model;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"    /** The icon this task is represented by */","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"    public static String typeIcon \u003d \"T\";","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    public Todo(String name, Boolean isCompleted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"        super(name);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"        if (isCompleted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"            super.markTaskCompleted();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    public String toTaskListStringFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s|%s\",","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"                Todo.typeIcon, super.toTaskListStringFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        return Todo.typeIcon;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"SherisseTJW":29}},{"path":"src/main/java/Oak/utility/DateTimeUtility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.utility;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":" * The type Date time utility.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"public class DateTimeUtility {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"     * Parse string to local datetime local date time.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"     * @param rawDateTime the raw datetime","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     * @return the local datetime","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    public static LocalDateTime parseStringToLocalDateTime(String rawDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"            return LocalDateTime.parse(rawDateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"        catch (DateTimeParseException e) {}","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        // NOTE: We expect the user-input format to be: \"\u003cdate\u003e @ \u003ctime\u003e\"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"        String[] rawDateTimeArr \u003d rawDateTime.split(\"@\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        LocalDate date \u003d LocalDate.parse(rawDateTimeArr[0].strip());;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"        LocalTime time \u003d rawDateTimeArr.length \u003e 1 ? LocalTime.parse(rawDateTimeArr[1].strip()) : LocalTime.MIDNIGHT;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"     * Parse local datetime to string","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"     * @param dateTime the datetime","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"     * @return the parsed local datetime string","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    public static String parseLocalDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy @ HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"SherisseTJW":44}},{"path":"src/main/java/Oak/utility/FileUtility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package Oak.utility;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":" * The type File utility.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"public class FileUtility {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"     * Load file array list.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     * @param filename the filename","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     * @return the array list","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"     * @throws FileNotFoundException the file not found exception","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    public ArrayList\u003cString\u003e loadFile(String filename) throws FileNotFoundException {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(System.getProperty(\"user.dir\") + filename);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e fileData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"            fileData.add(scanner.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"        return fileData;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"     * Write to file.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"     * @param filename the filename","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"     * @param data     the data","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"    public void writeToFile(String filename, String data) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(System.getProperty(\"user.dir\") + filename);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"        data \u003d \"\\n\" + data;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        fw.write(data);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"        fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"     * Updates the file contents by replacing the line matching `originalData` with `newData`","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"     * @param filename","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"     * @param originalData","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"     * @param newData","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"    public void updateFile(String filename, String originalData, String newData) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(System.getProperty(\"user.dir\") + filename);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"        File tempFile \u003d new File(System.getProperty(\"user.dir\") + \"temp\");","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"        FileWriter fw \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e originalFileData \u003d this.loadFile(filename);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"        for (String line : originalFileData) {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"            if (line.equals(originalData)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"                fw.write(\"\\n\" + newData);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"            else {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"                fw.write(\"\\n\" + line);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"        fw.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"        file.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"        tempFile.renameTo(new File(System.getProperty(\"user.dir\") + filename));","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"     * Remove line from file.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"     * @param filename the filename","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"     * @param data     the data","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"    public void removeLineFromFile(String filename, String data) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(System.getProperty(\"user.dir\") + filename);","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"        File tempFile \u003d new File(System.getProperty(\"user.dir\") + \"temp\");","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"        FileWriter fw \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e originalFileData \u003d this.loadFile(filename);","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"        for (String line : originalFileData) {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"            if (line.equals(data)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"            line \u003d \"\\n\" + line;","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"            fw.write(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"        fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"        file.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"        tempFile.renameTo(new File(System.getProperty(\"user.dir\") + filename));","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"SherisseTJW":103}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"java -classpath ..\\bin Oak.Oak \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SherisseTJW":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"INPUT_FOLDER\u003d\"./Input\"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"EXPECTED_FOLDER\u003d\"./Expected\"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"for input_file in \"$INPUT_FOLDER\"/*; do","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"  expected_file\u003d\"$EXPECTED_FOLDER/$(basename \"$input_file\")\"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  # delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  fi","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  # compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"  java -classpath ../bin Duke \u003c \"$input_file\" \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  # convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"  cp \"$expected_file\" EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"#  dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  # compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"  # -w flag: Ignore whitespaces","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"  diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"      echo \"Test result for $(basename \"$input_file\"): PASSED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"      echo \"Test result for $(basename \"$input_file\"): FAILED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  fi","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"done","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"exit 0","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"SherisseTJW":15,"-":31}}]
