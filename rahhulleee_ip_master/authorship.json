[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"rahhulleee":2}},{"path":"data/rah.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"[D][ ] Kill Bill (by: 4/1/2023 2000hrs)","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"rahhulleee":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"import duke.ui.Output;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * Entry point of the Duke task management application.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":" * This class initializes the application\u0027s core components, including storage, parser, and output handling.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":" * It manages the main application loop, processing user inputs through the command line interface and","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":" * executing corresponding actions until the user decides to exit. The application supports tasks such as","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":" * adding, listing, marking, and deleting tasks, with changes persistently stored in a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"public class Duke {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"     * Starts the application and manages the main user interaction loop.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"     * This method sets up the necessary components for the application to run: storage for task persistence,","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"     * a parser for interpreting user commands, and an output handler for generating user-facing messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"     * It reads user input from the command line, processes it, and provides feedback until the \"bye\" command","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"     * is issued. Changes to tasks are saved to a file, ensuring persistence across application sessions.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"     * @param args Command line arguments passed to the application (not used).","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"        Parser parser \u003d new Parser(storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"        Output output \u003d new Output(parser, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"        System.out.println(output.welcome());","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"        while (true) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"                System.out.println(output.execute(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"                System.out.println(output.execute(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"rahhulleee"},"content":"            //writing into the file","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"rahhulleee"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"rahhulleee"},"content":"                storage.writeToFile(storage.load());","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"rahhulleee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"rahhulleee"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"rahhulleee"},"content":"        sc.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }   ","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"rahhulleee":52}},{"path":"src/main/java/duke/actions/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.actions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" * Facilitates adding tasks to the Duke application\u0027s storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * This class represents an action to add a new task into the storage system of the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" * It holds a reference to the storage where the task needs to be added and the task itself.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * After adding a task, the class can also provide a string representation of the addition to be used","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" * for output in the Parser class, indicating the successful addition of the task and the total number","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":" * of tasks currently stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"public class AddTask {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"    private Task t;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"    public AddTask(Storage storage, Task t) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"        this.t \u003d t;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"     * Adds a task to the storage\u0027s list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"     * This method accesses the storage to retrieve the current list of tasks and appends the task represented by","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"     * the {@code t} instance variable to this list.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"    public void add() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"        this.storage.load().add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"        String temp \u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"        temp +\u003d \" \" + this.storage.load().get(this.storage.load().size() - 1).toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"        temp +\u003d \"\\nNow you have \" + this.storage.load().size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"        return temp;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"rahhulleee":42}},{"path":"src/main/java/duke/actions/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.actions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" * Handles the deletion of tasks from the Duke application\u0027s storage based on their index.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * This class encapsulates the functionality required to delete a task from the storage\u0027s list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" * It is constructed with a reference to the storage and the index of the task to be deleted. The deletion","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * process involves removing the task from the storage\u0027s task list and storing the deleted task\u0027s string","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" * representation for feedback purposes. The {@code toString} method provides a message that includes the","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":" * details of the deleted task and the updated total number of tasks in storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"public class DeleteTask {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"    private int index;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"    private String task;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"    public DeleteTask(Storage storage, int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"        this.task \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"     * Deletes a task from the storage\u0027s list of tasks based on its index.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"     * This method removes the task at the specified index from the storage\u0027s ArrayList of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"     * The index is adjusted to account for list indexing starting at 0. Before removal, the task\u0027s","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"     * string representation is stored in {@code this.task} to allow for reporting what was deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"    public void delete() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"        this.task \u003d storage.load().get(index - 1).toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"        storage.load().remove(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"        String temp \u003d \"Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"        temp +\u003d \" \" + this.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"        temp +\u003d \"\\nNow you have \" + storage.load().size() + \" tasks in this list.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"rahhulleee"},"content":"        return temp;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"rahhulleee":51}},{"path":"src/main/java/duke/actions/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.actions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" * A class representing the action of finding tasks in a task management application.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * Searches for tasks based on a specified keyword and provides a list of matching tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * ","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" * @author SITHANATHAN RAHUL","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * @version CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":"public class FindTask {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"    private String task;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"    private ArrayList\u003cTask\u003e matches;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"     * Constructs a FindTask object with the given storage and task keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"     * @param storage The Storage object responsible for loading tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"     * @param task    A String representing the keyword to search for in tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"    public FindTask(Storage storage, String task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"        this.matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"     * Creates a list of tasks that match the specified keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"     * @return An ArrayList of Task objects matching the specified keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"    public void createMatches() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"        ArrayList\u003cTask\u003e inventory \u003d storage.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"        for (int i \u003d 0; i \u003c inventory.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"            Task t \u003d inventory.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"            if (t.getDescription().toLowerCase().contains(this.task.toLowerCase())) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"                this.matches.add(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"rahhulleee"},"content":"     * Returns a formatted String representation of the matching tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"rahhulleee"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"rahhulleee"},"content":"     * @return A String displaying the matching tasks or an apology if none are found.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"rahhulleee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"rahhulleee"},"content":"        if (this.matches.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"rahhulleee"},"content":"            return \"Sorry :( ! There are no such tasks.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"rahhulleee"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"rahhulleee"},"content":"            StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks on your list!: \\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"rahhulleee"},"content":"            int count \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"rahhulleee"},"content":"            for (Task t : this.matches) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"rahhulleee"},"content":"                result.append(count + \": \" + t.toString()).append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"rahhulleee"},"content":"                count++;","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"rahhulleee"},"content":"            return result.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"rahhulleee":65}},{"path":"src/main/java/duke/actions/ListTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.actions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":" * Provides functionality to list all tasks currently stored in the Duke application\u0027s storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * This class is designed to access the application\u0027s storage system and retrieve a formatted list","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * of all tasks. Each task is presented alongside its index in the storage list, offering a clear","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" * overview of all tasks to the user. In case the storage list is empty, the class will return a","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * simple message indicating that no tasks are available. This functionality supports the user\u0027s","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" * ability to view all their tasks at a glance.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"public class ListTask {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"    public ListTask(Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"     * Generates a string representation of all tasks in the storage\u0027s task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"     * This method iterates through the ArrayList of tasks in the storage, appending each task\u0027s","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"     * string representation to the result string, prefixed by its list index. If the list is empty,","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"     * it returns a message indicating that the list is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"     * @return A string listing all tasks with their index in the list, or a message if the list is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"    public String list() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"        if (storage.load().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"            return \"List is Empty !\";","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"        for (Task s : storage.load()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"            result +\u003d count + \". \" + s.toString() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"            count++;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"        return result;","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"rahhulleee":45}},{"path":"src/main/java/duke/actions/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.actions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":" * Enables marking of tasks as completed within the Duke application\u0027s storage system.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" * This class is tasked with identifying a specific task by its index and updating its status to reflect completion.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * Constructed with references to the storage system and the target task\u0027s index, it facilitates the marking process,","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * ensuring that the designated task is accurately flagged as done. The operation is confirmed through a message","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" * detailing the task\u0027s new status, providing immediate feedback to the user on the successful update.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":"public class MarkTask {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"    private int index;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"    public MarkTask(Storage storage, int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"     * Marks a task as done based on its index in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"     * This method updates the status of a specified task to \"completed\" and generates a confirmation message.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"     * It retrieves the task by its index (adjusted for zero-based indexing) from the storage\u0027s list of tasks,","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"     * marks the task as done, and returns a message indicating the task has been successfully marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"     * @return A string message confirming the task has been marked as done, along with the task\u0027s details.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"    public String mark() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"        storage.load().get(index - 1).mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"        String temp \u003d \"Nice! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"        temp +\u003d storage.load().get(index - 1).toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"        return temp;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"rahhulleee":39}},{"path":"src/main/java/duke/actions/UnmarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.actions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":" * Manages the unmarking of tasks within the Duke application, setting them as not completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" * This class provides the functionality to change the status of a specific task from \"completed\" to \"not completed\"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * based on its index in the task list. It is instantiated with a reference to the storage where tasks are maintained","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * and the index of the task to be updated. This action is part of the application\u0027s task management capabilities,","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" * allowing users to dynamically adjust task statuses as needed.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":"public class UnmarkTask {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"    private int index;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"    public UnmarkTask(Storage storage, int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"     * Marks the specified task as not done based on its index attribute.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"     * This method accesses the task identified by the given index in the storage\u0027s task list and updates its status to","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"     * \"not done.\" It constructs and returns a confirmation message that includes the task\u0027s details, indicating to the","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"     * user that the task status has been successfully updated.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"     * @return A string message confirming the task has been marked as not done, along with the task\u0027s details.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"    public String unmark() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"        storage.load().get(index - 1).unmark();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"        String temp \u003d \"OK, I\u0027ve marked this task as not done yet: \\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"        temp +\u003d storage.load().get(index - 1).toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"        return temp;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"rahhulleee":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rahhulleee":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import java.util.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.Deadlines;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.Events;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":"import duke.actions.AddTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":"import duke.actions.DeleteTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":"import duke.actions.ListTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":"import duke.actions.MarkTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":"import duke.actions.UnmarkTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"import duke.actions.FindTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":" * The Parser class is responsible for interpreting user input and executing corresponding task operations.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":" * It serves as the intermediary between the user interface and the application\u0027s logic, parsing the input","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":" * commands to perform actions such as adding, listing, marking, unmarking, deleting tasks, and handling","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":" * task-related exceptions. The class supports a variety of commands, including \"todo\", \"deadline\", \"event\",","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":" * \"mark\", \"unmark\", and \"delete\", each requiring specific input formats and handling potential input errors","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":" * through custom exceptions.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":" * Upon receiving input, the Parser decodes the command, validates it, and then initiates the appropriate action","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":" * by creating instances of action classes like AddTask, DeleteTask, ListTask, MarkTask, and UnmarkTask, or directly","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":" * manipulating tasks through the storage class. It also provides feedback or error messages based on the outcomes","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":" * of operations or the nature of exceptions encountered.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":" * @see duke.storage.Storage","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":" * @see duke.tasks.Task","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":" * @see duke.exception.DukeException","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"    ","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"rahhulleee"},"content":"    public Parser(Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"rahhulleee"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"rahhulleee"},"content":"     * Parses the input command to perform task operations such as adding, listing, marking, unmarking, and deleting tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"rahhulleee"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"rahhulleee"},"content":"     * This method handles user input, executing commands based on the input string. It supports operations for managing tasks,","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"rahhulleee"},"content":"     * including \"todo\", \"deadline\", \"event\", and status updates like \"mark\" and \"unmark\". Error handling is implemented for invalid","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"rahhulleee"},"content":"     * inputs or commands through custom exceptions.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"rahhulleee"},"content":"     * @param input The user input string representing a command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"rahhulleee"},"content":"     * @return A response message indicating the outcome of the operation, including error messages for invalid inputs.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"rahhulleee"},"content":"     * @throws DukeException If the input is invalid or does not meet command requirements.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"rahhulleee"},"content":"    public String parse(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"rahhulleee"},"content":"        ArrayList\u003cTask\u003e inventory \u003d storage.load();","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"rahhulleee"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"rahhulleee"},"content":"            if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"rahhulleee"},"content":"                if (!input.trim().equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! This is an invalid call of list command.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"rahhulleee"},"content":"                } ","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"rahhulleee"},"content":"                else {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"rahhulleee"},"content":"                    ListTask lister \u003d new ListTask(storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"rahhulleee"},"content":"                    return lister.list();","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"rahhulleee"},"content":"            } ","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"rahhulleee"},"content":"            else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"rahhulleee"},"content":"                if (input.trim().equals(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! Invalid Command, highlight which task to mark\");","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"rahhulleee"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"rahhulleee"},"content":"                    int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"rahhulleee"},"content":"                    if (index \u003c 1 || index \u003e inventory.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"rahhulleee"},"content":"                        throw new DukeException(\"OOPS!!! The task number you are trying to mark does not exist. \");","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"rahhulleee"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"rahhulleee"},"content":"                    MarkTask marker \u003d new MarkTask(storage, index);","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"rahhulleee"},"content":"                    return marker.mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"rahhulleee"},"content":"            } ","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"rahhulleee"},"content":"            else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"rahhulleee"},"content":"                if (input.trim().equals(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! Invalid Command, highlight which task to unmark\");","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"rahhulleee"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"rahhulleee"},"content":"                    int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"rahhulleee"},"content":"                    if (index \u003c 1 || index \u003e inventory.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"rahhulleee"},"content":"                        throw new DukeException(\"OOPS!!! The task number you are trying to unmark does not exist. \");","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"rahhulleee"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"rahhulleee"},"content":"                    UnmarkTask unmarker \u003d new UnmarkTask(storage, index);","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"rahhulleee"},"content":"                    return unmarker.unmark();","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"rahhulleee"},"content":"            } ","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"rahhulleee"},"content":"            else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"rahhulleee"},"content":"                if (input.trim().equals(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"rahhulleee"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"rahhulleee"},"content":"                    String task \u003d input.substring(5);","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"rahhulleee"},"content":"                    ToDo todoTask \u003d new ToDo(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"rahhulleee"},"content":"                    AddTask adder \u003d new AddTask(storage, todoTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"rahhulleee"},"content":"                    adder.add();","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"rahhulleee"},"content":"                    return adder.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"rahhulleee"},"content":"            else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"rahhulleee"},"content":"                String valid_format \u003d \"Please input in format: *deadline* *TASK* /*by yyyy-mm-dd TIME*\";","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"rahhulleee"},"content":"                if (input.trim().equals(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty. \" + valid_format);","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"rahhulleee"},"content":"                } ","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"rahhulleee"},"content":"                else if (!input.contains(\"/\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! Your deadline command\u0027s format is invalid. \" + valid_format);","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"rahhulleee"},"content":"                } ","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"rahhulleee"},"content":"                else if (input.substring(9).split(\"/\").length \u003c 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! Your deadline command\u0027s format is invalid. \" + valid_format);","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"rahhulleee"},"content":"                else {","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"rahhulleee"},"content":"                    String[] parts \u003d input.substring(9).split(\"/\");","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"rahhulleee"},"content":"                    LocalDateTime dateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"rahhulleee"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"rahhulleee"},"content":"                        String dateTimeString \u003d parts[1].substring(3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"rahhulleee"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"rahhulleee"},"content":"                        dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"rahhulleee"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"rahhulleee"},"content":"                    catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"rahhulleee"},"content":"                        throw new DukeException(\"OOPS!!! The date format is invalid. \" + valid_format);","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"rahhulleee"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"rahhulleee"},"content":"                    Deadlines deadlineTask \u003d new Deadlines(parts[0], dateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"rahhulleee"},"content":"                    AddTask adder \u003d new AddTask(storage, deadlineTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"rahhulleee"},"content":"                    adder.add();","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"rahhulleee"},"content":"                    String temp \u003d adder.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"rahhulleee"},"content":"                    ","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"rahhulleee"},"content":"                    //Also include the tasks with the same deadline as the following task.","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"rahhulleee"},"content":"                    String similarities \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"rahhulleee"},"content":"                    int counter \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"rahhulleee"},"content":"                    for (int i \u003d 0; i \u003c inventory.size() - 1; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"rahhulleee"},"content":"                        Task t \u003d inventory.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"rahhulleee"},"content":"                        if (!t.identifier().equals(\"[D]\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"rahhulleee"},"content":"                            continue;","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"rahhulleee"},"content":"                        }","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"rahhulleee"},"content":"                        if (t.getDeadline().equals(dateTime.toLocalDate())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"rahhulleee"},"content":"                            similarities +\u003d counter + \": \" + t.toString() + \"\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"rahhulleee"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"rahhulleee"},"content":"                        counter++;","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"rahhulleee"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"rahhulleee"},"content":"                    if (similarities.isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"rahhulleee"},"content":"                        temp +\u003d \"\\n\\n\\nThere are no other deadlines on the same day as this Task\u0027s deadline :)\";","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"rahhulleee"},"content":"                        return temp;","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"rahhulleee"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"rahhulleee"},"content":"                        temp +\u003d \"\\n\\n\\nThe following are the tasks with the same deadlines!: \\n\" + similarities;","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"rahhulleee"},"content":"                        return temp;","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"rahhulleee"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"rahhulleee"},"content":"            else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"rahhulleee"},"content":"                String valid_format \u003d \"Please input in the format: Event *TASK* /*from YYYY-MM-DD TIME* /*to YYYY-MM-DD TIME*\";","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"rahhulleee"},"content":"                if (input.trim().equals(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! The description of a event cannot be empty. \" + valid_format);","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"rahhulleee"},"content":"                else if (!input.contains(\"/\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! Your event command\u0027s format is invalid. \" + valid_format);","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"rahhulleee"},"content":"                } else if (input.substring(6).split(\"/\").length \u003c 3) {","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! Your event command\u0027s format is invalid. \" + valid_format);","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"rahhulleee"},"content":"                }  ","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"rahhulleee"},"content":"                else { ","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"rahhulleee"},"content":"                    String[] parts \u003d input.substring(6).split(\"/\");","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"rahhulleee"},"content":"                    LocalDateTime dateTime1;","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"rahhulleee"},"content":"                    LocalDateTime dateTime2;","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"rahhulleee"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"rahhulleee"},"content":"                        String dateTimeString1 \u003d parts[1].substring(5).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"rahhulleee"},"content":"                        String dateTimeString2 \u003d parts[2].substring(3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"rahhulleee"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"rahhulleee"},"content":"                        dateTime1 \u003d LocalDateTime.parse(dateTimeString1, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"rahhulleee"},"content":"                        dateTime2 \u003d LocalDateTime.parse(dateTimeString2, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"rahhulleee"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"rahhulleee"},"content":"                    catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"rahhulleee"},"content":"                        throw new DukeException(\"OOPS!!! The date format is invalid. \" + valid_format);","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"rahhulleee"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"rahhulleee"},"content":"                    Events eventTask \u003d new Events(parts[0], dateTime1, dateTime2);","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"rahhulleee"},"content":"                    AddTask adder \u003d new AddTask(storage, eventTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"rahhulleee"},"content":"                    adder.add();","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"rahhulleee"},"content":"                    return adder.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"rahhulleee"},"content":"            else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"rahhulleee"},"content":"                String valid_format \u003d \"Please input in format: delete *index*\";","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"rahhulleee"},"content":"                if (input.trim().equals(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!!! Invalid delete command \" + valid_format);","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"rahhulleee"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"rahhulleee"},"content":"                    int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"rahhulleee"},"content":"                    if (index \u003c 1 || index \u003e inventory.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"rahhulleee"},"content":"                        throw new DukeException(\"OOPS!!! The task number you are trying to delete does not exist. \");","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"rahhulleee"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"rahhulleee"},"content":"                    DeleteTask deleter \u003d new DeleteTask(storage, index);","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"rahhulleee"},"content":"                    deleter.delete();","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"rahhulleee"},"content":"                    return deleter.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"rahhulleee"},"content":"            else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"rahhulleee"},"content":"                String valid_format \u003d \"Please input in format: find *Task*\";","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"rahhulleee"},"content":"                if (input.trim().equals(\"find\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"rahhulleee"},"content":"                    throw new DukeException(\"OOPS!! Invalid find command \" + valid_format);","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"rahhulleee"},"content":"                } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"rahhulleee"},"content":"                    String task \u003d input.substring(5);","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"rahhulleee"},"content":"                    FindTask finder \u003d new FindTask(storage, task);","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"rahhulleee"},"content":"                    finder.createMatches();","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"rahhulleee"},"content":"                    return finder.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":210,"author":{"gitId":"rahhulleee"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":211,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":212,"author":{"gitId":"rahhulleee"},"content":"            else {","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"rahhulleee"},"content":"                return \"OOPS!!! I\u0027m sorry, but that\u0027s an invalid command :-(\";","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":215,"author":{"gitId":"rahhulleee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":216,"author":{"gitId":"rahhulleee"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":217,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"rahhulleee":219}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * Manages storage operations for Duke application tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":" * This class handles the loading, adding, and saving of task objects to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":" * It maintains an in-memory list of tasks for quick access and manipulation.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"    private static final String FILE_NAME \u003d \"rah.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"    private static final Path PROJECT_DIR \u003d Paths.get(System.getProperty(\"user.dir\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"    private static final Path DATA_DIR \u003d Paths.get(PROJECT_DIR.toString(), \"data\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"    private static final Path FILE_PATH \u003d Paths.get(DATA_DIR.toString(), FILE_NAME);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e inventory) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"        File file \u003d FILE_PATH.toFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"        // Ensure the directory exists","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"        try (FileWriter fw \u003d new FileWriter(file, false)) { // false to overwrite","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"            for (Task task : inventory) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"                fw.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"        tasks.add(t);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"rahhulleee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"rahhulleee"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"rahhulleee"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"rahhulleee"},"content":"        for (Task s : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"rahhulleee"},"content":"            result.append(count).append(\". \").append(s.toString()).append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"rahhulleee"},"content":"            count++;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"rahhulleee"},"content":"        return result.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"rahhulleee":55}},{"path":"src/main/java/duke/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" * A class representing a Deadlines task, a type of Task in a task management application.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * Provides additional functionality to handle tasks with specific deadlines.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" * ","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * @author SITHANATHAN RAHUL","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" * @version CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"    private LocalDateTime actualDeadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"     * Constructs a Deadlines task with the given description and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"     * The task is initially marked as not completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"     * @param description    A String describing the Deadlines task.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"     * @param actualDeadline The LocalDateTime representing the deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"    public Deadlines(String description, LocalDateTime actualDeadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"        this.actualDeadline \u003d actualDeadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"     * Returns the deadline date of the Deadlines task.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"     * @return LocalDate representing the deadline date of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"        return this.getAbsoluteDeadline().toLocalDate();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"     * Returns the absolute deadline of the Deadlines task.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"     * @return LocalDateTime representing the absolute deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"    public LocalDateTime getAbsoluteDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"rahhulleee"},"content":"        return this.actualDeadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"rahhulleee"},"content":"     * Returns a String representation of the Deadlines task, indicating its completion status and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"rahhulleee"},"content":"     * @return A formatted String indicating the completion status, description, and deadline of the Deadlines task.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"rahhulleee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"rahhulleee"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\u0027hrs\u0027\");","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"rahhulleee"},"content":"        if (this.isMarked()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"rahhulleee"},"content":"            return \"[D][X] \" + super.toString() + \"(by: \" + this.getAbsoluteDeadline().format(outputFormatter) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"rahhulleee"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"rahhulleee"},"content":"            return \"[D][ ] \" + super.toString() + \"(by: \" + this.getAbsoluteDeadline().format(outputFormatter) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"rahhulleee"},"content":"     * Returns a String identifier for the Deadlines task.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"rahhulleee"},"content":"     * @return A String identifier specific to Deadlines tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"rahhulleee"},"content":"    public String identifier() {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"rahhulleee"},"content":"        return \"[D]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rahhulleee":73}},{"path":"src/main/java/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" * A class representing an Events task, a type of Task in a task management application.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * Provides additional functionality to handle events with specific start and end times.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" * ","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" * @author SITHANATHAN RAHUL","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":" * @version CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"    private LocalDateTime actualStart;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"    private LocalDateTime actualEnd;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"     * Constructs an Events task with the given description, start time, and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"     * The task is initially marked as not completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"     * @param description  A String describing the Events task.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"     * @param actualStart  The LocalDateTime representing the start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"     * @param actualEnd    The LocalDateTime representing the end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"    public Events(String description, LocalDateTime actualStart, LocalDateTime actualEnd) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"        this.actualStart \u003d actualStart;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"        this.actualEnd \u003d actualEnd;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"     * Returns a String representation of the Events task, indicating its completion status and event times.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"     * @return A formatted String indicating the completion status, description, and event times of the Events task.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\u0027hrs\u0027\");","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"        if (this.isMarked()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"            return \"[E][X] \" + super.toString() + \"(from: \" + this.actualStart.format(outputFormatter) +","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"                    \" to: \" + this.actualEnd.format(outputFormatter) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"            return \"[E][ ] \" + super.toString() + \"(from: \" + this.actualStart.format(outputFormatter) +","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"rahhulleee"},"content":"                    \", to: \" + this.actualEnd.format(outputFormatter) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"rahhulleee"},"content":"     * Returns a String identifier for the Events task.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"rahhulleee"},"content":"     * @return A String identifier specific to Events tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"rahhulleee"},"content":"    public String identifier() {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"rahhulleee"},"content":"        return \"[E]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"rahhulleee"},"content":"     * Returns the deadline of the Events task.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"rahhulleee"},"content":"     * Since Events tasks do not have traditional deadlines, it returns null.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"rahhulleee"},"content":"     * @return null since Events tasks do not have traditional deadlines.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"rahhulleee"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"rahhulleee"},"content":"        return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rahhulleee":70}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":" * An abstract class representing a generic Task in a task management application.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":" * All specific task types should extend this class.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" * Provides basic functionality for task manipulation such as marking and retrieving deadlines.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * ","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * @author SITHANATHAN RAHUL","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" * @version CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":"abstract public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"    private boolean marked;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"     * The task is initially marked as not completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"     * @param description A String describing the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"    Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"        this.marked \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"    public void mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"        this.marked \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"     * Unmarks the task as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"        this.marked \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"     * Checks if the task is marked as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"     * @return true if the task is marked as completed, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"rahhulleee"},"content":"    public boolean isMarked() {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"rahhulleee"},"content":"        return this.marked;","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"rahhulleee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"rahhulleee"},"content":"        return this.description;","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"rahhulleee"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"rahhulleee"},"content":"     * @return A String describing the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"rahhulleee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"rahhulleee"},"content":"        return this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"rahhulleee"},"content":"     * Abstract method to be implemented by subclasses.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"rahhulleee"},"content":"     * Returns a String identifier specific to the type of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"rahhulleee"},"content":"     * @return A String identifier for the task type.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"rahhulleee"},"content":"    abstract public String identifier();","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"rahhulleee"},"content":"     * Abstract method to be implemented by subclasses.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"rahhulleee"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"rahhulleee"},"content":"     * @return LocalDate representing the deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"rahhulleee"},"content":"    abstract public LocalDate getDeadline();","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rahhulleee":81}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":" * A class that represents a ToDo task, a type of Task in a task management application.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":" * @author SITHANATHAN RAHUL","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":" * @version CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"     * @param description A String describing the ToDo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"     * Returns a String representation of the ToDo task, indicating its completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"     * @return A formatted String indicating the completion status and description of the ToDo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"        if (this.isMarked()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"            return \"[T][X] \" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"            return \"[T][ ] \" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"     * Returns a String identifier for the ToDo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"     * @return A String identifier specific to ToDo tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"    public String identifier() {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"        return \"[T]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"rahhulleee"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"rahhulleee"},"content":"     * Returns the deadline of the ToDo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"rahhulleee"},"content":"     * Since ToDo tasks do not have deadlines, it returns the current date.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"rahhulleee"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"rahhulleee"},"content":"     * @return LocalDate representing the current date.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"rahhulleee"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"rahhulleee"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"rahhulleee"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"rahhulleee"},"content":"        return LocalDate.now();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rahhulleee":57}},{"path":"src/main/java/duke/ui/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"public class Output {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":"    public Output(Parser parser, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"    public static final String LOGO \u003d \" _____   _____  _    _ \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"    + \"|  __ \\\\ / ____|| |  | |\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"    + \"| |__) | (___  | |__| |\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"    + \"|  _  / \\\\___ \\\\ |  __  |\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"rahhulleee"},"content":"    + \"| | \\\\ \\\\ ____) || |  | |\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"rahhulleee"},"content":"    + \"|_|  \\\\_|_____/ |_|  |_|\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"rahhulleee"},"content":"    public static String layer(String s) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"rahhulleee"},"content":"        String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"rahhulleee"},"content":"        return line + \"\\n\" + s + \"\\n\" + line; ","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"rahhulleee"},"content":"    public String welcome() {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"rahhulleee"},"content":"        return layer(\"Hello! I\u0027m \\n\" + LOGO + \"What can I do for you?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"rahhulleee"},"content":"    public String bye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"rahhulleee"},"content":"        return layer(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"rahhulleee"},"content":"    public String execute(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"rahhulleee"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"rahhulleee"},"content":"            return this.bye();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"rahhulleee"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"rahhulleee"},"content":"            return layer(this.parser.parse(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"rahhulleee"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"rahhulleee":45}},{"path":"src/test/java/duke/tests/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.tests;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.Deadlines;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":"    public void Deadline_toString(){","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2020, 1, 1, 19, 0);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":"        assertEquals(\"[D][ ] Find Bill(by: 1/1/2020 1900hrs)\", new Deadlines(\"Find Bill\", dateTime).toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"rahhulleee":16}},{"path":"src/test/java/duke/tests/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.tests;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.Events;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":"public class EventTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":"    public void ToDo_toString(){","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":"        LocalDateTime dateTime1 \u003d LocalDateTime.of(2020, 1, 1, 15, 0);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"rahhulleee"},"content":"        LocalDateTime dateTime2 \u003d LocalDateTime.of(2020, 1, 1, 16, 0);","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"rahhulleee"},"content":"        assertEquals(\"[E][ ] Meet Prof Damith(from: 1/1/2020 1500hrs, to: 1/1/2020 1600hrs)\",","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"rahhulleee"},"content":"                    new Events(\"Meet Prof Damith\", dateTime1, dateTime2).toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"rahhulleee":18}},{"path":"src/test/java/duke/tests/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahhulleee"},"content":"package duke.tests;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"rahhulleee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"rahhulleee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"rahhulleee"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"rahhulleee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"rahhulleee"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"rahhulleee"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"rahhulleee"},"content":"    public void ToDo_toString(){","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"rahhulleee"},"content":"        assertEquals(\"[T][ ] homework\", new ToDo(\"homework\").toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"rahhulleee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"rahhulleee"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"rahhulleee":13}}]
